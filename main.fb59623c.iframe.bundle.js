(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./.storybook/helpers.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return iconNames})),__webpack_require__.d(__webpack_exports__,"a",(function(){return boolean})),__webpack_require__.d(__webpack_exports__,"d",(function(){return setKnobs})),__webpack_require__.d(__webpack_exports__,"e",(function(){return setTheme})),__webpack_require__.d(__webpack_exports__,"g",(function(){return toggleCentered})),__webpack_require__.d(__webpack_exports__,"b",(function(){return createSteps})),__webpack_require__.d(__webpack_exports__,"f",(function(){return stepStory}));var _esri_calcite_ui_icons__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@esri/calcite-ui-icons/index.js"),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),screener_storybook_src_screener__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/screener-storybook/src/screener.js"),_src_utils_resources__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/resources.ts"),iconNames=Object.keys(_esri_calcite_ui_icons__WEBPACK_IMPORTED_MODULE_0__).filter((function(iconName){return iconName.endsWith("16")})).map((function(iconName){return iconName.replace("16","")})),boolean=function(prop,value){var standalone=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],knob=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)(prop,value),propValue=standalone&&knob||!standalone?prop:"",attrValue=standalone?"":`="${knob}"`;return`${propValue}${attrValue}`},setKnobs=function(_ref){return`window.location.href = "?path=/story/${_ref.story}${_ref.knobs.map((function(_ref2){return`&knob-${_ref2.name}=${_ref2.value}`})).join("")}"`},setTheme=function(value){return`${_src_utils_resources__WEBPACK_IMPORTED_MODULE_3__.b.map((function(theme){return`document.body.classList.toggle('${theme.className}', ${(theme.name===value).toString()});`})).join("")}\n`},toggleCentered="document.body.classList.toggle('sb-main-centered');",createSteps=function(componentSelector){return(new screener_storybook_src_screener__WEBPACK_IMPORTED_MODULE_2__.Steps).wait(`${componentSelector}[calcite-hydrated]`)},stepStory=function(story,steps){var stepsDecorator=function(Story){var node=document.createRange().createContextualFragment(Story());return node.steps=steps.end(),node};return story.decorators?story.decorators.push(stepsDecorator):story.decorators=[stepsDecorator],story}},"./.storybook/preview.ts-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"decorators",(function(){return decorators})),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),decorators=[__webpack_require__("./node_modules/storybook-rtl-addon/dist/index.js").withDirection,function(Story,context){var _themes$list,themes=context.parameters.themes;return null==themes||null===(_themes$list=themes.list)||void 0===_themes$list||_themes$list.forEach((function(theme){var isDefault=theme.name===themes.default;Array.isArray(theme.class)?theme.class.forEach((function(className){return document.body.classList.toggle(className,isDefault)})):document.body.classList.toggle(theme.class,isDefault)})),Story()}],parameters={a11y:{element:"#root",config:{},options:{},manual:!1},themes:utils.e,docs:{extractComponentDescription:function(_component,_ref){var notes=_ref.notes;if(notes){if("string"==typeof notes)return Object(utils.d)(notes);var multipleNotes=Array.isArray(notes)?notes:Object.keys(notes).map((function(section){return notes[section]}));return Object(utils.d)(multipleNotes.join("\n"))}return null},page:utils.c},layout:"centered",options:{storySort:{order:["Overview","Components","App Components"]}}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(ClientApi.d)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.e)(loader,!1)}));case"parameters":return Object(ClientApi.f)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.b)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"render":return Object(ClientApi.g)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.f)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./.storybook/resources.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ATTRIBUTES}));var positionOptions=["start","end"],scaleOptions=["s","m","l"],alignmentOptions=["start","center","end"],appearanceOptions=["solid","clear","outline"],ATTRIBUTES={alignment:{values:alignmentOptions,defaultValue:alignmentOptions[0]},appearance:{values:appearanceOptions,defaultValue:appearanceOptions[0]},position:{values:positionOptions,defaultValue:positionOptions[0]},scale:{values:scaleOptions,defaultValue:scaleOptions[1]}}},"./.storybook/utils.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"e",(function(){return themes})),__webpack_require__.d(__webpack_exports__,"f",(function(){return themesDarkDefault})),__webpack_require__.d(__webpack_exports__,"d",(function(){return parseReadme})),__webpack_require__.d(__webpack_exports__,"a",(function(){return createComponentHTML})),__webpack_require__.d(__webpack_exports__,"c",(function(){return globalDocsPage})),__webpack_require__.d(__webpack_exports__,"b",(function(){return filterComponentAttributes}));var _src_utils_resources__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/utils/resources.ts"),_node_modules_esri_calcite_colors_dist_colors__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@esri/calcite-colors/dist/colors.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/index.js"),react__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__),autoValue={name:"Auto",value:_node_modules_esri_calcite_colors_dist_colors__WEBPACK_IMPORTED_MODULE_1__.colors["blk-200"]},lightValue={name:"Light",value:_node_modules_esri_calcite_colors_dist_colors__WEBPACK_IMPORTED_MODULE_1__.colors["blk-005"]},darkValue={name:"Dark",value:_node_modules_esri_calcite_colors_dist_colors__WEBPACK_IMPORTED_MODULE_1__.colors["blk-210"]},list=[{name:lightValue.name,class:_src_utils_resources__WEBPACK_IMPORTED_MODULE_0__.a.lightTheme,color:lightValue.value},{name:darkValue.name,class:_src_utils_resources__WEBPACK_IMPORTED_MODULE_0__.a.darkTheme,color:darkValue.value},{name:autoValue.name,class:_src_utils_resources__WEBPACK_IMPORTED_MODULE_0__.a.autoTheme,color:autoValue.value}],themes={default:lightValue.name,list:list},themesDarkDefault={default:darkValue.name,list:list},parseReadme=function(content){return content.replace(/ \\\| /g," | ").replace(/\.\.\//g,"https://github.com/Esri/calcite-components/tree/master/src/components/")},createComponentHTML=function(tagName,attributes){var contentHTML=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return`<${tagName} ${attributes.map((function(_ref){var name=_ref.name,value=_ref.value;return"boolean"==typeof value?value?name:"":`${name}="${value}"`})).join(" ")}>${contentHTML}</${tagName}>`},globalDocsPage=function(){return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.b,null))},filterComponentAttributes=function(attributesList,exceptions){return exceptions.length?attributesList.filter((function(attr){return!exceptions.find((function(except){return except===attr.name}))})).map((function(attr){return attr.commit()})):attributesList.map((function(attr){return attr.commit()}))}},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/html/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(mdx|ts))$")],module,!1)}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module))},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(mdx|ts))$":function(module,exports,__webpack_require__){var map={"./1-introduction.stories.mdx":"./src/1-introduction.stories.mdx","./2-contributing.stories.mdx":"./src/2-contributing.stories.mdx","./3-conventions.stories.mdx":"./src/3-conventions.stories.mdx","./4-code-of-conduct.stories.mdx":"./src/4-code-of-conduct.stories.mdx","./5-licensing.stories.mdx":"./src/5-licensing.stories.mdx","./6-custom-theme.stories.mdx":"./src/6-custom-theme.stories.mdx","./7-faq.stories.mdx":"./src/7-faq.stories.mdx","./components/accordion/accordion.stories.ts":"./src/components/accordion/accordion.stories.ts","./components/action-bar/action-bar.stories.ts":"./src/components/action-bar/action-bar.stories.ts","./components/action-group/action-group.stories.ts":"./src/components/action-group/action-group.stories.ts","./components/action-pad/action-pad.stories.ts":"./src/components/action-pad/action-pad.stories.ts","./components/action/action.stories.ts":"./src/components/action/action.stories.ts","./components/alert/alert.stories.ts":"./src/components/alert/alert.stories.ts","./components/avatar/avatar.stories.ts":"./src/components/avatar/avatar.stories.ts","./components/block/block.stories.ts":"./src/components/block/block.stories.ts","./components/button/button.stories.ts":"./src/components/button/button.stories.ts","./components/card/card.stories.ts":"./src/components/card/card.stories.ts","./components/checkbox/checkbox.stories.ts":"./src/components/checkbox/checkbox.stories.ts","./components/chip/chip.stories.ts":"./src/components/chip/chip.stories.ts","./components/color-picker/color-picker.stories.ts":"./src/components/color-picker/color-picker.stories.ts","./components/combobox/combobox.stories.ts":"./src/components/combobox/combobox.stories.ts","./components/date-picker/date-picker.stories.ts":"./src/components/date-picker/date-picker.stories.ts","./components/dropdown/dropdown.stories.ts":"./src/components/dropdown/dropdown.stories.ts","./components/fab/fab.stories.ts":"./src/components/fab/fab.stories.ts","./components/flow/flow.stories.ts":"./src/components/flow/flow.stories.ts","./components/icon/icon.stories.ts":"./src/components/icon/icon.stories.ts","./components/inline-editable/inline-editable.stories.ts":"./src/components/inline-editable/inline-editable.stories.ts","./components/input-date-picker/input-date-picker.stories.ts":"./src/components/input-date-picker/input-date-picker.stories.ts","./components/input-time-picker/input-time-picker.stories.ts":"./src/components/input-time-picker/input-time-picker.stories.ts","./components/input/input.stories.ts":"./src/components/input/input.stories.ts","./components/label/label.stories.ts":"./src/components/label/label.stories.ts","./components/link/link.stories.ts":"./src/components/link/link.stories.ts","./components/list/list.stories.ts":"./src/components/list/list.stories.ts","./components/loader/loader.stories.ts":"./src/components/loader/loader.stories.ts","./components/modal/modal.stories.ts":"./src/components/modal/modal.stories.ts","./components/notice/notice.stories.ts":"./src/components/notice/notice.stories.ts","./components/pagination/pagination.stories.ts":"./src/components/pagination/pagination.stories.ts","./components/panel/panel.stories.ts":"./src/components/panel/panel.stories.ts","./components/pick-list/pick-list.stories.ts":"./src/components/pick-list/pick-list.stories.ts","./components/popover/popover.stories.ts":"./src/components/popover/popover.stories.ts","./components/progress/progress.stories.ts":"./src/components/progress/progress.stories.ts","./components/radio-button-group/radio-button-group.stories.ts":"./src/components/radio-button-group/radio-button-group.stories.ts","./components/radio-button/radio-button.stories.ts":"./src/components/radio-button/radio-button.stories.ts","./components/radio-group/radio-group.stories.ts":"./src/components/radio-group/radio-group.stories.ts","./components/rating/rating.stories.ts":"./src/components/rating/rating.stories.ts","./components/scrim/scrim.stories.ts":"./src/components/scrim/scrim.stories.ts","./components/select/select.stories.ts":"./src/components/select/select.stories.ts","./components/shell/shell.stories.ts":"./src/components/shell/shell.stories.ts","./components/slider/slider.stories.ts":"./src/components/slider/slider.stories.ts","./components/split-button/split-button.stories.ts":"./src/components/split-button/split-button.stories.ts","./components/stepper/stepper.stories.ts":"./src/components/stepper/stepper.stories.ts","./components/switch/switch.stories.ts":"./src/components/switch/switch.stories.ts","./components/tabs/tabs.stories.ts":"./src/components/tabs/tabs.stories.ts","./components/tile-select-group/tile-select-group.stories.ts":"./src/components/tile-select-group/tile-select-group.stories.ts","./components/tile-select/tile-select.stories.ts":"./src/components/tile-select/tile-select.stories.ts","./components/tile/tile.stories.ts":"./src/components/tile/tile.stories.ts","./components/tip-manager/tip-manager.stories.ts":"./src/components/tip-manager/tip-manager.stories.ts","./components/tip/tip.stories.ts":"./src/components/tip/tip.stories.ts","./components/tooltip/tooltip.stories.ts":"./src/components/tooltip/tooltip.stories.ts","./components/tree/tree.stories.ts":"./src/components/tree/tree.stories.ts","./components/value-list/value-list.stories.ts":"./src/components/value-list/value-list.stories.ts"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(mdx|ts))$"},"./src/1-introduction.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.c,{title:"Overview/Home",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("h1",{id:"calcite-components"},"Calcite Components"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("p",null,"Calcite Components are a set of reusable web components built using Stencil.js. With Calcite Components, you can quickly build on-brand, lightweight, and accessible web applications."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("a",{parentName:"li",href:"https://github.com/Esri/calcite-components",target:"_blank",rel:"nofollow noopener noreferrer"},"GitHub project"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("h2",{id:"calcite"},"Calcite"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("p",null,"Calcite is the name of a branded visual design system for Esri."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("h2",{id:"issues"},"Issues"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("p",null,"Find a bug or want to request a new feature? Please let us know by ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("a",{parentName:"p",href:"https://github.com/Esri/calcite-components/issues/new/choose",target:"_blank",rel:"nofollow noopener noreferrer"},"submitting an issue"),"."))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Home",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},"./src/2-contributing.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Contributing",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:"# Contributing\n\nEsri welcomes contributions from anyone and everyone. Please see our [guidelines for contributing](https://github.com/esri/contributing).\n\nNote: New contributors should first contact [Ben Elan](mailto:belan@esri.com) or [Juan Carlos Franco](mailto:JFranco@esri.com) to join the [Calcite Components GitHub team](https://github.com/orgs/Esri/teams/calcite-components/members). Then, clone the repo via SSH key on your machine (this Git workflow is required in order to work with our Screener test integration).\n\n## I want to contribute, what should I work on?\n\nCalcite Components is still in its early stages. You can help most by:\n\n- Adding ideas for components to our [wishlist project](https://github.com/Esri/calcite-components/projects/2). We are using the wishlist to gather ideas about useful components which we may be able to add to Calcite Components.\n- Working on [the issues](https://github.com/Esri/calcite-components/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22+no%3Aassignee) marked as `help wanted`. There is also a `good first issue` label if you are just getting started.\n- If you want to help develop components take a look at [1.0.0 components](https://github.com/Esri/calcite-components/projects/1) which are the components we are targeting for the first release of Calcite Components. Before starting development please review our [component conventions](./conventions/README.md) and the [Stencil documentation](https://stenciljs.com/docs/host-element).\n\nIf you aren't familiar with the basics of Web Components and Shadow DOM, please read through some of the following resources before contributing:\n\n- [Google - Custom Elements v1: Reusable Web Components ](https://developers.google.com/web/fundamentals/web-components/customelements)\n- [Google - Shadow DOM v1: Self-Contained Web Components ](https://developers.google.com/web/fundamentals/web-components/shadowdom)\n- [CSS Tricks - An Introduction to Web Components ](https://css-tricks.com/an-introduction-to-web-components/)\n\n## Before filing an issue\n\nIf something isn't working the way you expect, please take a look at the [existing issues](https://github.com/Esri/calcite-components/issues) before logging a new one. Have you found a new bug? Want to request a new feature? We'd love to hear from you! Please make sure to provide all of the requested info from the appropriate [issue template](https://github.com/Esri/calcite-components/issues/new/choose) so we can work on resolving the issue as soon as possible. A sample that reproduces the issue is required for logging bugs, we created templates in [codepen](https://codepen.io/pen?template=RwgrjEx), [codesandbox](https://codesandbox.io/s/calcite-template-p95kp?file=/src/App.js), and [jsbin](https://jsbin.com/lopumatiru/edit?html,output) (with the ArcGIS API for JavaScript) to help get started. Alternatively, a [documentation](https://developers.arcgis.com/calcite-design-system/components/) sample can be used if the issue is reproducible. Some other things to consider:\n\n- Use a clear and descriptive title\n- Detail what is happening now vs what should happen\n- Tell us how to reproduce the issue (e.g. is it happening in a specific browser?)\n- Can it be reliably reproduced? If not, tell us how often it happens and under what circumstances.\n- Screenshots and GIFs are our friends!\n- Did this problem start happening after a recent release or was it always a bug?\n\n## Issue management\n\n### Lifecycle\n\nThere are four issue lifecycle labels:\n\n- `0 - new`: Issues that are up for grabs.\n- `1 - assigned`: Issues that someone will work on soon.\n- `2 - in development`: Issues are currently being worked on.\n- `3 - installed`: Issues that have been merged to master.\n- `4 - verified`: Issues that have been tested and are ready to close.\n\nAn issue can only have one of the lifecycle labels at any time. Please make sure to keep these up to date.\n\n### Milestones\n\nMilestones are used to manage sprints, which are two weeks long. Sprint milestones are not closed until all of the issues are verified. We usually have a couple sprint milestones open at a time to help with future planning. Grab issues from the current sprint when you are looking for something to work on. There are also two constant milestones:\n\n- **Backburner:** Issues we want to tackle soon, but not in the immediate sprint. If you didn't find anything to work on in the current sprint, this is the second place to look.\n- **Freezer:** Items that we want to look into, but do not have an immediate timeline associated. Try not to work on these issues unless they have a `help wanted` label.\n\n### Estimates\n\n[ZenHub](https://www.zenhub.com/) estimates are used to determine how much work needs to go into an issue. The total estimate helps the product managers triage issues effectively so developers are not overwhelmed during sprints. If you are not on the team, please do not add estimates when creating cases. Here are some guidelines for the numbering system:\n\n- **1:** Fixing a typo, small syntax issue, or tweaking a css property. Something that can be done in a couple minutes.\n- **5:** Fixing bugs or adding small features that don't require comprehensive planning.\n- **13:** Issues that are more complicated and need some workflow or design planning. These issues usually need additional unit tests written.\n- **40:** If an issue is this complicated it should be converted into an epic.\n\n## Code base\n\nOur code base is written in TypeScript and must adhere to specific conventions and formatting. Please do the following while developing:\n\n1. Avoid setting types as `any`.\n2. Try to always provide a type.\n3. Provide JSDoc for all public APIs.\n4. Fix linting errors, don't ignore them.\n\n## Getting a development environment set up\n\nWe recommend installing the following extensions in your editor of choice: TypeScript, Sass, TailwindCSS, ESLint and Prettier.\n\n- https://code.visualstudio.com/\n- https://atom.io/packages/atom-typescript\n- https://github.com/Microsoft/TypeScript-Sublime-Plugin\n- https://tailwindcss.com/docs/intellisense\n- https://github.com/neoclide/coc.nvim\n- etc...\n\nTo start the local development environment run `npm start` this will start the local Stencil development server on http://localhost:3333. You can modify the [index.html](./src/index.html) to add and test your new component. Just add another HTML file to the `demos` folder and link to this new page from `index.html`.\n\n## Linting\n\nThis project uses [lint-staged](https://www.npmjs.com/package/lint-staged) to automatically format code on commit, making it easier to contribute.\n\n## Running the tests\n\n`npm test` will run the current test suite.\n\nCalcite Components include Stencil's default testing tools which are built on [Jest](https://jestjs.io/) and [Puppeteer](https://github.com/GoogleChrome/puppeteer).\n\nIf you're working on writing tests for a particular component, it can be helpful to use `npm run test:watch` to retest on file changes. Once the initial tests run, typing `o` at the prompt will run tests only on changed files, allowing you to quickly iterate on tests for a specific component.\n\nPlease refer to the [Stencil testing documentation](https://stenciljs.com/docs/testing-overview) for more information.\n\n## Adding a new component\n\nBefore adding a new component, please read through the [component conventions guide](./conventions/README.md). This guide covers everything from colors to event naming syntax and will help you create a component that is consistent with those that exist already. All new components should have an [issue](https://github.com/Esri/calcite-components/issues/new?assignees=&labels=new+component%2C+0+-+new%2C+architecture&template=new-component.md&title=New+Component%3A+).\n\n## Documenting a component\n\nCalcite Components utilizes [Storybook](https://storybook.js.org/) for documenting components. Adding a new component is very simple:\n\n1. Create a new file inside your component directory like `X.stories.js`\n2. Write stories (see below)\n3. Run the documentation locally with `npm run docs:preview`\n\nThe `docs:preview` command will build Calcite Components and open your browser to view the storybook docs locally.\n\n### Writing stories\n\nEach component should use a `storiesOf` with at least one story. It's a great idea to add the component's auto-generated `readme.md` as notes. If your component has props that effect visual styles, you can use the [storybook knobs addon](https://www.npmjs.com/package/@storybook/addon-knobs) to allow people to manipulate props and see live updates in the documentation. A minimal stories file might look something like this:\n\n```\nimport { storiesOf } from '@storybook/html';\nimport { boolean } from '@storybook/addon-knobs'\nimport notes from './readme.md';\n\nstoriesOf('My component', module)\n  .add('Simple', () => `\n    <my-component demo-prop=\"${boolean(\"demo-prop\", true)}\"></my-component>\n  , { notes })`\n```\n\n## Branch naming conventions\n\nWhen submitting a pull request, please use one of the following formats for your branch name:\n\nFor pull requests associated with an existing issue:\n\n```\n<username>/<issue-id><issue-description>\njohndoe/15-update-modal\njohndoe/update-modal-15\n```\n\nFor pull requests without an associated issue:\n\n```\n<username>/<issue-description>\njohndoe/modal-styling\n```\n\n```\n<username>/<type-of-pr><issue-description>\njohndoe/docs/update-modal-docs\njohndoe/feature/add-something-to-modal\n\n```\n\n## Commit message format\n\nThis project follows [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/), which are used to generate the changelog. Be sure to provide clear and sufficient information in commit messages. This is important because the commit messages are used to automatically update the changelog.\n\n[Stencil's contributing document](https://github.com/ionic-team/stencil/blob/master/.github/CONTRIBUTING.md#commit-message-format) explains this in great detail, so please refer to this for more details and examples.'\n\n## Breaking Changes\n\nFor ease of discoverability, commit messages for breaking changes should use both the header (`!`) and body (`BREAKING CHANGE:`) syntax:\n\n```\n<type>!: <descriptive summary>\n\n<optional info>\n\nBREAKING CHANGE: <details about the change and migration options (this can span multiple lines)>\n```\n\nSee the [conventional commits doc](https://www.conventionalcommits.org/en/v1.0.0/) for more helpful information.\n\n## Pull requests\n\nIn order to ensure conventional commits are followed, pull requests will run a check to indicate whether the PR is following the convention or not. The [Semantic Pull Request](https://github.com/probot/semantic-pull-requests) status check will ensure your pull requests are semantic before you merge them.\n",mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Contributing",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/3-conventions.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Conventions",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'# Component Guidelines\n\nThis is a living document defining our best practices and reasoning for authoring Calcite Components.\n\n\x3c!-- TOC depthFrom:2 --\x3e\n\n- [Component Guidelines](#component-guidelines)\n  - [General Guidelines](#general-guidelines)\n  - [Structure](#structure)\n  - [Styling](#styling)\n    - [Avoid complex CSS selectors](#avoid-complex-css-selectors)\n  - [Color](#color)\n  - [Light Theme/Dark Theme](#light-themedark-theme)\n  - [Custom Themes](#custom-themes)\n    - [Typography](#typography)\n    - [Palette](#palette)\n  - [Component Responsibilities](#component-responsibilities)\n  - [Events](#events)\n    - [Event Names](#event-names)\n    - [Private/Internal Events](#privateinternal-events)\n    - [Event Details](#event-details)\n  - [Props](#props)\n  - [Focus support](#focus-support)\n  - [CSS Class Names](#css-class-names)\n  - [assets](#assets)\n  - [a11y](#a11y)\n  - [i18n](#i18n)\n    - [Translated strings](#translated-strings)\n  - [Bundling and Loading](#bundling-and-loading)\n  - [Unique IDs for Components](#unique-ids-for-components)\n  - [Prerendering and SSR](#prerendering-and-ssr)\n  - [Cleaning up resources](#cleaning-up-resources)\n    - [Timeouts](#timeouts)\n  - [Tests](#tests)\n    - [Writing Tests](#writing-tests)\n      - [Prevent logging unnecessary messaging in the build](#prevent-logging-unnecessary-messaging-in-the-build)\n    - [Unstable Tests](#unstable-tests)\n  - [Documentation](#documentation)\n\n\x3c!-- /TOC --\x3e\n\n## General Guidelines\n\nGenerally adhere to and follow these best practices for authoring components.\n\n- [Google Web Component Best Practices](https://developers.google.com/web/fundamentals/web-components/best-practices)\n- [Custom Element Conformance - W3C Editor\'s Draft](https://w3c.github.io/webcomponents/spec/custom/#custom-element-conformance)\n\n## Structure\n\nWe follow Stencil\'s suggested component structure. See their [style guide](https://github.com/ionic-team/stencil/blob/master/STYLE_GUIDE.md#file-structure) for more details.\n\n## Styling\n\nBe sure to set `shadow: true` in Stencil\'s `@Component` options to make sure styles are encapsulated in our Calcite design system. This helps keep our components consistent across applications.\n\n### Avoid complex CSS selectors\n\nAvoid complex CSS selectors and move logic into the component. As a general rule, if using more than 1 attribute in the CSS selector, use a class and move the logic into the component.\n\nFor example, instead of a complex CSS selector as demonstrated below:\n\n```css\n[alignment="icon-end-space-between"]:not([width="auto"]) {\n  /* ... */\n}\n```\n\nAdd a class to handle the logic in the component class.\n\n```tsx\n<div\n  class={{\n    [CSS.myClass]: alignment === "icon-end-space-between" && width !== "auto"\n  }}\n/>\n```\n\n```css\n.myClass {\n  /* ... */\n}\n```\n\n## Color\n\nIf a component has multiple color themes (for example Blue, Red, Green, and Yellow) representing various state implement a `color` prop and reflect it to an attributes.\n\n```tsx\nenum Colors {\n  red = "red",\n  blue = "blue",\n  green = "green",\n  yellow = "yellow",\n}\n\nexport class Component {\n\n// ...\n\n@Prop({ reflect: true }) color: Colors = \'blue\'\n\n// ...\n```\n\nYou can then use the `:host()` selector to define your custom colors:\n\n```scss\n:host([color="blue"]) {\n  .something {\n    // make it blue\n  }\n}\n\n:host([color="red"]) {\n  .something {\n    // make it red\n  }\n}\n```\n\n**Discussed In**:\n\n- https://github.com/Esri/calcite-components/pull/24/files/3446c89010e3ef0421803d68d627aba2e7c4bfa0#r289427838\n\n## Light Theme/Dark Theme\n\nIn the [global CSS file](https://github.com/Esri/calcite-components/blob/master/src/assets/styles/global.scss), we specify the values of each color for both light and dark theme. This enables theming to be inherited throughout a component tree. Consider this valid example:\n\n```html\n<div class="calcite-theme-dark">\n  <calcite-button>Button text</calcite-button>\n  <calcite-date-picker></calcite-date-picker>\n</div>\n```\n\nThis will cause both the button and the date picker to use the dark theme color variables declared in the global file. This makes it very easy for developers to move an entire app from light to dark and vice versa.\n\nTo make this work, inside a component\'s SASS file, _you must use colors from the theme variables_. For example\n\n```scss\n// 🙅‍♀️ using the sass var will not correctly inherit or change in light/dark mode\n:host {\n  color: $ui-brand-light;\n}\n\n// 👍 using the CSS var will inherit correctly\n:host {\n  color: var(--calcite-ui-brand);\n}\n```\n\n## Custom Themes\n\nSince Calcite Components might be used in many different contexts such as configurable apps, multiple themes and appearances need to be supported. The most common use case for custom themes are applications where the end user needs to be able to customize brand colors and typography. To this end custom theming can be accomplished by overriding the [CSS Custom Properties (CSS Variables)](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) from the main light and dark themes with new values:\n\n```css\n:root {\n  --calcite-ui-brand: red;\n}\n```\n\nYou can apply these overrides to individual components as well:\n\n```css\ncalcite-slider {\n  --calcite-ui-brand: red;\n}\n```\n\nOr, add a class to the specific instance:\n\n```css\n.my-custom-theme {\n  --calcite-ui-brand: red;\n}\n```\n\n```html\n<calcite-slider class="my-custom-theme"></calcite-slider>\n```\n\n### Typography\n\nAll components have been constructed to inherit their `font-family`. This enables you to change the font much like changing the colors:\n\n```css\n:root {\n  font-family: "Comic Sans";\n}\n```\n\n### Palette\n\nThe current light theme colors and their hex values can be found [here](https://esri.github.io/calcite-colors/).\n\n**Discussed In**:\n\n- https://github.com/Esri/calcite-components/issues/507\n\n## Component Responsibilities\n\nCalcite Components broadly targets two groups of projects inside Esri:\n\n- **Sites** like [esri.com](https://esri.com) and [developers.arcgis.com](https://developers.arcgis.com).\n- **Apps** like [ArcGIS Online](https://arcgis.com), [Vector Tile Style Editor](https://developers.arcgis.com/vector-tile-style-editor), [Workforce](https://www.esri.com/en-us/arcgis/products/workforce/overview), [ArcGIS Hub](https://hub.arcgis.com) etc...\n\nComponents should present the minimum possible implementation to be usable by both sites and apps and leave as much as possible to users.\n\nIt is generally agreed on that components should not:\n\n- Make network requests. Authentication and the exact environment of the request is difficult to manage and better left to the specific application or site.\n- Manage routing or manipulate the URL. Managing the URL is the domain of the specific site or app.\n- Implement any feature which can easily be achieved with simple CSS and HTML. E.x. it was decided that `<calcite-switch>` should not support `text` or `position` properties because those could be easily duplicated with CSS ([ref](https://github.com/ArcGIS/calcite-components/pull/24#discussion_r289424140))\n- Implement any component which might replace a browser feature, without adding functionality that goes above and beyond what browser defaults would provide.\n\nHowever components are allowed to:\n\n- Use or implement `localStorage` if there is a specific use case.\n- Communicate with other components if a specific use case exists.\n\n**Discussed In**:\n\n- [Should tabs support syncing and loading from localstorage](https://github.com/ArcGIS/calcite-components/pull/27) . **Yes** because such feature are difficult to implement for **Sites** and would require lots of additional JavaScript work on the part of teams and authors\n- [Should switch support a label](https://github.com/ArcGIS/calcite-components/pull/24#discussion_r289424140). **No** because label place\n\n## Events\n\nAll public events should be documented with [JSDoc](https://jsdoc.app/).\n\n### Event Names\n\nEvent names should be treated like global variables since they can collide with any other event names and global variables. As such follow these guidelines when naming events.\n\n- Name events list `Component + Event name` for example the `change` event on `<calcite-tabs>` should be named `calciteTabsChange`.\n- Always prefix event names with `calcite` and never use an event name used by existing DOM standards https://developer.mozilla.org/en-US/docs/Web/Events.\n- For example:\n  - Bad: `change`\n  - Good: `calciteTabChange`\n- If an existing event can be listened to, don\'t create a new custom event. For example, there is no need to create a `calciteButtonClick` event because a standard `click` event will still be fired from the element.\n- For consistency, use `calcite<ComponentName>Change` for value change events.\n\n**Discussed In:**\n\n- https://github.com/Esri/calcite-components/pull/24/files/3446c89010e3ef0421803d68d627aba2e7c4bfa0#r289430227\n\n### Private/Internal Events\n\nIf you need to use events to pass information inside your components for example to communicate between parents and children make sure you call `event.stopPropagation();` and `event.preventDefault();` to prevent the event from reaching outside the component.\n\nAlso, make sure to add the `@internal` JSDoc tag to hide an event from the generated doc or `@private` to hide it from both the doc and generated type declarations.\n\n### Event Details\n\nOnly attach additional data to your event if that data cannot be determined from the state of the component. This is because events also get a reference to the component that fired the event. For example you do not need to pass anything exposed as a `@Prop()` in the event details.\n\n```tsx\n@Listen("calciteCustomEvent") customEventHandler(\n  event: CustomEvent\n) {\n  console.log(event.target.prop); // event.target is the component that fired the event.\n}\n```\n\n`<calcite-tab-nav>` is also an example of this. The `event.details.tab` item contains the index of the selected tab or the tab name which cannot be easily determined from the state of `<calcite-tab-nav>` in some cases so it makes sense to include in the event.\n\n## Props\n\nPrivate/internal props should be annotated accordingly to avoid exposing them in the doc and/or API. You can do this by using the `@private`/`@internal` [JSDoc](https://jsdoc.app/) tags.\n\n## Focus support\n\nComponents with focusable content, must implement the following pattern:\n\n```ts\ninterface FocusableComponent {\n  setFocus(focusId?: FocusId): Promise<void>; // focusId should be supported if there is more than one supported focus target\n}\n\ntype FocusId = string;\n```\n\n**Note**: Implementations can use the [`focusElement`](https://github.com/Esri/calcite-components/blob/f2bb61828f3da54b7dcb5fb1dade12b85d82331e/src/utils/dom.ts#L41-L47) helper to handle focusing both native and calcite components.\n\nExamples:\n\n- [`calcite-color`](https://github.com/Esri/calcite-components/blob/78a70a805324689d516130816a69f031e39c5338/src/components/color/color.tsx#L409-L413)\n- [`calcite-panel` (supports `focusId`)](https://github.com/Esri/calcite-components/blob/f2bb61828f3da54b7dcb5fb1dade12b85d82331e/src/components/panel/panel.tsx#L298-L311)\n\n## CSS Class Names\n\nBecause most components utilize shadow DOM, there is far less concern over naming collisions in a global CSS namespace. In addition, it\'s better for file transfer times and easier to write if class names are shorter. For these reasons, full BEM is not necessary. Instead, we can omit the "Block", and use the host instead. Consider the following BEM markup:\n\n```html\n<div class="card">\n  <h3 class="card__title card__title--large">Title</h3>\n  <p class="card__text">Text</p>\n</div>\n```\n\nIn a component using shadow DOM, this should instead be written as:\n\n```jsx\n<Host>\n  <h3 class="title title--large">Title</h3>\n  <p class="text">Text</p>\n</Host>\n```\n\nNotice `.card` does not appear anywhere. We would then apply styles to the host element itself:\n\n```scss\n:host {\n  // card styles here\n}\n\n.title {\n}\n.title--large {\n}\n.text {\n}\n```\n\nModifier classes on the "block" (host element) can often be written by reflecting the prop and selecting it directly via an attribute selector:\n\n```scss\n:host([color="blue"]) {\n}\n```\n\nThis builds a nice symmetry between the styling and the public API of a component.\n\n- https://github.com/ArcGIS/calcite-components/issues/28\n- https://github.com/ArcGIS/calcite-components/pull/24#discussion_r287462934\n- https://github.com/ArcGIS/calcite-components/pull/24#issuecomment-495788683\n- https://github.com/ArcGIS/calcite-components/pull/24#issuecomment-497962263\n\n## assets\n\nIf a component needs assets, they should be placed under a `assets/<component-name>` subdirectory. For example,\n\n```\nmy-component/\n  assets/\n    my-component/\n      asset.json\n  my-component.e2e.ts\n  my-component.tsx\n  my-component.scss\n  ...\n```\n\nThe component\'s metadata should then include the following metadata prop `assetsDir: ["assets"]`.\n\n```tsx\nimport { Component, Host, h } from "@stencil/core";\n\n@Component({\n  tag: "calcite-test",\n  shadow: true,\n  assetsDir: ["assets"]\n})\nexport class MyComponent {\n  /* ... */\n}\n```\n\nAfterwards, any asset path references must use the `getAssetPath` utility, using the `assets` directory as the root.\n\n```ts\nconst assetPath = getAssetPath(`./assets/my-component/asset.json`);\n```\n\nThis is required in order to have a unified assets folder in the distributable.\n\n## a11y\n\nComponents must be accessible and are required to have tests that focus on a11y. We use the following resources as guides:\n\n- [Google Accessibility Overview](https://developers.google.com/web/fundamentals/accessibility/)\n- [WAI-ARIA Authoring Practices](https://www.w3.org/TR/wai-aria-practices-1.1/)\n\n## i18n\n\nComponents should require as a few text translations as possible. In general, components should let users supply text values via slots and attributes; this lets a user handle translation within their apps.\n\nIf you component involves formatting numbers or dates use the [`Intl` APIs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl) for formatting the display of numbers and dates in your component.\n\nTo add right-to-left (RTL) support to your components you should use [CSS Logical properties](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties) within CSS. If you need to know direction in JavaScript, use the internal `getElementDir` helper in the dom utility.\n\nSome CSS properties do not have logical equivalents. Such as...\n\n- box-shadow\n- text-shadow\n- transform\n- background-position\n\nFor these properties, you should use the internal `getElementDir` helper to apply the `CSS_UTILITY.rtl` class to your component.\n\n### Translated strings\n\nIn future it will likely become necessary to provide string translations for components. An example would be the `aria-label` for the `<calcite-modal>` close button. Initial research looks promising and we could likely implement one of these approaches and set a `lang` for each component.\n\n- https://medium.com/stencil-tricks/implementing-internationalisation-i18n-with-stencil-5e6559554117 and https://codesandbox.io/s/43pmx55vo9\n- https://github.com/ionic-team/ionic-stencil-conference-app/issues/69\n\nUntil we implement a `lang` facility and set up translations for all components, we have been allowing a small number of strings to be passed in as props. Props that represent translated strings should have the syntax: `text-label-x`, where `x` is the name for the string. For example, when providing a string from "Close", use the prop name `text-label-close`. In the component, these props should default to their English equivalent (this is useful for non-localized apps):\n\n```\n@Prop() textLabelClose: string = \'Close\';\n```\n\n## Bundling and Loading\n\nStencil has the capability to build and distribute a large variety of outputs based on our needs. You can read more about this in the [output targets](https://github.com/ionic-team/stencil/blob/cc55401555ff5c28757cf99edf372dcada2c0b25/src/compiler/output-targets/readme.md) documentation.\n\nAs a best practice we should follow [Ionic\'s configuration](https://github.com/ionic-team/ionic/blob/master/core/stencil.config.ts) and generate a `bundle` for each component. Stencil will then generate a loader that will dynamically load the components used on the page.\n\n**Note:** This is highly likely to change as we move closer to our first release and as Stencil improves their documentation around their specific methods and build processes.\n\nEach root component should have a corresponding bundle entry in `stencil.config.ts`.\n\n## Unique IDs for Components\n\nMany times it is necessary for components to have a `id="something"` attribute for things like `<label>` and various `aria-*` properties. To safely generate a unique id for a component but to also allow a user supplied `id` attribute to work follow the following pattern:\n\n```tsx\nimport { guid } from "../../utils/guid";\n\n@Component({\n  tag: "calcite-example",\n  styleUrl: "example.scss",\n  shadow: true\n})\nexport class Example {\n  // ...\n\n  guid: string = `calcite-example-${guid()}`;\n\n  render() {\n    const id = this.el.id || this.guid;\n    return <Host id={id}></Host>;\n  }\n\n  // ...\n}\n```\n\nThis will create a unique id attribute like `id="calcite-example-51af-0941-54ae-22c14d441beb"` which should have a VERY low collision change since `guid()` generates IDs with `window.crypto.getRandomValues`. If a user supplies an `id` this will respect the users `id`.\n\n## Prerendering and SSR\n\nStencil provide the capability to render web components on the server and seamlessly hydrate them on the client. This is handled by the `dist-hydrate-script` output target in `stencil.config.ts`.\n\nThis generates a `hydrate` directory which exposes `renderToString()` (for the server) and `hydrateDocument()` for the client.\n\nSince many of the same lifecycle methods are called on the client and server you may need to differentiate any code that relies on browser APIs like so:\n\n```ts\nimport { Build } from "@stencil/core";\n\nif (Build.isBrowser) {\n  // client side\n} else {\n  // server side\n}\n```\n\nChecking if the necessary APIs are present is also acceptable:\n\n```ts\nconst elements = this.el.shadowRoot ? this.el.shadowRoot.querySelector("slot").assignedElements() : [];\n```\n\nTo ensure that all components are compatible for prerendering a prerender build is done as part of `npm test`.\n\n## Cleaning up resources\n\nEnsure all components clean up their resources.\n\n### Timeouts\n\nWhen using `setTimeout()`, make sure that you clear the timeout using `clearTimeout()` in cases where the same timeout may be called again before the first timeout has finished or if the handler is no longer needed. For example, the handler may no longer need to be called if the component was disconnected from the DOM.\n\nExample:\n\n```tsx\nmenuFocusTimeout: number;\n\nfocusMenu(): void => {\n  clearTimeout(this.menuFocusTimeout);\n  this.menuFocusTimeout = window.setTimeout(() => focusElement(this.menuEl), 100);\n}\n```\n\n## Tests\n\nComponents should have an automated test for any incoming features or bug fixes. Make sure all tests pass as PRs will not be allowed to merge if there is a single test failure.\n\nWe encourage writing expressive test cases and code that indicates intent. Use comments sparingly when the aforementioned can\'t be fully achieved. Keep it clean!\n\nPlease see Stencil\'s doc for more info on [end-to-end](https://stenciljs.com/docs/end-to-end-testing) testing. See one of our test examples [here](https://github.com/Esri/calcite-components/blob/master/src/components/block/block.e2e.ts).\n\n### Writing Tests\n\n#### Prevent logging unnecessary messaging in the build\n\n**This is only necessary if a component\'s test will produce a lot of console messages in a test run.**\n\nAs a best practice when writing tests, prevent emitting console warnings by stubbing them. Depending on the tested component, this may also apply to other console APIs.\n\nConsole warnings can end up polluting the build output messaging that makes it more difficult to identify real issues. By stubbing `console.warn`, you can prevent warning messages from displaying in the build. See [`color.e2e`](https://github.com/Esri/calcite-components/blob/af0c6cb/src/components/color/color.e2e.ts#L9-L17) for an example.\n\n### Unstable Tests\n\nIf you notice that a test fails intermittently during local or CI test runs, it is unstable and must be skipped to avoid holding up test runs, builds and deployments.\n\nTo skip a test, use the `skip` method that\'s available on [tests, or suites](https://jestjs.io/docs/en/api#methods) and submit a pull request. Once that\'s done, please create a follow-up issue by [choosing](https://github.com/Esri/calcite-components/issues/new/choose) the unstable test template and filling it out.\n\n## Documentation\n\nThis project uses [Storybook](https://storybook.js.org/) to provide an interactive showcase of components with accompanying documentation.\n\nFor each main component (i.e., one that can be used by itself), there should be a `<component-name>.stories.ts` file in its component folder.\n\nEach story should provide access to relevant [knobs](https://github.com/storybookjs/storybook/tree/next/addons/knobs) so users can test out different properties.\n\nFor additional documentation, create a [usage folder](https://github.com/Esri/calcite-components/tree/master/src/components/action/usage) in the component directory with a basic.md and optionally an advanced.md file (if additional documentation or examples are required) with snippets showing different supported use cases for the component.\n',mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Conventions",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/4-code-of-conduct.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Code of Conduct",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:"# Code of Conduct\n\nv1.0.0, February 2019\n\n> Adapted from Esri's [Conference and Community Spaces Code of Conduct](https://www.esri.com/en-us/about/events/code-of-conduct)\n\n## Purpose\n\nAt Esri, we believe geography can make the world a better place. In adopting this Community Code of Conduct, we as Esri employees are committed to fostering a welcoming environment for collaboration, creativity, and the free exchange of ideas for developing, maintaining, and using open source GIS software. We aim to empower all participants to actively engage and help build a friendly and safe Esri open source developer community.\n\nWhether publicly or privately, and whether in-person or online, we expect all members of this community to interact both professionally and without harassment toward others, regardless of race, color, creed, gender, gender identity, religion, marital status, domestic partner status, genetic information, age, national origin or ancestry, military or veteran status, sexual orientation, or either physical or mental disability.\n\n## Expectations\n\nBehavior we encourage:\n\n- Share your ideas, but also listen to others\n- Be professional, kind, and considerate in technical discussions and disagreements\n- Respect personal boundaries and preferences\n- Respect all project contributors and maintainers\n\nInappropriate/unacceptable behavior is anything hurtful that interferes with other people’s experience and participation in our community. This includes:\n\n- Harassment, aggression, and intimidation\n- Slurs\n- Derogatory jokes and statements\n- Foul or obscene language\n- Stalking\n- Sharing graphic or derogatory pictures, drawings, or cartoons\n- _Ad hominem_ or personal attacks and insults\n- Unwanted or offensive letters or poems\n- Offensive email, voicemail messages, or social media postings\n- Personal threats\n\n## Reporting\n\nRepository maintainers reserve the right to remove offensive content. To report inappropriate behavior, you can also contact [events@esri.com](mailto:events@esri.com).\n\n## Consequences\n\nViolations of this Code of Conduct may result in:\n\n- Disqualification from Esri Events and Conferences\n- Being blocked from Esri's [GitHub Organization](https://help.github.com/articles/blocking-a-user-from-your-organization/)\n",mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Code of Conduct",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/5-licensing.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Licensing",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:"# Licensing\n\nCOPYRIGHT © 2020 Esri\n\nAll rights reserved under the copyright laws of the United States and applicable international laws, treaties, and conventions.\n\nThis material is licensed for use under the Esri Master License Agreement (MLA), and is bound by the terms of that agreement. You may redistribute and use this code without modification, provided you adhere to the terms of the MLA and include this copyright notice.\n\nSee use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english\n\nFor additional information, contact: Environmental Systems Research Institute, Inc. Attn: Contracts and Legal Services Department 380 New York Street Redlands, California, USA 92373 USA\n\nemail: contracts@esri.com\n",mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Licensing",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/6-custom-theme.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Template",(function(){return Template})),__webpack_require__.d(__webpack_exports__,"interactive",(function(){return interactive}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Template=function(){return`<div\n    style="\n      --calcite-ui-brand: ${Object(dist.color)("--calcite-ui-brand","#007ac2")};\n      --calcite-ui-brand-hover: ${Object(dist.color)("--calcite-ui-brand-hover","#00619b")};\n      --calcite-ui-brand-press: ${Object(dist.color)("--calcite-ui-brand-press","#004874")};\n      --calcite-ui-info: ${Object(dist.color)("--calcite-ui-info","#00619b")};\n      --calcite-ui-success: ${Object(dist.color)("--calcite-ui-success","#35ac46")};\n      --calcite-ui-warning: ${Object(dist.color)("--calcite-ui-warning","#edd317")};\n      --calcite-ui-danger: ${Object(dist.color)("--calcite-ui-danger","#d83020")};\n      --calcite-ui-danger-hover: ${Object(dist.color)("--calcite-ui-danger-hover","#a82b1e")};\n      --calcite-ui-danger-press: ${Object(dist.color)("--calcite-ui-danger-press","#7c1d13")};\n      --calcite-ui-background: ${Object(dist.color)("--calcite-ui-background","#f8f8f8")};\n      --calcite-ui-foreground-1: ${Object(dist.color)("--calcite-ui-foreground-1","#ffffff")};\n      --calcite-ui-foreground-2: ${Object(dist.color)("--calcite-ui-foreground-2","#f3f3f3")};\n      --calcite-ui-foreground-3: ${Object(dist.color)("--calcite-ui-foreground-3","#eaeaea")};\n      --calcite-ui-text-1: ${Object(dist.color)("--calcite-ui-text-1","#151515")};\n      --calcite-ui-text-2: ${Object(dist.color)("--calcite-ui-text-2","#4a4a4a")};\n      --calcite-ui-text-3: ${Object(dist.color)("--calcite-ui-text-3","#6a6a6a")};\n      --calcite-ui-text-inverse: ${Object(dist.color)("--calcite-ui-text-inverse","#ffffff")};\n      --calcite-ui-text-link: ${Object(dist.color)("--calcite-ui-text-link","#00619b")};\n      --calcite-ui-border-1: ${Object(dist.color)("--calcite-ui-border-1","#cacaca")};\n      --calcite-ui-border-2: ${Object(dist.color)("--calcite-ui-border-2","#d4d4d4")};\n      --calcite-ui-border-3: ${Object(dist.color)("--calcite-ui-border-3","#dfdfdf")};\n      --calcite-ui-border-input: ${Object(dist.color)("--calcite-ui-border-input","#949494")};\n      --calcite-ui-icon-color: ${Object(dist.color)("--calcite-ui-icon-color","currentColor")};\n    "\n  >\n    <style>\n      .demo {\n        display: flex;\n        align-items: flex-start;\n      }\n      .demo-column {\n        flex: 0;\n        width: 320px;\n      }\n      .demo-column + .demo-column {\n        margin-left: 4rem;\n      }\n      .demo-column > * {\n        margin-bottom: 2rem;\n      }\n    </style>\n    <div class="demo">\n      <div class="demo-column">\n        <calcite-accordion>\n          <calcite-accordion-item item-title="Accordion Item"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item item-title="Accordion Item 2"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item item-title="Accordion Item 3"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item item-title="Accordion Item 4"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item item-title="Accordion Item 5" active>\n            <calcite-tree lines>\n              <calcite-tree-item>\n                Child 1\n              </calcite-tree-item>\n              <calcite-tree-item>\n                Child 2\n                <calcite-tree slot="children">\n                  <calcite-tree-item>\n                    Grandchild 1\n                  </calcite-tree-item>\n                  <calcite-tree-item>\n                    Grandchild 2\n                    <calcite-tree slot="children">\n                      <calcite-tree-item>\n                        Great-Grandchild 1\n                      </calcite-tree-item>\n                      <calcite-tree-item>\n                        Great-Grandchild 2\n                      </calcite-tree-item>\n                    </calcite-tree>\n                  </calcite-tree-item>\n                </calcite-tree>\n              </calcite-tree-item>\n              <calcite-tree-item>\n                Child 3\n              </calcite-tree-item>\n            </calcite-tree>\n          </calcite-accordion-item>\n        </calcite-accordion>\n        <calcite-notice color="red" scale="s" active>\n          <div slot="title">Something failed</div>\n          <div slot="message">\n            There was an error while performing the task.\n          </div>\n          <calcite-link slot="link" title="my action">Retry</calcite-link>\n        </calcite-notice>\n        <calcite-notice icon color="green" scale="s" active dismissible>\n          <div slot="title">Something worked</div>\n          <div slot="message">\n            That thing you wanted to do worked as expected\n          </div>\n        </calcite-notice>\n        <calcite-label>\n          Radio Group\n          <calcite-radio-group>\n            <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>\n            <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>\n            <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>\n            <calcite-radio-group-item value="vue">Vue</calcite-radio-group-item>\n          </calcite-radio-group>\n        </calcite-label>\n      </div>\n      <div class="demo-column">\n        <div>\n          <calcite-card selected selectable>\n            <img alt="" slot="thumbnail" src="https://placem.at/places?w=260&h=160&txt=0" style="width: 260px;" />\n            <h3 slot="title">Selectable card</h3>\n            <calcite-link slot="footer-leading">Lead füt</calcite-link>\n            <calcite-link slot="footer-trailing">Trail füt</calcite-link>\n          </calcite-card>\n        </div>\n        <div>\n          <calcite-dropdown>\n            <calcite-button slot="dropdown-trigger">Primary</calcite-button>\n            <calcite-dropdown-group group-title="View">\n              <calcite-dropdown-item icon-start="list-bullet" active>List</calcite-dropdown-item>\n              <calcite-dropdown-item icon-start="grid">Grid</calcite-dropdown-item>\n              <calcite-dropdown-item icon-start="table">Table</calcite-dropdown-item>\n            </calcite-dropdown-group>\n          </calcite-dropdown>\n          <calcite-button appearance="outline">Outline</calcite-button>\n          <calcite-button color="red">Red</calcite-button>\n        </div>\n        <div>\n          <label>\n            <calcite-checkbox indeterminate></calcite-checkbox>\n            Initially indeterminate and unchecked\n          </label>\n        </div>\n        <div>\n          <calcite-chip>Grey</calcite-chip>\n          <calcite-chip color="red">Red</calcite-chip>\n          <calcite-chip color="yellow">Yellow</calcite-chip>\n          <calcite-chip color="green">Green</calcite-chip>\n          <calcite-chip color="blue">Blue</calcite-chip>\n        </div>\n        <div>\n          <calcite-chip appearance="clear">Grey</calcite-chip>\n          <calcite-chip appearance="clear" color="red">Red</calcite-chip>\n          <calcite-chip appearance="clear" color="yellow">Yellow</calcite-chip>\n          <calcite-chip appearance="clear" color="green">Green</calcite-chip>\n          <calcite-chip appearance="clear" color="blue">Red</calcite-chip>\n        </div>\n        <calcite-pagination total="1200" num="100" start="1"></calcite-pagination>\n        <calcite-slider\n          min="0"\n          max="100"\n          min-value="50"\n          max-value="85"\n          step="1"\n          min-label="Temperature range (lower)"\n          max-label="Temperature range (upper)"\n        ></calcite-slider>\n      </div>\n      <div class="demo-column">\n        <calcite-date-picker scale="m" value="2020-11-27" active></calcite-date-picker>\n        <calcite-tabs active>\n          <calcite-tab-nav slot="tab-nav">\n            <calcite-tab-title active>Tab 1 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 2 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 3 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 4 Title</calcite-tab-title>\n          </calcite-tab-nav>\n        </calcite-tabs>\n        <calcite-loader active></calcite-loader>\n        <label>\n          <calcite-switch scale="m" checked color="red"> </calcite-switch>\n          Red switch scale medium\n        </label>\n      </div>\n    </div>\n  </div>`},layoutProps={Template:Template};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Theming/Custom Theme",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'# Custom Theme\n\nDevelopers building Esri applications are encouraged to use the default theme as much as possible. However, some apps (think user-configurable template applications) will need to customize the colors. Luckily, this can be done through CSS. All colors used in calcite components are set as variables on root, which you can override in your application. Take the following html/css:\n\n```html\n<style>\n  .my-theme {\n    --calcite-ui-brand: red;\n  }\n</style>\n<div class="my-theme">\n  <calcite-loader active>\n</div>\n```\n\nThis will set the main Esri blue to `red` in all components within the `div`. See the [canvas tab](/canvas/overview-custom-theme--interactive-example) for an interactive sandbox with all the theme variables.\n',mdxType:"Description"}),Object(esm.b)(dist_esm.d,{name:"Interactive",mdxType:"Story"},Template.bind({})))}MDXContent.isMDXComponent=!0;var interactive=Template.bind({});interactive.storyName="Interactive",interactive.parameters={storySource:{source:'() => `<div\n    style="\n      --calcite-ui-brand: ${color("--calcite-ui-brand", "#007ac2")};\n      --calcite-ui-brand-hover: ${color("--calcite-ui-brand-hover", "#00619b")};\n      --calcite-ui-brand-press: ${color("--calcite-ui-brand-press", "#004874")};\n      --calcite-ui-info: ${color("--calcite-ui-info", "#00619b")};\n      --calcite-ui-success: ${color("--calcite-ui-success", "#35ac46")};\n      --calcite-ui-warning: ${color("--calcite-ui-warning", "#edd317")};\n      --calcite-ui-danger: ${color("--calcite-ui-danger", "#d83020")};\n      --calcite-ui-danger-hover: ${color("--calcite-ui-danger-hover", "#a82b1e")};\n      --calcite-ui-danger-press: ${color("--calcite-ui-danger-press", "#7c1d13")};\n      --calcite-ui-background: ${color("--calcite-ui-background", "#f8f8f8")};\n      --calcite-ui-foreground-1: ${color("--calcite-ui-foreground-1", "#ffffff")};\n      --calcite-ui-foreground-2: ${color("--calcite-ui-foreground-2", "#f3f3f3")};\n      --calcite-ui-foreground-3: ${color("--calcite-ui-foreground-3", "#eaeaea")};\n      --calcite-ui-text-1: ${color("--calcite-ui-text-1", "#151515")};\n      --calcite-ui-text-2: ${color("--calcite-ui-text-2", "#4a4a4a")};\n      --calcite-ui-text-3: ${color("--calcite-ui-text-3", "#6a6a6a")};\n      --calcite-ui-text-inverse: ${color("--calcite-ui-text-inverse", "#ffffff")};\n      --calcite-ui-text-link: ${color("--calcite-ui-text-link", "#00619b")};\n      --calcite-ui-border-1: ${color("--calcite-ui-border-1", "#cacaca")};\n      --calcite-ui-border-2: ${color("--calcite-ui-border-2", "#d4d4d4")};\n      --calcite-ui-border-3: ${color("--calcite-ui-border-3", "#dfdfdf")};\n      --calcite-ui-border-input: ${color("--calcite-ui-border-input", "#949494")};\n      --calcite-ui-icon-color: ${color("--calcite-ui-icon-color", "currentColor")};\n    "\n  >\n    <style>\n      .demo {\n        display: flex;\n        align-items: flex-start;\n      }\n      .demo-column {\n        flex: 0;\n        width: 320px;\n      }\n      .demo-column + .demo-column {\n        margin-left: 4rem;\n      }\n      .demo-column > * {\n        margin-bottom: 2rem;\n      }\n    </style>\n    <div class="demo">\n      <div class="demo-column">\n        <calcite-accordion>\n          <calcite-accordion-item item-title="Accordion Item"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item item-title="Accordion Item 2"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item item-title="Accordion Item 3"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item item-title="Accordion Item 4"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item item-title="Accordion Item 5" active>\n            <calcite-tree lines>\n              <calcite-tree-item>\n                Child 1\n              </calcite-tree-item>\n              <calcite-tree-item>\n                Child 2\n                <calcite-tree slot="children">\n                  <calcite-tree-item>\n                    Grandchild 1\n                  </calcite-tree-item>\n                  <calcite-tree-item>\n                    Grandchild 2\n                    <calcite-tree slot="children">\n                      <calcite-tree-item>\n                        Great-Grandchild 1\n                      </calcite-tree-item>\n                      <calcite-tree-item>\n                        Great-Grandchild 2\n                      </calcite-tree-item>\n                    </calcite-tree>\n                  </calcite-tree-item>\n                </calcite-tree>\n              </calcite-tree-item>\n              <calcite-tree-item>\n                Child 3\n              </calcite-tree-item>\n            </calcite-tree>\n          </calcite-accordion-item>\n        </calcite-accordion>\n        <calcite-notice color="red" scale="s" active>\n          <div slot="title">Something failed</div>\n          <div slot="message">\n            There was an error while performing the task.\n          </div>\n          <calcite-link slot="link" title="my action">Retry</calcite-link>\n        </calcite-notice>\n        <calcite-notice icon color="green" scale="s" active dismissible>\n          <div slot="title">Something worked</div>\n          <div slot="message">\n            That thing you wanted to do worked as expected\n          </div>\n        </calcite-notice>\n        <calcite-label>\n          Radio Group\n          <calcite-radio-group>\n            <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>\n            <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>\n            <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>\n            <calcite-radio-group-item value="vue">Vue</calcite-radio-group-item>\n          </calcite-radio-group>\n        </calcite-label>\n      </div>\n      <div class="demo-column">\n        <div>\n          <calcite-card selected selectable>\n            <img alt="" slot="thumbnail" src="https://placem.at/places?w=260&h=160&txt=0" style="width: 260px;" />\n            <h3 slot="title">Selectable card</h3>\n            <calcite-link slot="footer-leading">Lead füt</calcite-link>\n            <calcite-link slot="footer-trailing">Trail füt</calcite-link>\n          </calcite-card>\n        </div>\n        <div>\n          <calcite-dropdown>\n            <calcite-button slot="dropdown-trigger">Primary</calcite-button>\n            <calcite-dropdown-group group-title="View">\n              <calcite-dropdown-item icon-start="list-bullet" active>List</calcite-dropdown-item>\n              <calcite-dropdown-item icon-start="grid">Grid</calcite-dropdown-item>\n              <calcite-dropdown-item icon-start="table">Table</calcite-dropdown-item>\n            </calcite-dropdown-group>\n          </calcite-dropdown>\n          <calcite-button appearance="outline">Outline</calcite-button>\n          <calcite-button color="red">Red</calcite-button>\n        </div>\n        <div>\n          <label>\n            <calcite-checkbox indeterminate></calcite-checkbox>\n            Initially indeterminate and unchecked\n          </label>\n        </div>\n        <div>\n          <calcite-chip>Grey</calcite-chip>\n          <calcite-chip color="red">Red</calcite-chip>\n          <calcite-chip color="yellow">Yellow</calcite-chip>\n          <calcite-chip color="green">Green</calcite-chip>\n          <calcite-chip color="blue">Blue</calcite-chip>\n        </div>\n        <div>\n          <calcite-chip appearance="clear">Grey</calcite-chip>\n          <calcite-chip appearance="clear" color="red">Red</calcite-chip>\n          <calcite-chip appearance="clear" color="yellow">Yellow</calcite-chip>\n          <calcite-chip appearance="clear" color="green">Green</calcite-chip>\n          <calcite-chip appearance="clear" color="blue">Red</calcite-chip>\n        </div>\n        <calcite-pagination total="1200" num="100" start="1"></calcite-pagination>\n        <calcite-slider\n          min="0"\n          max="100"\n          min-value="50"\n          max-value="85"\n          step="1"\n          min-label="Temperature range (lower)"\n          max-label="Temperature range (upper)"\n        ></calcite-slider>\n      </div>\n      <div class="demo-column">\n        <calcite-date-picker scale="m" value="2020-11-27" active></calcite-date-picker>\n        <calcite-tabs active>\n          <calcite-tab-nav slot="tab-nav">\n            <calcite-tab-title active>Tab 1 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 2 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 3 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 4 Title</calcite-tab-title>\n          </calcite-tab-nav>\n        </calcite-tabs>\n        <calcite-loader active></calcite-loader>\n        <label>\n          <calcite-switch scale="m" checked color="red"> </calcite-switch>\n          Red switch scale medium\n        </label>\n      </div>\n    </div>\n  </div>`'}};var componentMeta={title:"Theming/Custom Theme",includeStories:["interactive"]},mdxStoryNameToKey={Interactive:"interactive"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/7-faq.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/FAQ",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'# Frequently Asked Questions\n\n## What is Calcite Design System?\n\nCalcite Design System is a collection of reusable components, coupled with implementation, guidance, and advice, that together can be used to build engaging and consistent products and applications. Its purpose is to create and maintain common standards of aesthetics, interface design, accessibility, usability, and patterns, while strengthening a consistent and familiar experience across and between mapping applications.\n\n## How can I use Calcite Design System?\n\nYou can start building web apps or websites at the [getting started page](https://developers.arcgis.com/calcite-design-system/get-started/). Additionally, we have a [Sketch UI kit](https://developers.arcgis.com/calcite-design-system/sketch-ui-kit/) and [Figma UI kit](https://developers.arcgis.com/calcite-design-system/figma-ui-kit/) for designers, along with the best practices for working with developers to ensure consistent design outcomes.\n\nCalcite Design System serves as the collective documentation resource for both design guidance and composable frameworks. This includes tools, guidance, inspiration, UI kits, and other Calcite Design System frameworks.\n\nThe suggested patterns and component guidelines represent the best in user-centric design standards across our family of applications and products. As such, this resource is a living, growing domain that will continue to evolve in lockstep with the best design at Esri.\n\n## What are the Calcite Design System repositories?\n\nEsri\'s design principles, components, and patterns can be consumed through a suite of frameworks to help you get started quickly. The Calcite Design System references patterns and components provided by these frameworks, however the source of truth for implementation-specific documentation will always be found in each respective GitHub project.\n\n[Calcite Components](https://github.com/Esri/calcite-components)\n\n[Calcite Components Examples](https://github.com/Esri/calcite-components-examples)\n\n[Calcite Colors](https://github.com/Esri/calcite-colors)\n\n[Calcite UI Icons](https://github.com/Esri/calcite-ui-icons)\n\n[Calcite Point Symbols](https://github.com/Esri/calcite-point-symbols)\n\n[Calcite UI Kits](https://github.com/Esri/calcite-ui-kits)\n\n## What are Calcite Components?\n\nCalcite Components are a set of reusable web components built using Stencil.js. With Calcite Components, you can quickly build on-brand, lightweight, and accessible web applications.\n\nThe framework-agnostic components can be used to develop entire websites and applications. The set is flexible for developers and adheres to consistent, industry-standard design principles. The codebase is well supported, steadily maintained, and always being improved.\n\n### What are web components?\n\nWeb components are reusable custom elements with their functionality encapsulated away from the rest of your code. They are built on Web Component standards, will work across modern browsers, and can be used with any JavaScript library or framework that works with HTML.\n\n### What are slots?\n\nSlots are a common web components concept, and chances are you already use them. For example, take the following HTML:\n\n```html\n<select>\n  <option value="js">JavaScript</option>\n  <option value="ts">TypeScript</option>\n</select>\n```\n\nThe `option` elements are placed in `select`\'s _default slot_. Additionally, the "JavaScript" and "TypeScript" text is placed in `option`\'s respective default slots. Many Calcite Components also utilize default slots. For example, here is a `calcite-dropdown` component:\n\n```html\n<calcite-dropdown>\n  <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n  <calcite-dropdown-item active>Date modified</calcite-dropdown-item>\n  <calcite-dropdown-item>Title</calcite-dropdown-item>\n</calcite-dropdown>\n```\n\nThe `calcite-dropdown-item`s are placed in `calcite-dropdown`\'s default slot. In many cases a default slot is all that is needed. However, as components become more complicated, the need arises to position and style child components differently. This is where _named slots_ come into play. In the example above, we are passing `calcite-button` into the dropdown\'s `dropdown-trigger` slot. This informs the dropdown that the `calcite-button` component should be handled differently than the components in the default slot. If a Calcite Component has slots, they will be listed in the documentation. For example, [here are the slots](https://developers.arcgis.com/calcite-design-system/components/card/#component-api-slots) for `calcite-card`. For a more detailed explanation, I suggest reading the [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_templates_and_slots#adding_flexibility_with_slots) about slots.\n\n### How do I change themes?\n\nCalcite Components provide light and dark themes which can be changed using CSS classes: `calcite-theme-light` and `calcite-theme-dark`. There is also a `calcite-theme-auto` class which defers to the browser\'s CSS "prefers-color-scheme" media query to decide whether the light or dark theme will be used.\n\nSetting the theme class on an element changes all of their child nodes as well. Therefore, to switch the whole app from light to dark, we can do the following:\n\n```html\n<div class="calcite-theme-dark">\n  \x3c!-- your app --\x3e\n</div>\n```\n\n### How do I change the style of a component?\n\nCalcite Components provide CSS variables to override styles. The CSS cannot be altered for a component without the variables due to web component\'s encapsulation. There are CSS variables for [color](https://developers.arcgis.com/calcite-design-system/foundations/colors/) and [typography](https://developers.arcgis.com/calcite-design-system/foundations/type/). Additionally, some Calcite Components have their own CSS variables to change component-specific styles. These styles can be found in a component\'s documentation. For example, [here are the css variables](https://developers.arcgis.com/calcite-design-system/components/loader/#component-api-styles) provided for `calcite-loader`.\n\nIf we want to swap the foreground and text colors, we can use the variables:\n\n```css\ncalcite-notice {\n  --calcite-ui-foreground-1: #151515;\n  --calcite-ui-text-1: #ffffff;\n}\n```\n\nThe CSS variable [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties) provides a detailed explanation of the functionality.\n\n### Is Internationalization supported?\n\nAll of our components that provide strings in the user interface allow those strings to be set via a property. This allows you to define the string for the locale you would like. Your application can handle internationalization as it sees fit.\n',mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/FAQ",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/components/accordion/accordion.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"icon",(function(){return accordion_stories_icon})),__webpack_require__.d(__webpack_exports__,"darkThemeIcon",(function(){return darkThemeIcon})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL})),__webpack_require__.d(__webpack_exports__,"TransparentAppearance",(function(){return TransparentAppearance}));var utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),resources=__webpack_require__("./.storybook/resources.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),createAccordionAttributes=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,group="accordion",scale=resources.a.scale;return Object(utils.b)([{name:"scale",commit:function(){return this.value=Object(dist.select)("scale",scale.values,scale.defaultValue,group),delete this.build,this}},{name:"appearance",commit:function(){return this.value=Object(dist.select)("appearance",["default","minimal","transparent"],"default",group),delete this.build,this}},{name:"icon-position",commit:function(){return this.value=Object(dist.select)("icon-position",["start","end"],"end",group),delete this.build,this}},{name:"icon-type",commit:function(){return this.value=Object(dist.select)("icon-type",["chevron","caret","plus-minus"],"chevron",group),delete this.build,this}},{name:"selection-mode",commit:function(){return this.value=Object(dist.select)("selection-mode",["multi","single","single-persist"],"multi",group),delete this.build,this}}],exceptions)},createAccordionItemAttributes=function(_ref2){var icon=_ref2.icon,group=_ref2.group,groupTitle=group||"",defaultAttributes=[{name:"item-title",value:Object(dist.text)("item-title","Item title",groupTitle)},{name:"item-subtitle",value:Object(dist.text)("item-subtitle","Item subtitle",groupTitle)}],iconAttribute=[{name:"icon",value:Object(dist.select)("icon",helpers.c,helpers.c[0],groupTitle)}];return icon?iconAttribute.concat(defaultAttributes):defaultAttributes},accordionItemContent=`Custom content here<br/><img src="${Object(tests_utils.b)({width:200,height:133})}"><br/>More custom content here`,basic=(__webpack_exports__.default={title:"Components/Accordion",parameters:{notes:{accordion:'# calcite-accordion\n\n`calcite-accordion` can be used to present content in collapsible sections. Configuration options exist for visual style (icon-position, scale, appearance), and selection functionality. Selection modes include "multi", "single", and "single-persist".\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-accordion>\n  <calcite-accordion-item item-title="Accordion Item">Accordion Section Content </calcite-accordion-item>\n  <calcite-accordion-item item-title="Accordion Item 2" active>Accordion Section Content </calcite-accordion-item>\n  <calcite-accordion-item item-title="Accordion Item 3">Accordion Section Content </calcite-accordion-item>\n</calcite-accordion>\n```\n\n## Properties\n\n| Property        | Attribute        | Description                                                                                                                                                               | Type                                      | Default     |\n| --------------- | ---------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------- | ----------- |\n| `appearance`    | `appearance`     | specify the appearance - default (containing border), or minimal (no containing border), defaults to default                                                              | `"default" \\| "minimal" \\| "transparent"` | `"default"` |\n| `iconPosition`  | `icon-position`  | specify the placement of the icon in the header, defaults to end                                                                                                          | `"end" \\| "start"`                        | `"end"`     |\n| `iconType`      | `icon-type`      | specify the type of the icon in the header, defaults to chevron                                                                                                           | `"caret" \\| "chevron" \\| "plus-minus"`    | `"chevron"` |\n| `scale`         | `scale`          | specify the scale of accordion, defaults to m                                                                                                                             | `"l" \\| "m" \\| "s"`                       | `"m"`       |\n| `selectionMode` | `selection-mode` | specify the selection mode - multi (allow any number of open items), single (allow one open item), or single-persist (allow and require one open item), defaults to multi | `"multi" \\| "single" \\| "single-persist"` | `"multi"`   |\n\n## Slots\n\n| Slot | Description                                                                                                              |\n| ---- | ------------------------------------------------------------------------------------------------------------------------ |\n|      | A slot for adding `calcite-accordion-item`s. `calcite-accordion` cannot be nested, however calcite-accordion-item`s can. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n',accordionItem:"# calcite-accordion-item\n\nindividual `calcite-accordion` item\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property       | Attribute       | Description                                                        | Type      | Default     |\n| -------------- | --------------- | ------------------------------------------------------------------ | --------- | ----------- |\n| `active`       | `active`        | Indicates whether the item is active.                              | `boolean` | `false`     |\n| `icon`         | `icon`          | optionally pass an icon to display - accepts Calcite UI icon names | `string`  | `undefined` |\n| `itemSubtitle` | `item-subtitle` | pass a title for the accordion item                                | `string`  | `undefined` |\n| `itemTitle`    | `item-title`    | pass a title for the accordion item                                | `string`  | `undefined` |\n\n## Slots\n\n| Slot | Description                                                                   |\n| ---- | ----------------------------------------------------------------------------- |\n|      | A slot for adding custom content, including nested `calcite-accordion-item`s. |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-accordion-item --\x3e calcite-icon\n  style calcite-accordion-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n"},backgrounds:{values:[{name:"transparent",value:"#0000ffff"}]}}},function(){return Object(utils.a)("calcite-accordion",createAccordionAttributes(),tests_utils.a`
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-1"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-2"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-3"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-4"}).concat({name:"active",value:!0}),accordionItemContent)}
    `)}),accordion_stories_icon=function(){return Object(utils.a)("calcite-accordion",createAccordionAttributes(),tests_utils.a`
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({icon:!0,group:"accordion-item-1"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({icon:!0,group:"accordion-item-2"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({icon:!0,group:"accordion-item-3"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({icon:!0,group:"accordion-item-4"}).concat({name:"active",value:!0}),accordionItemContent)}
    `)},darkThemeIcon=function(){return Object(utils.a)("calcite-accordion",createAccordionAttributes({exceptions:["class"]}).concat({name:"class",value:"calcite-theme-dark"}),tests_utils.a`
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({icon:!0,group:"accordion-item-1"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({icon:!0,group:"accordion-item-2"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({icon:!0,group:"accordion-item-3"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({icon:!0,group:"accordion-item-4"}).concat({name:"active",value:!0}),accordionItemContent)}
    `)};darkThemeIcon.parameters={themes:utils.f};var RTL=function(){return Object(utils.a)("calcite-accordion",createAccordionAttributes({exceptions:["dir"]}).concat({name:"dir",value:"rtl"}),tests_utils.a`
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-1"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-2"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-3"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-4"}).concat({name:"active",value:!0}),accordionItemContent)}
    `)},TransparentAppearance=function(){return Object(utils.a)("calcite-accordion",createAccordionAttributes({exceptions:["appearance"]}).concat({name:"appearance",value:"transparent"}),tests_utils.a`
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-1"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-2"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-3"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-4"}).concat({name:"active",value:!0}),accordionItemContent)}
    `)};basic.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-accordion",\n    createAccordionAttributes(),\n    html`\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-1" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-2" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-3" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-4" }).concat({\n          name: "active",\n          value: true\n        }),\n        accordionItemContent\n      )}\n    `\n  )'}},basic.parameters),accordion_stories_icon.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-accordion",\n    createAccordionAttributes(),\n    html`\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ icon: true, group: "accordion-item-1" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ icon: true, group: "accordion-item-2" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ icon: true, group: "accordion-item-3" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ icon: true, group: "accordion-item-4" }).concat({\n          name: "active",\n          value: true\n        }),\n        accordionItemContent\n      )}\n    `\n  )'}},accordion_stories_icon.parameters),darkThemeIcon.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-accordion",\n    createAccordionAttributes({ exceptions: ["class"] }).concat({\n      name: "class",\n      value: "calcite-theme-dark"\n    }),\n    html`\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ icon: true, group: "accordion-item-1" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ icon: true, group: "accordion-item-2" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ icon: true, group: "accordion-item-3" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ icon: true, group: "accordion-item-4" }).concat({\n          name: "active",\n          value: true\n        }),\n        accordionItemContent\n      )}\n    `\n  )'}},darkThemeIcon.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-accordion",\n    createAccordionAttributes({ exceptions: ["dir"] }).concat({\n      name: "dir",\n      value: "rtl"\n    }),\n    html`\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-1" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-2" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-3" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-4" }).concat({\n          name: "active",\n          value: true\n        }),\n        accordionItemContent\n      )}\n    `\n  )'}},RTL.parameters),TransparentAppearance.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-accordion",\n    createAccordionAttributes({ exceptions: ["appearance"] }).concat({\n      name: "appearance",\n      value: "transparent"\n    }),\n    html`\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-1" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-2" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-3" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-4" }).concat({\n          name: "active",\n          value: true\n        }),\n        accordionItemContent\n      )}\n    `\n  )'}},TransparentAppearance.parameters)},"./src/components/action-bar/action-bar.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"darkThemeRTL",(function(){return darkThemeRTL})),__webpack_require__.d(__webpack_exports__,"withTooltip",(function(){return withTooltip}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),resources=__webpack_require__("./.storybook/resources.ts"),tests_utils=__webpack_require__("./src/tests/utils.ts"),TEXT_expand="Expand",TEXT_collapse="Collapse",createAttributes=(__webpack_exports__.default={title:"Components/Action Bar",parameters:{notes:'# calcite-action-bar\n\n## Description\n\nThe `calcite-action-bar` component is made up of multiple `calcite-action`s in the form of clickable icons. The action bar can be expanded to view actions with descriptive text or made smaller to view with just icons.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nRenders `calcite-action`s that stick to the top of the bar.\n\n```html\n<calcite-action-bar>\n  <calcite-action text="Add" icon="plus"></calcite-action>\n  <calcite-action text="Save" icon="save"></calcite-action>\n</calcite-action-bar>\n```\n\n### Bottom-actions\n\nThe bottom-actions slot renders `calcite-action`s that stick to the bottom of the bar above the expand/collapse icon.\n\n```html\n<calcite-action-bar>\n  <calcite-action text="Information" icon="information"></calcite-action>\n  <calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>\n```\n\n### Tooltip\n\nRenders with a tooltip on the expand action.\n\n```html\n<calcite-action-bar id="action-bar-test">\n  <calcite-tooltip slot="expand-tooltip">Expand</calcite-tooltip>\n  <calcite-action text="Add" icon="plus"></calcite-action>\n</calcite-action-bar>\n```\n\n### With-grouping\n\nRenders a group of `calcite-action`s contained in a `calcite-action-group`. Actions in a group are visually separated from other groups or actions in the bar.\n\n```html\n<calcite-action-bar>\n  <calcite-action-group>\n    <calcite-action text="Add" icon="plus"></calcite-action>\n    <calcite-action text="Save" icon="save"></calcite-action>\n  </calcite-action-group>\n\n  <calcite-action-group>\n    <calcite-action text="Layers" icon="layers"></calcite-action>\n    <calcite-action text="Basemaps" icon="layer-basemap"></calcite-action>\n  </calcite-action-group>\n</calcite-action-bar>\n```\n\n## Properties\n\n| Property                  | Attribute                   | Description                                                              | Type                | Default     |\n| ------------------------- | --------------------------- | ------------------------------------------------------------------------ | ------------------- | ----------- |\n| `expandDisabled`          | `expand-disabled`           | When set to true, the expand-toggling behavior will be disabled.         | `boolean`           | `false`     |\n| `expanded`                | `expanded`                  | Indicates whether widget is expanded.                                    | `boolean`           | `false`     |\n| `intlCollapse`            | `intl-collapse`             | Updates the label of the collapse icon when the component is expanded.   | `string`            | `undefined` |\n| `intlExpand`              | `intl-expand`               | Updates the label of the expand icon when the component is not expanded. | `string`            | `undefined` |\n| `overflowActionsDisabled` | `overflow-actions-disabled` | Disables automatically overflowing actions that won\'t fit into menus.    | `boolean`           | `false`     |\n| `position`                | `position`                  | Arranges the component depending on the elements \'dir\' property.         | `"end" \\| "start"`  | `undefined` |\n| `scale`                   | `scale`                     | Specifies the size of the expand action.                                 | `"l" \\| "m" \\| "s"` | `undefined` |\n\n## Events\n\n| Event                    | Description                             | Type               |\n| ------------------------ | --------------------------------------- | ------------------ |\n| `calciteActionBarToggle` | Emitted when expanded has been toggled. | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus(focusId?: "expand-toggle") => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot               | Description                                                                                                             |\n| ------------------ | ----------------------------------------------------------------------------------------------------------------------- |\n|                    | A slot for adding `calcite-action`s that will appear at the top of the action bar.                                      |\n| `"bottom-actions"` | A slot for adding `calcite-action`s that will appear at the bottom of the action bar, above the collapse/expand button. |\n| `"expand-tooltip"` | Used to set the tooltip for the expand toggle.                                                                          |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-action-group](../action-group)\n- [calcite-action](../action)\n- [calcite-tooltip-manager](../tooltip-manager)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-action-bar --\x3e calcite-action-group\n  calcite-action-bar --\x3e calcite-action\n  calcite-action-bar --\x3e calcite-tooltip-manager\n  calcite-action-group --\x3e calcite-action-menu\n  calcite-action-group --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-tooltip-manager\n  calcite-action-menu --\x3e calcite-popover\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  style calcite-action-bar fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,position=resources.a.position;return Object(utils.b)([{name:"expand-disabled",commit:function(){return this.value=Object(dist.boolean)("expandDisabled",!1),delete this.build,this}},{name:"expanded",commit:function(){return this.value=Object(dist.boolean)("expanded",!1),delete this.build,this}},{name:"intl-expand",commit:function(){return this.value=Object(dist.text)("intlExpand",TEXT_expand),delete this.build,this}},{name:"intl-collapse",commit:function(){return this.value=Object(dist.text)("intlCollapse",TEXT_collapse),delete this.build,this}},{name:"position",commit:function(){return this.value=Object(dist.select)("position",position.values,position.defaultValue),delete this.build,this}}],exceptions)}),basic=function(){return Object(utils.a)("calcite-action-bar",createAttributes(),tests_utils.a`
      <calcite-action-group>
        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>
        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>
      </calcite-action-group>
      <calcite-action-group>
        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>
      </calcite-action-group>
    `)},darkThemeRTL=function(){return Object(utils.a)("calcite-action-bar",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-theme-dark"}]),tests_utils.a`
      <calcite-action-group>
        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>
        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>
      </calcite-action-group>
      <calcite-action-group>
        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>
      </calcite-action-group>
    `)};darkThemeRTL.parameters={themes:utils.f};var withTooltip=function(){return Object(utils.a)("calcite-action-bar",createAttributes(),tests_utils.a`
      <calcite-tooltip placement="bottom" slot="expand-tooltip">Expand</calcite-tooltip>
      <calcite-action text="Add" icon="plus"></calcite-action>
    `)};basic.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-bar",\n    createAttributes(),\n    html`\n      <calcite-action-group>\n        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>\n        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>\n      </calcite-action-group>\n    `\n  )'}},basic.parameters),darkThemeRTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-bar",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-theme-dark"\n      }\n    ]),\n    html`\n      <calcite-action-group>\n        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>\n        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>\n      </calcite-action-group>\n    `\n  )'}},darkThemeRTL.parameters),withTooltip.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-bar",\n    createAttributes(),\n    html`\n      <calcite-tooltip placement="bottom" slot="expand-tooltip">Expand</calcite-tooltip>\n      <calcite-action text="Add" icon="plus"></calcite-action>\n    `\n  )'}},withTooltip.parameters)},"./src/components/action-group/action-group.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"GridCentering",(function(){return GridCentering}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./src/tests/utils.ts"),GridCentering=(__webpack_exports__.default={title:"Components/Action Group",parameters:{notes:'# calcite-action-group\n\nThe `calcite-action-group` is a wrapper for multiple `calcite-action`s and housed in `calcite-action-bar` and `calcite-action-pad`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property   | Attribute   | Description                                                          | Type                                   | Default      |\n| ---------- | ----------- | -------------------------------------------------------------------- | -------------------------------------- | ------------ |\n| `columns`  | `columns`   | Indicates number of columns.                                         | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`           | `undefined`  |\n| `expanded` | `expanded`  | Indicates whether widget is expanded.                                | `boolean`                              | `false`      |\n| `intlMore` | `intl-more` | Text string for the actions menu.                                    | `string`                               | `undefined`  |\n| `layout`   | `layout`    | Indicates the horizontal, vertical, or grid layout of the component. | `"grid" \\| "horizontal" \\| "vertical"` | `"vertical"` |\n| `menuOpen` | `menu-open` | Opens the action menu.                                               | `boolean`                              | `false`      |\n| `scale`    | `scale`     | Specifies the size of the action-menu.                               | `"l" \\| "m" \\| "s"`                    | `undefined`  |\n\n## Slots\n\n| Slot             | Description                                                        |\n| ---------------- | ------------------------------------------------------------------ |\n|                  | A slot for adding a group of `calcite-action`s.                    |\n| `"menu-actions"` | a slot for adding an overflow menu with actions inside a dropdown. |\n| `"menu-tooltip"` | a slot for adding an tooltip for the menu.                         |\n\n## CSS Custom Properties\n\n| Name                             | Description                                              |\n| -------------------------------- | -------------------------------------------------------- |\n| `--calcite-action-group-columns` | sets number of grid-template-columns when layout is grid |\n\n## Dependencies\n\n### Used by\n\n- [calcite-action-bar](../action-bar)\n- [calcite-action-pad](../action-pad)\n\n### Depends on\n\n- [calcite-action-menu](../action-menu)\n- [calcite-action](../action)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-action-group --\x3e calcite-action-menu\n  calcite-action-group --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-tooltip-manager\n  calcite-action-menu --\x3e calcite-popover\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  calcite-action-bar --\x3e calcite-action-group\n  calcite-action-pad --\x3e calcite-action-group\n  style calcite-action-group fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return utils.a`
  <div style="width:400px">
    <calcite-action-group layout="${Object(dist.select)("layout",["horizontal","vertical","grid"],"grid")}">
      <calcite-action
        alignment="${Object(dist.select)("alignment",["start","center","end"],"center")}"
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        appearance="${Object(dist.select)("appearance",["solid","clear","outline"],"solid")}"
        icon="${Object(dist.select)("icon",helpers.c,"polygon")}"
        ${Object(dist.text)("text","polygon")}
      >
      </calcite-action>
      <calcite-action
        alignment="${Object(dist.select)("alignment",["start","center","end"],"center")}"
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        appearance="${Object(dist.select)("appearance",["solid","clear","outline"],"solid")}"
        icon="${Object(dist.select)("icon",helpers.c,"rectangle")}"
        ${Object(dist.text)("text","rectangle")}
      >
      </calcite-action>
      <calcite-action
        alignment="${Object(dist.select)("alignment",["start","center","end"],"center")}"
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        appearance="${Object(dist.select)("appearance",["solid","clear","outline"],"solid")}"
        icon="${Object(dist.select)("icon",helpers.c,"trash")}"
        ${Object(dist.text)("text","trash")}
      >
      </calcite-action>
    </calcite-action-group>
  </div>
`});GridCentering.storyName="Grid Centering of Actions in a Group",GridCentering.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px">\n    <calcite-action-group layout="${select("layout", ["horizontal", "vertical", "grid"], "grid")}">\n      <calcite-action\n        alignment="${select("alignment", ["start", "center", "end"], "center")}"\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        appearance="${select("appearance", ["solid", "clear", "outline"], "solid")}"\n        icon="${select("icon", iconNames, "polygon")}"\n        ${text("text", "polygon")}\n      >\n      </calcite-action>\n      <calcite-action\n        alignment="${select("alignment", ["start", "center", "end"], "center")}"\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        appearance="${select("appearance", ["solid", "clear", "outline"], "solid")}"\n        icon="${select("icon", iconNames, "rectangle")}"\n        ${text("text", "rectangle")}\n      >\n      </calcite-action>\n      <calcite-action\n        alignment="${select("alignment", ["start", "center", "end"], "center")}"\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        appearance="${select("appearance", ["solid", "clear", "outline"], "solid")}"\n        icon="${select("icon", iconNames, "trash")}"\n        ${text("text", "trash")}\n      >\n      </calcite-action>\n    </calcite-action-group>\n  </div>\n`'}},GridCentering.parameters)},"./src/components/action-pad/action-pad.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"darkThemeRTL",(function(){return darkThemeRTL})),__webpack_require__.d(__webpack_exports__,"withTooltip",(function(){return withTooltip}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),resources=__webpack_require__("./.storybook/resources.ts"),tests_utils=__webpack_require__("./src/tests/utils.ts"),TEXT_expand="Expand",TEXT_collapse="Collapse",createAttributes=(__webpack_exports__.default={title:"Components/Action Pad",parameters:{notes:'# calcite-action-pad\n\nThe `calcite-action-pad` component is made up of `calcite-action`s in the form of clickable icons. This does not have an expandable option and is a smaller and simpler component than `calcite-action-bar`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nRenders a basic action pad with `calcite-action`s.\n\n```html\n<calcite-action-pad>\n  <calcite-action text="Undo" icon="undo"></calcite-action>\n  <calcite-action text="Redo" icon="redo"></calcite-action>\n</calcite-action-pad>\n```\n\n### Tooltip\n\nRenders an action pad with a tooltip on the expand action.\n\n```html\n<calcite-action-pad id="action-pad-test">\n  <calcite-action text="Add" icon="plus"></calcite-action>\n</calcite-action-pad>\n<calcite-tooltip id="tooltip">Expand</calcite-tooltip>\n<script>\n  var actionPad = document.getElementById("action-pad-test");\n  var tooltip = document.getElementById("tooltip");\n  actionPad.tooltipExpand = tooltip;\n<\/script>\n```\n\n### With-grouping\n\nRenders a group of `calcite-action`s contained in a `calcite-action-group`. Actions in a group are visually separated from other groups or actions in the pad.\n\n```html\n<calcite-action-pad>\n  <calcite-action-group>\n    <calcite-action text="Home" icon="home"></calcite-action>\n    <calcite-action text="Styles" icon="add-in-edit"></calcite-action>\n  </calcite-action-group>\n\n  <calcite-action text="Tips" icon="lightbulb"></calcite-action>\n</calcite-action-pad>\n```\n\n## Properties\n\n| Property         | Attribute         | Description                                                              | Type                                   | Default      |\n| ---------------- | ----------------- | ------------------------------------------------------------------------ | -------------------------------------- | ------------ |\n| `expandDisabled` | `expand-disabled` | When set to true, the expand-toggling behavior will be disabled.         | `boolean`                              | `false`      |\n| `expanded`       | `expanded`        | Indicates whether widget is expanded.                                    | `boolean`                              | `false`      |\n| `intlCollapse`   | `intl-collapse`   | Updates the label of the collapse icon when the component is expanded.   | `string`                               | `undefined`  |\n| `intlExpand`     | `intl-expand`     | Updates the label of the expand icon when the component is not expanded. | `string`                               | `undefined`  |\n| `layout`         | `layout`          | Indicates the horizontal or vertical layout of the component.            | `"grid" \\| "horizontal" \\| "vertical"` | `"vertical"` |\n| `position`       | `position`        | Arranges the component depending on the elements \'dir\' property.         | `"end" \\| "start"`                     | `undefined`  |\n| `scale`          | `scale`           | Specifies the size of the expand action.                                 | `"l" \\| "m" \\| "s"`                    | `undefined`  |\n\n## Events\n\n| Event                    | Description                             | Type               |\n| ------------------------ | --------------------------------------- | ------------------ |\n| `calciteActionPadToggle` | Emitted when expanded has been toggled. | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus(focusId?: "expand-toggle") => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot               | Description                                            |\n| ------------------ | ------------------------------------------------------ |\n|                    | A slot for adding `calcite-action`s to the action pad. |\n| `"expand-tooltip"` | Used to set the tooltip for the expand toggle.         |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-action-group](../action-group)\n- [calcite-action](../action)\n- [calcite-tooltip-manager](../tooltip-manager)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-action-pad --\x3e calcite-action-group\n  calcite-action-pad --\x3e calcite-action\n  calcite-action-pad --\x3e calcite-tooltip-manager\n  calcite-action-group --\x3e calcite-action-menu\n  calcite-action-group --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-tooltip-manager\n  calcite-action-menu --\x3e calcite-popover\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  style calcite-action-pad fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,position=resources.a.position;return Object(utils.b)([{name:"expand-disabled",commit:function(){return this.value=Object(dist.boolean)("expandDisabled",!1),delete this.build,this}},{name:"expanded",commit:function(){return this.value=Object(dist.boolean)("expanded",!1),delete this.build,this}},{name:"position",commit:function(){return this.value=Object(dist.select)("position",position.values,position.defaultValue),delete this.build,this}},{name:"intl-expand",commit:function(){return this.value=Object(dist.text)("intlExpand",TEXT_expand),delete this.build,this}},{name:"intl-collapse",commit:function(){return this.value=Object(dist.text)("intlCollapse",TEXT_collapse),delete this.build,this}}],exceptions)}),basic=function(){return Object(utils.a)("calcite-action-pad",createAttributes(),tests_utils.a`
      <calcite-action-group>
        <calcite-action text="Undo" label="Undo Action" icon="undo"></calcite-action>
        <calcite-action text="Redo" label="Redo Action" icon="redo"></calcite-action>
      </calcite-action-group>
      <calcite-action-group>
        <calcite-action text="Delete" label="Delete Item" icon="trash"></calcite-action>
      </calcite-action-group>
    `)},darkThemeRTL=function(){return Object(utils.a)("calcite-action-pad",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-theme-dark"}]),tests_utils.a`
      <calcite-action-group>
        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>
        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>
      </calcite-action-group>
      <calcite-action-group>
        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>
      </calcite-action-group>
    `)};darkThemeRTL.parameters={themes:utils.f};var withTooltip=function(){return Object(utils.a)("calcite-action-pad",createAttributes(),tests_utils.a`
      <calcite-tooltip placement="bottom" slot="expand-tooltip">Expand</calcite-tooltip>
      <calcite-action text="Add" icon="plus"></calcite-action>
    `)};basic.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-pad",\n    createAttributes(),\n    html`\n      <calcite-action-group>\n        <calcite-action text="Undo" label="Undo Action" icon="undo"></calcite-action>\n        <calcite-action text="Redo" label="Redo Action" icon="redo"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Delete" label="Delete Item" icon="trash"></calcite-action>\n      </calcite-action-group>\n    `\n  )'}},basic.parameters),darkThemeRTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-pad",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-theme-dark"\n      }\n    ]),\n    html`\n      <calcite-action-group>\n        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>\n        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>\n      </calcite-action-group>\n    `\n  )'}},darkThemeRTL.parameters),withTooltip.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-pad",\n    createAttributes(),\n    html`\n      <calcite-tooltip placement="bottom" slot="expand-tooltip">Expand</calcite-tooltip>\n      <calcite-action text="Add" icon="plus"></calcite-action>\n    `\n  )'}},withTooltip.parameters)},"./src/components/action/action.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),resources=__webpack_require__("./.storybook/resources.ts");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var alignment=resources.a.alignment,scale=resources.a.scale,selector=(__webpack_exports__.default={title:"Components/Buttons/Action",parameters:{notes:'# calcite-action\n\nThe `calcite-action` component lives in either a `calcite-action-bar` or `calcite-action-pad`. Actions look like an icon with a text description option of the component that will be revealed when the icon/ text is clicked or selected.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Clear-appearance\n\nRenders a `calcite-action` that has a clear background.\n\n```html\n<calcite-action appearance="clear" text="Layers" icon="layers"></calcite-action>\n```\n\n### With-text-displayed\n\nRenders a `calcite-action` that displays text along side an icon and a tooltip label.\n\n```html\n<calcite-action label="Performs my custom action" text="Perform Action!" text-enabled icon="save"></calcite-action>\n```\n\n### Without-text-displayed\n\nRenders a `calcite-action` that displays only an icon and a tooltip label.\n\n```html\n<calcite-action label="Performs my custom action" text="My Custom Action" icon="plus"></calcite-action>\n```\n\n## Properties\n\n| Property            | Attribute      | Description                                                                                                                         | Type                           | Default        |\n| ------------------- | -------------- | ----------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | -------------- |\n| `active`            | `active`       | Indicates whether the action is highlighted.                                                                                        | `boolean`                      | `false`        |\n| `alignment`         | `alignment`    | Optionally specify the horizontal alignment of button elements with text content.                                                   | `"center" \\| "end" \\| "start"` | `undefined`    |\n| `appearance`        | `appearance`   | Specify the appearance style of the action, defaults to solid.                                                                      | `"clear" \\| "solid"`           | `"solid"`      |\n| `compact`           | `compact`      | Compact mode is used internally by components to reduce side padding, e.g. calcite-block-section.                                   | `boolean`                      | `false`        |\n| `disabled`          | `disabled`     | When true, disabled prevents interaction. This state shows items with lower opacity/grayed.                                         | `boolean`                      | `false`        |\n| `icon`              | `icon`         | The name of the icon to display. The value of this property must match the icon name from https://esri.github.io/calcite-ui-icons/. | `string`                       | `undefined`    |\n| `indicator`         | `indicator`    | Indicates unread changes.                                                                                                           | `boolean`                      | `false`        |\n| `intlLoading`       | `intl-loading` | string to override English loading text                                                                                             | `string`                       | `TEXT.loading` |\n| `label`             | `label`        | The label of the action. If no label is provided, the label inherits what\'s provided for the `text` prop.                           | `string`                       | `undefined`    |\n| `loading`           | `loading`      | When true, content is waiting to be loaded. This state shows a busy indicator.                                                      | `boolean`                      | `false`        |\n| `scale`             | `scale`        | Specifies the size of the action.                                                                                                   | `"l" \\| "m" \\| "s"`            | `"m"`          |\n| `text` _(required)_ | `text`         | Text that accompanies the action icon.                                                                                              | `string`                       | `undefined`    |\n| `textEnabled`       | `text-enabled` | Indicates whether the text is displayed.                                                                                            | `boolean`                      | `false`        |\n\n## Events\n\n| Event                | Description                                                                                                             | Type               |\n| -------------------- | ----------------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `calciteActionClick` | <span style="color:red">**[DEPRECATED]**</span> use onClick instead.<br/><br/>Emitted when the action has been clicked. | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description                         |\n| ---- | ----------------------------------- |\n|      | A slot for adding a `calcite-icon`. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-action-bar](../action-bar)\n- [calcite-action-group](../action-group)\n- [calcite-action-menu](../action-menu)\n- [calcite-action-pad](../action-pad)\n- [calcite-panel](../panel)\n- [calcite-pick-list-item](../pick-list-item)\n- [calcite-popover](../popover)\n- [calcite-tip](../tip)\n- [calcite-tip-manager](../tip-manager)\n\n### Depends on\n\n- [calcite-loader](../loader)\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-action-bar --\x3e calcite-action\n  calcite-action-group --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-pad --\x3e calcite-action\n  calcite-panel --\x3e calcite-action\n  calcite-pick-list-item --\x3e calcite-action\n  calcite-popover --\x3e calcite-action\n  calcite-tip --\x3e calcite-action\n  calcite-tip-manager --\x3e calcite-action\n  style calcite-action fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},"calcite-action"),Default=Object(helpers.f)((function(){return tests_utils.a`<div style="width: 150px">${Object(utils.a)("calcite-action",function(){var exceptions=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]}).exceptions;return Object(utils.b)([{name:"active",commit:function(){return this.value=Object(dist.boolean)("active",!1),delete this.build,this}},{name:"alignment",commit:function(){return this.value=Object(dist.select)("alignment",alignment.values,alignment.defaultValue),delete this.build,this}},{name:"appearance",commit:function(){return this.value=Object(dist.select)("appearance",["solid","clear"],"solid"),delete this.build,this}},{name:"compact",commit:function(){return this.value=Object(dist.boolean)("compact",!1),delete this.build,this}},{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1),delete this.build,this}},{name:"icon",commit:function(){return this.value=Object(dist.select)("icon",[""].concat(_toConsumableArray(helpers.c)),""),delete this.build,this}},{name:"indicator",commit:function(){return this.value=Object(dist.boolean)("indicator",!1),delete this.build,this}},{name:"label",commit:function(){return this.value=Object(dist.text)("label","Label"),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1),delete this.build,this}},{name:"scale",commit:function(){return this.value=Object(dist.select)("scale",scale.values,scale.defaultValue),delete this.build,this}},{name:"text",commit:function(){return this.value=Object(dist.text)("text","Text"),delete this.build,this}},{name:"text-enabled",commit:function(){return this.value=Object(dist.boolean)("textEnabled",!0),delete this.build,this}},{name:"style",commit:function(){return this.value=Object(dist.boolean)("textEnabled",!0),delete this.build,this}}],exceptions)}())}</div>`}),Object(helpers.b)("calcite-action").snapshot("No Icon").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"icon",value:"beaker"}]})).snapshot("Default").hover(selector).snapshot("Default Hover").mouseDown(selector).snapshot("Default Mouse Down").mouseUp(selector).snapshot("Default Mouse Up").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"active",value:"true"},{name:"icon",value:"beaker"}]})).snapshot("Active").hover(selector).snapshot("Active Hover").mouseDown(selector).snapshot("Active Mouse Down").mouseUp(selector).snapshot("Active Mouse Up").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"center"},{name:"icon",value:"beaker"}]})).snapshot("Alignment Center").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"end"},{name:"icon",value:"beaker"}]})).snapshot("Alignment End").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"appearance",value:"clear"},{name:"icon",value:"beaker"}]})).snapshot("Appearance Clear").hover(selector).snapshot("Appearance Clear Hover").mouseDown(selector).snapshot("Appearance Clear Mouse Down").mouseUp(selector).snapshot("Appearance Clear Mouse Up").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"compact",value:"true"},{name:"icon",value:"beaker"}]})).snapshot("Compact Alignment Start").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"end"},{name:"compact",value:"true"},{name:"icon",value:"beaker"}]})).snapshot("Compact Alignment End").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"compact",value:"true"},{name:"textEnabled",value:"false"},{name:"icon",value:"beaker"}]})).snapshot("Compact Text Disabled").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"indicator",value:"true"},{name:"icon",value:"beaker"}]})).executeScript(Object(helpers.e)("dark")).snapshot("Dark").hover(selector).snapshot("Dark Hover").mouseDown(selector).snapshot("Dark Mouse Down").mouseUp(selector).snapshot("Dark Mouse Up").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"active",value:"true"},{name:"icon",value:"beaker"},{name:"indicator",value:"true"}]})).executeScript(Object(helpers.e)("dark")).snapshot("Dark Active").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"active",value:"true"},{name:"disabled",value:"true"},{name:"indicator",value:"true"},{name:"icon",value:"beaker"}]})).executeScript(Object(helpers.e)("dark")).snapshot("Dark Active Disabled").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"active",value:"true"},{name:"disabled",value:"true"},{name:"indicator",value:"true"},{name:"icon",value:"beaker"}]})).executeScript(Object(helpers.e)("light")).snapshot("Disabled Active").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"appearance",value:"solid"},{name:"disabled",value:"true"},{name:"indicator",value:"true"},{name:"icon",value:"beaker"}]})).snapshot("Disabled Appearance Solid").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"appearance",value:"clear"},{name:"disabled",value:"true"},{name:"indicator",value:"true"},{name:"icon",value:"beaker"}]})).snapshot("Disabled Appearance Clear").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"indicator",value:"true"},{name:"icon",value:"beaker"}]})).snapshot("Indicator").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"indicator",value:"true"},{name:"textEnabled",value:"false"},{name:"icon",value:"beaker"}]})).snapshot("Indicator Text Disabled").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"loading",value:"true"},{name:"icon",value:"beaker"}]})).snapshot("Loading").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"loading",value:"true"},{name:"textEnabled",value:"false"},{name:"icon",value:"beaker"}]})).snapshot("Loading Text Disabled").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"start"},{name:"icon",value:"beaker"}]})).rtl().snapshot("RTL Alignment Start").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"center"},{name:"icon",value:"beaker"}]})).rtl().snapshot("RTL Alignment Center").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"end"},{name:"icon",value:"beaker"}]})).rtl().snapshot("RTL Alignment End").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"start"},{name:"indicator",value:"true"},{name:"icon",value:"beaker"}]})).rtl().snapshot("RTL Indicator Alignment Start").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"center"},{name:"indicator",value:"true"},{name:"icon",value:"beaker"}]})).rtl().snapshot("RTL Indicator Alignment Center").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"end"},{name:"indicator",value:"true"},{name:"icon",value:"beaker"}]})).rtl().snapshot("RTL Indicator Alignment End").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"start"},{name:"loading",value:"true"},{name:"icon",value:"beaker"}]})).rtl().snapshot("RTL Loading Alignment Start").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"center"},{name:"loading",value:"true"},{name:"icon",value:"beaker"}]})).rtl().snapshot("RTL Loading Alignment Center").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"alignment",value:"end"},{name:"loading",value:"true"},{name:"icon",value:"beaker"}]})).rtl().snapshot("RTL Loading Alignment End").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"indicator",value:"true"},{name:"scale",value:"s"},{name:"icon",value:"beaker"}]})).snapshot("Scale Small").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"indicator",value:"true"},{name:"scale",value:"s"},{name:"textEnabled",value:"false"},{name:"icon",value:"beaker"}]})).snapshot("Scale Small Text Disabled").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"indicator",value:"true"},{name:"scale",value:"l"},{name:"icon",value:"beaker"}]})).snapshot("Scale Large").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"indicator",value:"true"},{name:"scale",value:"l"},{name:"textEnabled",value:"false"},{name:"icon",value:"beaker"}]})).snapshot("Scale Large Text Disabled").executeScript(Object(helpers.d)({story:"components-buttons-action--default",knobs:[{name:"text",value:"A long amount of text"},{name:"icon",value:"beaker"}]})).snapshot("Text Overflow"));Default.parameters=Object.assign({storySource:{source:'stepStory(\n  (): string => html`<div style="width: 150px">${create("calcite-action", createAttributes())}</div>`,\n\n  createSteps("calcite-action")\n    // No Icon\n    .snapshot("No Icon")\n\n    // Default\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [{ name: "icon", value: "beaker" }]\n      })\n    )\n    .snapshot("Default")\n    .hover(selector)\n    .snapshot("Default Hover")\n    .mouseDown(selector)\n    .snapshot("Default Mouse Down")\n    .mouseUp(selector)\n    .snapshot("Default Mouse Up")\n\n    // Active\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "active", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Active")\n    .hover(selector)\n    .snapshot("Active Hover")\n    .mouseDown(selector)\n    .snapshot("Active Mouse Down")\n    .mouseUp(selector)\n    .snapshot("Active Mouse Up")\n\n    // Alignment Center\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "center" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Alignment Center")\n\n    // Alignment End\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "end" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Alignment End")\n\n    // Appearance Clear\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "appearance", value: "clear" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Appearance Clear")\n    .hover(selector)\n    .snapshot("Appearance Clear Hover")\n    .mouseDown(selector)\n    .snapshot("Appearance Clear Mouse Down")\n    .mouseUp(selector)\n    .snapshot("Appearance Clear Mouse Up")\n\n    // Compact\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "compact", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Compact Alignment Start")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "end" },\n          { name: "compact", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Compact Alignment End")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "compact", value: "true" },\n          { name: "textEnabled", value: "false" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Compact Text Disabled")\n\n    // Dark\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "indicator", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Dark")\n    .hover(selector)\n    .snapshot("Dark Hover")\n    .mouseDown(selector)\n    .snapshot("Dark Mouse Down")\n    .mouseUp(selector)\n    .snapshot("Dark Mouse Up")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "active", value: "true" },\n          { name: "icon", value: "beaker" },\n          { name: "indicator", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Dark Active")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "active", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "indicator", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Dark Active Disabled")\n\n    // Disabled\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "active", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "indicator", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .executeScript(setTheme("light"))\n    .snapshot("Disabled Active")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "appearance", value: "solid" },\n          { name: "disabled", value: "true" },\n          { name: "indicator", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Disabled Appearance Solid")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "appearance", value: "clear" },\n          { name: "disabled", value: "true" },\n          { name: "indicator", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Disabled Appearance Clear")\n\n    // Indicator\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "indicator", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Indicator")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "indicator", value: "true" },\n          { name: "textEnabled", value: "false" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Indicator Text Disabled")\n\n    // Loading\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "loading", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Loading")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "loading", value: "true" },\n          { name: "textEnabled", value: "false" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Loading Text Disabled")\n\n    // RTL\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "start" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Alignment Start")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "center" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Alignment Center")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "end" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Alignment End")\n\n    // RTL Indicator\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "start" },\n          { name: "indicator", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Indicator Alignment Start")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "center" },\n          { name: "indicator", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Indicator Alignment Center")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "end" },\n          { name: "indicator", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Indicator Alignment End")\n\n    // RTL Loading\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "start" },\n          { name: "loading", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Loading Alignment Start")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "center" },\n          { name: "loading", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Loading Alignment Center")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "alignment", value: "end" },\n          { name: "loading", value: "true" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Loading Alignment End")\n\n    // Scale\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "indicator", value: "true" },\n          { name: "scale", value: "s" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Scale Small")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "indicator", value: "true" },\n          { name: "scale", value: "s" },\n          { name: "textEnabled", value: "false" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Scale Small Text Disabled")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "indicator", value: "true" },\n          { name: "scale", value: "l" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Scale Large")\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "indicator", value: "true" },\n          { name: "scale", value: "l" },\n          { name: "textEnabled", value: "false" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Scale Large Text Disabled")\n\n    // Text\n    .executeScript(\n      setKnobs({\n        story: "components-buttons-action--default",\n        knobs: [\n          { name: "text", value: "A long amount of text" },\n          { name: "icon", value: "beaker" }\n        ]\n      })\n    )\n    .snapshot("Text Overflow")\n)'}},Default.parameters)},"./src/components/alert/alert.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TitleMessageLink",(function(){return TitleMessageLink})),__webpack_require__.d(__webpack_exports__,"TitleMessage",(function(){return TitleMessage})),__webpack_require__.d(__webpack_exports__,"MessageLink",(function(){return MessageLink})),__webpack_require__.d(__webpack_exports__,"Message",(function(){return Message})),__webpack_require__.d(__webpack_exports__,"CustomIcon",(function(){return CustomIcon})),__webpack_require__.d(__webpack_exports__,"Queue",(function(){return Queue})),__webpack_require__.d(__webpack_exports__,"DarkTheme",(function(){return DarkTheme})),__webpack_require__.d(__webpack_exports__,"DarkThemeQueue",(function(){return DarkThemeQueue})),__webpack_require__.d(__webpack_exports__,"Rtl",(function(){return Rtl}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),TitleMessageLink=(__webpack_exports__.default={title:"Components/Alert",parameters:{notes:'# calcite-alert\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nA single instance of an alert. Multiple alerts will aggregate in a queue.\n\n```html\n<calcite-alert active>\n  <div slot="title">Title of alert</div>\n  <div slot="message">Message text of the alert</div>\n  <a slot="link" href="#">Retry</a>\n</calcite-alert>\n```\n\n## Properties\n\n| Property              | Attribute               | Description                                                                                                                                            | Type                                                                              | Default                              |\n| --------------------- | ----------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------- | ------------------------------------ |\n| `active`              | `active`                | Is the alert currently active or not                                                                                                                   | `boolean`                                                                         | `false`                              |\n| `autoDismiss`         | `auto-dismiss`          | Close the alert automatically (recommended for passive, non-blocking alerts)                                                                           | `boolean`                                                                         | `false`                              |\n| `autoDismissDuration` | `auto-dismiss-duration` | Duration of autoDismiss (only used with `autoDismiss`)                                                                                                 | `"fast" \\| "medium" \\| "slow"`                                                    | `this.autoDismiss ? "medium" : null` |\n| `color`               | `color`                 | Color for the alert (will apply to top border and icon)                                                                                                | `"blue" \\| "green" \\| "red" \\| "yellow"`                                          | `"blue"`                             |\n| `icon`                | `icon`                  | when used as a boolean set to true, show a default recommended icon. You can also pass a calcite-ui-icon name to this prop to display a requested icon | `boolean \\| string`                                                               | `undefined`                          |\n| `intlClose`           | `intl-close`            | string to override English close text                                                                                                                  | `string`                                                                          | `TEXT.intlClose`                     |\n| `label` _(required)_  | `label`                 | Accessible name for the component                                                                                                                      | `string`                                                                          | `undefined`                          |\n| `placement`           | `placement`             | specify the placement of the alert                                                                                                                     | `"bottom" \\| "bottom-end" \\| "bottom-start" \\| "top" \\| "top-end" \\| "top-start"` | `"bottom"`                           |\n| `scale`               | `scale`                 | specify the scale of the alert, defaults to m                                                                                                          | `"l" \\| "m" \\| "s"`                                                               | `"m"`                                |\n\n## Events\n\n| Event               | Description                   | Type               |\n| ------------------- | ----------------------------- | ------------------ |\n| `calciteAlertClose` | Fired when an alert is closed | `CustomEvent<any>` |\n| `calciteAlertOpen`  | Fired when an alert is opened | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot        | Description                                                                  |\n| ----------- | ---------------------------------------------------------------------------- |\n| `"link"`    | Optional action to take from the alert (undo, try again, link to page, etc.) |\n| `"message"` | Main text of the alert                                                       |\n| `"title"`   | Title of the alert (optional)                                                |\n\n## CSS Custom Properties\n\n| Name                    | Description            |\n| ----------------------- | ---------------------- |\n| `--calcite-alert-width` | the width of the alert |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-chip](../chip)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-alert --\x3e calcite-icon\n  calcite-alert --\x3e calcite-chip\n  calcite-chip --\x3e calcite-icon\n  style calcite-alert fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
<calcite-alert
${Object(helpers.a)("icon",!0)}
${Object(helpers.a)("auto-dismiss",!1)}
auto-dismiss-duration="${Object(dist.select)("auto-dismiss-duration",["fast","medium","slow"],"medium")}"
placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
${Object(helpers.a)("active",!0)}
scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
color="${Object(dist.select)("color",["green","red","yellow","blue"],"blue")}">
<div slot="title">Here's a general bit of information</div></div>
<div slot="message">
  Some kind of contextually relevant content
</div>
<calcite-link slot="link" title="my action">Take action</calcite-link>
</calcite-alert>
`});TitleMessageLink.storyName="Title, message, link";var TitleMessage=function(){return tests_utils.a`
  <calcite-alert
    ${Object(helpers.a)("icon",!0)}
    ${Object(helpers.a)("auto-dismiss",!1)}
    auto-dismiss-duration="${Object(dist.select)("auto-dismiss-duration",["fast","medium","slow"],"medium")}"
    placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
    ${Object(helpers.a)("active",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    color="${Object(dist.select)("color",["green","red","yellow","blue"],"red")}"
  >
    <div slot="title">Something failed</div>
    <div slot="message">That thing you wanted to do didn't work as expected</div>
  </calcite-alert>
`};TitleMessage.storyName="Title, message";var MessageLink=function(){return tests_utils.a`
  <calcite-alert
    ${Object(helpers.a)("icon",!0)}
    ${Object(helpers.a)("auto-dismiss",!1)}
    auto-dismiss-duration="${Object(dist.select)("auto-dismiss-duration",["fast","medium","slow"],"medium")}"
    placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
    ${Object(helpers.a)("active",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    color="${Object(dist.select)("color",["green","red","yellow","blue"],"green")}"
  >
    <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>
    <calcite-link slot="link" title="my action">View layer</calcite-link>
  </calcite-alert>
`};MessageLink.storyName="Message, link";var Message=function(){return tests_utils.a`
  <calcite-alert
    ${Object(helpers.a)("icon",!0)}
    ${Object(helpers.a)("auto-dismiss",!1)}
    auto-dismiss-duration="${Object(dist.select)("auto-dismiss-duration",["fast","medium","slow"],"medium")}"
    placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
    ${Object(helpers.a)("active",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    color="${Object(dist.select)("color",["green","red","yellow","blue"],"yellow")}"
  >
    <div slot="message">Network connection interruption detected</div>
  </calcite-alert>
`},CustomIcon=function(){return tests_utils.a`
  <calcite-alert
    icon="${Object(dist.select)("icon",helpers.c,helpers.c[0])}"
    ${Object(helpers.a)("auto-dismiss",!1)}
    auto-dismiss-duration="${Object(dist.select)("auto-dismiss-duration",["fast","medium","slow"],"medium")}"
    placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
    ${Object(helpers.a)("active",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    color="${Object(dist.select)("color",["green","red","yellow","blue"],"green")}"
  >
    <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>
    <calcite-link slot="link" title="my action">View layer</calcite-link>
  </calcite-alert>
`};CustomIcon.storyName="Custom icon";var Queue=function(){return tests_utils.a`
  <div>
    <h5>Open or add to queue</h5>
    <calcite-button onclick='document.querySelector("#one").setAttribute("active", "")'>Open Alert 1</calcite-button>
    <calcite-button onclick='document.querySelector("#two").setAttribute("active", "")'>Open Alert 2</calcite-button>
    <calcite-button onclick='document.querySelector("[data-custom-id=my-id]").setAttribute("active", "")'
      >Open Alert 3</calcite-button
    >
    <br />
    <br />
    <h5>Close or remove from queue</h5>
    <calcite-button color="red" onclick='document.querySelector("#one").removeAttribute("active")'
      >Close Alert 1</calcite-button
    >
    <calcite-button color="red" onclick='document.querySelector("#two").removeAttribute("active")'
      >Close Alert 2</calcite-button
    >
    <calcite-button color="red" onclick='document.querySelector("[data-custom-id=my-id]").removeAttribute("active")'
      >Close Alert 3</calcite-button
    >
    <calcite-alert id="one" icon color="${Object(dist.select)("color",["green","red","yellow","blue"],"green")}">
      <div slot="title">Your great thing happened</div>
      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>
      <calcite-link slot="link" title="my action">View layer</calcite-link>
    </calcite-alert>
    <calcite-alert id="two" icon color="${Object(dist.select)("color-2",["green","red","yellow","blue"],"blue")}">
      <div slot="title">Your great thing happened</div>
      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>
      <calcite-link slot="link" title="my action">View layer</calcite-link>
    </calcite-alert>
    <calcite-alert data-custom-id="my-id" icon color="${Object(dist.select)("color-3",["green","red","yellow","blue"],"red")}">
      <div slot="title">That didn't work out</div>
      <div slot="message">That thing you wanted to do didn't work</div>
      <calcite-link slot="link" title="my action">View layer</calcite-link>
    </calcite-alert>
  </div>
`},DarkTheme=function(){return tests_utils.a`
  <calcite-alert
    class="calcite-theme-dark"
    ${Object(helpers.a)("icon",!0)}
    ${Object(helpers.a)("auto-dismiss",!1)}
    auto-dismiss-duration="${Object(dist.select)("auto-dismiss-duration",["fast","medium","slow"],"medium")}"
    placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
    ${Object(helpers.a)("active",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    color="${Object(dist.select)("color",["green","red","yellow","blue"],"red")}"
  >
    <div slot="title">Something failed</div>
    <div slot="message">That thing you wanted to do didn't work as expected</div>
    <calcite-link slot="link" title="my action">My action</calcite-link>
  </calcite-alert>
`};DarkTheme.parameters={themes:utils.f};var DarkThemeQueue=function(){return tests_utils.a`
  <div>
    <h5 style="color:white">Open or add to queue</h5>
    <calcite-button class="calcite-theme-dark" onclick='document.querySelector("#one").setAttribute("active", "")'
      >Open Alert 1</calcite-button
    >
    <calcite-button class="calcite-theme-dark" onclick='document.querySelector("#two").setAttribute("active", "")'
      >Open Alert 2</calcite-button
    >
    <calcite-button
      class="calcite-theme-dark"
      onclick='document.querySelector("[data-custom-id=my-id]").setAttribute("active", "")'
      >Open Alert 3</calcite-button
    >
    <br />
    <br />
    <h5 style="color:white">Close or remove from queue</h5>
    <calcite-button
      class="calcite-theme-dark"
      color="red"
      onclick='document.querySelector("#one").removeAttribute("active")'
      >Close Alert 1</calcite-button
    >
    <calcite-button
      class="calcite-theme-dark"
      color="red"
      onclick='document.querySelector("#two").removeAttribute("active")'
      >Close Alert 2</calcite-button
    >
    <calcite-button
      class="calcite-theme-dark"
      color="red"
      onclick='document.querySelector("[data-custom-id=my-id]").removeAttribute("active")'
      >Close Alert 3</calcite-button
    >
    <calcite-alert
      id="one"
      class="calcite-theme-dark"
      icon
      color="${Object(dist.select)("color",["green","red","yellow","blue"],"green")}"
    >
      <div slot="title">Your great thing happened</div>
      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>
      <calcite-link class="calcite-theme-dark" slot="link" title="my action">My action</calcite-link>
    </calcite-alert>
    <calcite-alert
      id="two"
      class="calcite-theme-dark"
      icon
      color="${Object(dist.select)("color-2",["green","red","yellow","blue"],"blue")}"
    >
      <div slot="title">Your great thing happened</div>
      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>
      <calcite-link class="calcite-theme-dark" slot="link" title="my action">My action</calcite-link>
    </calcite-alert>
    <calcite-alert
      data-custom-id="my-id"
      class="calcite-theme-dark"
      icon
      color="${Object(dist.select)("color-3",["green","red","yellow","blue"],"red")}"
    >
      <div slot="message">That thing you wanted to do didn't work out so well.</div>
    </calcite-alert>
  </div>
`};DarkThemeQueue.parameters={themes:utils.f};var Rtl=function(){return tests_utils.a`
<div dir="rtl">
<calcite-alert
${Object(helpers.a)("icon",!0)}
${Object(helpers.a)("auto-dismiss",!1)}
auto-dismiss-duration="${Object(dist.select)("auto-dismiss-duration",["fast","medium","slow"],"medium")}"
placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
${Object(helpers.a)("active",!0)}
scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
color="${Object(dist.select)("color",["green","red","yellow","blue"],"blue")}">
<div slot="title">Something failed</div>
<div slot="message">
  That thing you wanted to do didn't work as expected
</div>
<calcite-link slot="link" title="my action">Retry</calcite-button>
</calcite-alert>
</div>
`};Rtl.storyName="RTL",TitleMessageLink.parameters=Object.assign({storySource:{source:'(): string => html`\n<calcite-alert\n${boolean("icon", true)}\n${boolean("auto-dismiss", false)}\nauto-dismiss-duration="${select("auto-dismiss-duration", ["fast", "medium", "slow"], "medium")}"\nplacement="${select("placement", ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"], "bottom")}"\n${boolean("active", true)}\nscale="${select("scale", ["s", "m", "l"], "m")}"\ncolor="${select("color", ["green", "red", "yellow", "blue"], "blue")}">\n<div slot="title">Here\'s a general bit of information</div></div>\n<div slot="message">\n  Some kind of contextually relevant content\n</div>\n<calcite-link slot="link" title="my action">Take action</calcite-link>\n</calcite-alert>\n`'}},TitleMessageLink.parameters),TitleMessage.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-alert\n    ${boolean("icon", true)}\n    ${boolean("auto-dismiss", false)}\n    auto-dismiss-duration="${select("auto-dismiss-duration", ["fast", "medium", "slow"], "medium")}"\n    placement="${select(\n      "placement",\n      ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"],\n      "bottom"\n    )}"\n    ${boolean("active", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    color="${select("color", ["green", "red", "yellow", "blue"], "red")}"\n  >\n    <div slot="title">Something failed</div>\n    <div slot="message">That thing you wanted to do didn\'t work as expected</div>\n  </calcite-alert>\n`'}},TitleMessage.parameters),MessageLink.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-alert\n    ${boolean("icon", true)}\n    ${boolean("auto-dismiss", false)}\n    auto-dismiss-duration="${select("auto-dismiss-duration", ["fast", "medium", "slow"], "medium")}"\n    placement="${select(\n      "placement",\n      ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"],\n      "bottom"\n    )}"\n    ${boolean("active", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    color="${select("color", ["green", "red", "yellow", "blue"], "green")}"\n  >\n    <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>\n    <calcite-link slot="link" title="my action">View layer</calcite-link>\n  </calcite-alert>\n`'}},MessageLink.parameters),Message.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-alert\n    ${boolean("icon", true)}\n    ${boolean("auto-dismiss", false)}\n    auto-dismiss-duration="${select("auto-dismiss-duration", ["fast", "medium", "slow"], "medium")}"\n    placement="${select(\n      "placement",\n      ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"],\n      "bottom"\n    )}"\n    ${boolean("active", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    color="${select("color", ["green", "red", "yellow", "blue"], "yellow")}"\n  >\n    <div slot="message">Network connection interruption detected</div>\n  </calcite-alert>\n`'}},Message.parameters),CustomIcon.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-alert\n    icon="${select("icon", iconNames, iconNames[0])}"\n    ${boolean("auto-dismiss", false)}\n    auto-dismiss-duration="${select("auto-dismiss-duration", ["fast", "medium", "slow"], "medium")}"\n    placement="${select(\n      "placement",\n      ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"],\n      "bottom"\n    )}"\n    ${boolean("active", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    color="${select("color", ["green", "red", "yellow", "blue"], "green")}"\n  >\n    <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>\n    <calcite-link slot="link" title="my action">View layer</calcite-link>\n  </calcite-alert>\n`'}},CustomIcon.parameters),Queue.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div>\n    <h5>Open or add to queue</h5>\n    <calcite-button onclick=\'document.querySelector("#one").setAttribute("active", "")\'>Open Alert 1</calcite-button>\n    <calcite-button onclick=\'document.querySelector("#two").setAttribute("active", "")\'>Open Alert 2</calcite-button>\n    <calcite-button onclick=\'document.querySelector("[data-custom-id=my-id]").setAttribute("active", "")\'\n      >Open Alert 3</calcite-button\n    >\n    <br />\n    <br />\n    <h5>Close or remove from queue</h5>\n    <calcite-button color="red" onclick=\'document.querySelector("#one").removeAttribute("active")\'\n      >Close Alert 1</calcite-button\n    >\n    <calcite-button color="red" onclick=\'document.querySelector("#two").removeAttribute("active")\'\n      >Close Alert 2</calcite-button\n    >\n    <calcite-button color="red" onclick=\'document.querySelector("[data-custom-id=my-id]").removeAttribute("active")\'\n      >Close Alert 3</calcite-button\n    >\n    <calcite-alert id="one" icon color="${select("color", ["green", "red", "yellow", "blue"], "green")}">\n      <div slot="title">Your great thing happened</div>\n      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>\n      <calcite-link slot="link" title="my action">View layer</calcite-link>\n    </calcite-alert>\n    <calcite-alert id="two" icon color="${select("color-2", ["green", "red", "yellow", "blue"], "blue")}">\n      <div slot="title">Your great thing happened</div>\n      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>\n      <calcite-link slot="link" title="my action">View layer</calcite-link>\n    </calcite-alert>\n    <calcite-alert data-custom-id="my-id" icon color="${select("color-3", ["green", "red", "yellow", "blue"], "red")}">\n      <div slot="title">That didn\'t work out</div>\n      <div slot="message">That thing you wanted to do didn\'t work</div>\n      <calcite-link slot="link" title="my action">View layer</calcite-link>\n    </calcite-alert>\n  </div>\n`'}},Queue.parameters),DarkTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-alert\n    class="calcite-theme-dark"\n    ${boolean("icon", true)}\n    ${boolean("auto-dismiss", false)}\n    auto-dismiss-duration="${select("auto-dismiss-duration", ["fast", "medium", "slow"], "medium")}"\n    placement="${select(\n      "placement",\n      ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"],\n      "bottom"\n    )}"\n    ${boolean("active", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    color="${select("color", ["green", "red", "yellow", "blue"], "red")}"\n  >\n    <div slot="title">Something failed</div>\n    <div slot="message">That thing you wanted to do didn\'t work as expected</div>\n    <calcite-link slot="link" title="my action">My action</calcite-link>\n  </calcite-alert>\n`'}},DarkTheme.parameters),DarkThemeQueue.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div>\n    <h5 style="color:white">Open or add to queue</h5>\n    <calcite-button class="calcite-theme-dark" onclick=\'document.querySelector("#one").setAttribute("active", "")\'\n      >Open Alert 1</calcite-button\n    >\n    <calcite-button class="calcite-theme-dark" onclick=\'document.querySelector("#two").setAttribute("active", "")\'\n      >Open Alert 2</calcite-button\n    >\n    <calcite-button\n      class="calcite-theme-dark"\n      onclick=\'document.querySelector("[data-custom-id=my-id]").setAttribute("active", "")\'\n      >Open Alert 3</calcite-button\n    >\n    <br />\n    <br />\n    <h5 style="color:white">Close or remove from queue</h5>\n    <calcite-button\n      class="calcite-theme-dark"\n      color="red"\n      onclick=\'document.querySelector("#one").removeAttribute("active")\'\n      >Close Alert 1</calcite-button\n    >\n    <calcite-button\n      class="calcite-theme-dark"\n      color="red"\n      onclick=\'document.querySelector("#two").removeAttribute("active")\'\n      >Close Alert 2</calcite-button\n    >\n    <calcite-button\n      class="calcite-theme-dark"\n      color="red"\n      onclick=\'document.querySelector("[data-custom-id=my-id]").removeAttribute("active")\'\n      >Close Alert 3</calcite-button\n    >\n    <calcite-alert\n      id="one"\n      class="calcite-theme-dark"\n      icon\n      color="${select("color", ["green", "red", "yellow", "blue"], "green")}"\n    >\n      <div slot="title">Your great thing happened</div>\n      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>\n      <calcite-link class="calcite-theme-dark" slot="link" title="my action">My action</calcite-link>\n    </calcite-alert>\n    <calcite-alert\n      id="two"\n      class="calcite-theme-dark"\n      icon\n      color="${select("color-2", ["green", "red", "yellow", "blue"], "blue")}"\n    >\n      <div slot="title">Your great thing happened</div>\n      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>\n      <calcite-link class="calcite-theme-dark" slot="link" title="my action">My action</calcite-link>\n    </calcite-alert>\n    <calcite-alert\n      data-custom-id="my-id"\n      class="calcite-theme-dark"\n      icon\n      color="${select("color-3", ["green", "red", "yellow", "blue"], "red")}"\n    >\n      <div slot="message">That thing you wanted to do didn\'t work out so well.</div>\n    </calcite-alert>\n  </div>\n`'}},DarkThemeQueue.parameters),Rtl.parameters=Object.assign({storySource:{source:'(): string => html`\n<div dir="rtl">\n<calcite-alert\n${boolean("icon", true)}\n${boolean("auto-dismiss", false)}\nauto-dismiss-duration="${select("auto-dismiss-duration", ["fast", "medium", "slow"], "medium")}"\nplacement="${select("placement", ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"], "bottom")}"\n${boolean("active", true)}\nscale="${select("scale", ["s", "m", "l"], "m")}"\ncolor="${select("color", ["green", "red", "yellow", "blue"], "blue")}">\n<div slot="title">Something failed</div>\n<div slot="message">\n  That thing you wanted to do didn\'t work as expected\n</div>\n<calcite-link slot="link" title="my action">Retry</calcite-button>\n</calcite-alert>\n</div>\n`'}},Rtl.parameters)},"./src/components/avatar/avatar.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"MissingThumbnail",(function(){return MissingThumbnail})),__webpack_require__.d(__webpack_exports__,"Dark",(function(){return Dark}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Avatar",parameters:{notes:'# calcite-avatar\n\nThe avatar component provides a unique (but consistent) visual for a user. It\'s built\nto work with users returned from the ArcGIS REST API.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nThe JSON sample user below is returned from a [search for users](https://developers.arcgis.com/rest/users-groups-and-items/user-search.htm). You can create an avatar for Ron by passing these properties directly to the avatar component.\n\nWhen no thumbnail is provided, the avatar component will construct a useful placeholder, leveraging the user\'s information to construct a unique background-color with initials.\n\n**Note:** if your user is private, remember to append a token to the end of the thumbnail using the form `thumbnail.jpg?token=YOUR_LOGGED_IN_USER_TOKEN`.\n\n```json\n{\n  "username": "ron_swanson_pawnee",\n  "id": "a81470986eaeee1833b74b7d8abcd5b2",\n  "fullName": "Ron Swanson",\n  "firstName": "Ron",\n  "lastName": "Swanson",\n  "thumbnail": "mySelf.jpg",\n  ...\n}\n```\n\n```html\n<calcite-avatar\n  username="ron_swanson_pawnee"\n  user-id="a81470986eaeee1833b74b7d8abcd5b2"\n  full-name="Ron Swanson"\n  thumbnail="mySelf.jpg"\n>\n</calcite-avatar>\n```\n\n## Properties\n\n| Property    | Attribute   | Description                                                      | Type                | Default     |\n| ----------- | ----------- | ---------------------------------------------------------------- | ------------------- | ----------- |\n| `fullName`  | `full-name` | full name of the user                                            | `string`            | `undefined` |\n| `scale`     | `scale`     | specify the scale of the avatar, defaults to m                   | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `thumbnail` | `thumbnail` | src to an image (remember to add a token if the user is private) | `string`            | `undefined` |\n| `userId`    | `user-id`   | unique id for user                                               | `string`            | `undefined` |\n| `username`  | `username`  | user name                                                        | `string`            | `undefined` |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-avatar --\x3e calcite-icon\n  style calcite-avatar fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-avatar
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    full-name="${Object(dist.text)("full-name","John Doe")}"
    username="${Object(dist.text)("username","jdoe")}"
    user-id="${Object(dist.text)("user-id","9a7c50e6b3ce4b859f7b31e302437164")}"
    thumbnail="${Object(dist.text)("thumbnail",Object(tests_utils.b)({width:120,height:120}))}"
  >
  </calcite-avatar>
`}),MissingThumbnail=function(){return tests_utils.a`
  <calcite-avatar
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    full-name="${Object(dist.text)("full-name","John Doe")}"
    username="${Object(dist.text)("username","jdoe")}"
    user-id="${Object(dist.text)("user-id","9a7c50e6b3ce4b859f7b31e302437164")}"
  >
  </calcite-avatar>
`};MissingThumbnail.storyName="Missing thumbnail";var Dark=function(){return tests_utils.a`
  <calcite-avatar
    class="calcite-theme-dark"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    full-name="${Object(dist.text)("full-name","John Doe")}"
    username="${Object(dist.text)("username","jdoe")}"
    user-id="${Object(dist.text)("user-id","9a7c50e6b3ce4b859f7b31e302437164")}"
  >
  </calcite-avatar>
`};Dark.parameters={themes:utils.f},Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-avatar\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    full-name="${text("full-name", "John Doe")}"\n    username="${text("username", "jdoe")}"\n    user-id="${text("user-id", "9a7c50e6b3ce4b859f7b31e302437164")}"\n    thumbnail="${text("thumbnail", placeholderImage({ width: 120, height: 120 }))}"\n  >\n  </calcite-avatar>\n`'}},Simple.parameters),MissingThumbnail.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-avatar\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    full-name="${text("full-name", "John Doe")}"\n    username="${text("username", "jdoe")}"\n    user-id="${text("user-id", "9a7c50e6b3ce4b859f7b31e302437164")}"\n  >\n  </calcite-avatar>\n`'}},MissingThumbnail.parameters),Dark.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-avatar\n    class="calcite-theme-dark"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    full-name="${text("full-name", "John Doe")}"\n    username="${text("username", "jdoe")}"\n    user-id="${text("user-id", "9a7c50e6b3ce4b859f7b31e302437164")}"\n  >\n  </calcite-avatar>\n`'}},Dark.parameters)},"./src/components/block/block.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL})),__webpack_require__.d(__webpack_exports__,"withHeaderControl",(function(){return withHeaderControl})),__webpack_require__.d(__webpack_exports__,"withIconAndHeader",(function(){return withIconAndHeader}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),createBlockAttributes=(__webpack_exports__.default={title:"Components/Block",parameters:{notes:{block:'# calcite-block\n\nThe `calcite-block` component is intended for displaying a heading and content. Content can also include stacked, collapsible `calcite-block-section`s typically housed in a panel.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Always-open\n\nRenders a header and content that remains open - no collapsible option.\n\n```html\n<calcite-block heading="When your son becomes a priest, do you call him..." open>\n  <div>Father or Son?</div>\n</calcite-block>\n```\n\n### Basic\n\nRenders a basic, non-collapsible block.\n\n```html\n<calcite-block heading="Fruit" summary="It\'s nature\'s candy"> </calcite-block>\n```\n\n### Collapsible\n\nRenders a header with a clickable icon to toggle the block open and closed.\n\n```html\n<calcite-block heading="Domestic pets" open collapsible>\n  <calcite-block-section text="puppers rool, kittehs drule"> </calcite-block-section>\n</calcite-block>\n```\n\n### Header-with-control\n\nRenders a header and control with a slot for adding a single HTML element (in the header).\n\n```html\n<calcite-block heading="This header" summary="it has an input">\n  <calcite-action icon="pencil" text="edit" slot="control"></calcite-action>\n</calcite-block>\n```\n\n### Header-with-icon\n\nRenders a header and icon with the icon.\n\n```html\n<calcite-block heading="Icon\'t believe it!">\n  <div slot="icon">🤯</div>\n</calcite-block>\n```\n\n## Properties\n\n| Property               | Attribute       | Description                                                                                 | Type                             | Default        |\n| ---------------------- | --------------- | ------------------------------------------------------------------------------------------- | -------------------------------- | -------------- |\n| `collapsible`          | `collapsible`   | When true, this block will be collapsible.                                                  | `boolean`                        | `false`        |\n| `disabled`             | `disabled`      | When true, disabled prevents interaction. This state shows items with lower opacity/grayed. | `boolean`                        | `false`        |\n| `dragHandle`           | `drag-handle`   | When true, displays a drag handle in the header.                                            | `boolean`                        | `false`        |\n| `heading` _(required)_ | `heading`       | Block heading.                                                                              | `string`                         | `undefined`    |\n| `headingLevel`         | `heading-level` | Number at which section headings should start for this component.                           | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`     | `undefined`    |\n| `intlCollapse`         | `intl-collapse` | Tooltip used for the toggle when expanded.                                                  | `string`                         | `undefined`    |\n| `intlExpand`           | `intl-expand`   | Tooltip used for the toggle when collapsed.                                                 | `string`                         | `undefined`    |\n| `intlLoading`          | `intl-loading`  | string to override English loading text                                                     | `string`                         | `TEXT.loading` |\n| `intlOptions`          | `intl-options`  | Text string used for the actions menu                                                       | `string`                         | `TEXT.options` |\n| `loading`              | `loading`       | When true, content is waiting to be loaded. This state shows a busy indicator.              | `boolean`                        | `false`        |\n| `open`                 | `open`          | When true, the block\'s content will be displayed.                                           | `boolean`                        | `false`        |\n| `status`               | `status`        | Block status. Updates or adds icon to show related icon and color.                          | `"idle" \\| "invalid" \\| "valid"` | `undefined`    |\n| `summary`              | `summary`       | Block summary.                                                                              | `string`                         | `undefined`    |\n\n## Events\n\n| Event                | Description                               | Type               |\n| -------------------- | ----------------------------------------- | ------------------ |\n| `calciteBlockToggle` | Emitted when the header has been clicked. | `CustomEvent<any>` |\n\n## Slots\n\n| Slot                    | Description                                                        |\n| ----------------------- | ------------------------------------------------------------------ |\n|                         | A slot for adding content to the block.                            |\n| `"control"`             | A slot for adding a single HTML input element in a header.         |\n| `"header-menu-actions"` | a slot for adding an overflow menu with actions inside a dropdown. |\n| `"icon"`                | A slot for adding a leading header icon.                           |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-scrim](../scrim)\n- [calcite-icon](../icon)\n- [calcite-handle](../handle)\n- [calcite-loader](../loader)\n- [calcite-action-menu](../action-menu)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-block --\x3e calcite-scrim\n  calcite-block --\x3e calcite-icon\n  calcite-block --\x3e calcite-handle\n  calcite-block --\x3e calcite-loader\n  calcite-block --\x3e calcite-action-menu\n  calcite-scrim --\x3e calcite-loader\n  calcite-handle --\x3e calcite-icon\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-tooltip-manager\n  calcite-action-menu --\x3e calcite-popover\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  style calcite-block fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n',section:'# calcite-block-section\n\nThe `calcite-block-section` component is a child element of `calcite-block`. Sections can have their own header and content and can be toggled open or closed.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property        | Attribute        | Description                                                                                                                                                                      | Type                             | Default     |\n| --------------- | ---------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------- | ----------- |\n| `intlCollapse`  | `intl-collapse`  | Tooltip used for the toggle when expanded.                                                                                                                                       | `string`                         | `undefined` |\n| `intlExpand`    | `intl-expand`    | Tooltip used for the toggle when collapsed.                                                                                                                                      | `string`                         | `undefined` |\n| `open`          | `open`           | When true, the block\'s section content will be displayed.                                                                                                                        | `boolean`                        | `false`     |\n| `status`        | `status`         | BlockSection status. Adds indicator to show valid or invalid status.                                                                                                             | `"idle" \\| "invalid" \\| "valid"` | `undefined` |\n| `text`          | `text`           | Text displayed in the button.                                                                                                                                                    | `string`                         | `undefined` |\n| `toggleDisplay` | `toggle-display` | This property determines the look of the section toggle. If the value is "switch", a toggle-switch will be displayed. If the value is "button", a clickable header is displayed. | `"button" \\| "switch"`           | `"button"`  |\n\n## Events\n\n| Event                       | Description                               | Type               |\n| --------------------------- | ----------------------------------------- | ------------------ |\n| `calciteBlockSectionToggle` | Emitted when the header has been clicked. | `CustomEvent<any>` |\n\n## Slots\n\n| Slot | Description                                     |\n| ---- | ----------------------------------------------- |\n|      | A slot for adding content to the block section. |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-switch](../switch)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-block-section --\x3e calcite-icon\n  calcite-block-section --\x3e calcite-switch\n  style calcite-block-section fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}}},function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,group="block";return Object(utils.b)([{name:"heading",commit:function(){return this.value=Object(dist.text)("heading","Heading",group),delete this.build,this}},{name:"summary",commit:function(){return this.value=Object(dist.text)("summary","summary",group),delete this.build,this}},{name:"open",commit:function(){return this.value=Object(dist.boolean)("open",!0,group),delete this.build,this}},{name:"collapsible",commit:function(){return this.value=Object(dist.boolean)("collapsible",!0,group),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1,group),delete this.build,this}},{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1,group),delete this.build,this}},{name:"intl-collapse",commit:function(){return this.value=Object(dist.text)("intlCollapse","Collapse",group),delete this.build,this}},{name:"intl-expand",commit:function(){return this.value=Object(dist.text)("intlExpand","Expand",group),delete this.build,this}}],exceptions)}),createSectionAttributes=function(){var group="section (animals)",toggleDisplayOptions=["button","switch"];return[{name:"text",value:Object(dist.text)("text","Animals",group)},{name:"open",value:Object(dist.boolean)("open",!0,group)},{name:"toggle-display",value:Object(dist.select)("toggleDisplay",toggleDisplayOptions,toggleDisplayOptions[0],group)},{name:"intl-collapse",value:Object(dist.text)("intlCollapse","Collapse",group)},{name:"intl-expand",value:Object(dist.text)("intlExpand","Expand",group)}]},basic=function(){return Object(utils.a)("calcite-block",createBlockAttributes(),tests_utils.a`
      ${Object(utils.a)("calcite-block-section",createSectionAttributes(),`<img alt="demo" src="${Object(tests_utils.b)({width:320,height:240})}" />`)}

      <calcite-block-section text="Nature" open>
        <img alt="demo" src="${Object(tests_utils.b)({width:320,height:240})}" />
      </calcite-block-section>
    `)},RTL=function(){return Object(utils.a)("calcite-block",createBlockAttributes({exceptions:["dir"]}).concat({name:"dir",value:"rtl"}),tests_utils.a`
      ${Object(utils.a)("calcite-block-section",createSectionAttributes(),`<img alt="demo" src="${Object(tests_utils.b)({width:320,height:240})}" />`)}

      <calcite-block-section text="Nature" open>
        <img alt="demo" src="${Object(tests_utils.b)({width:320,height:240})}" />
      </calcite-block-section>
    `)},withHeaderControl=function(){return Object(utils.a)("calcite-block",createBlockAttributes({exceptions:["open","collapsible"]}),'<label slot="control">test <input placeholder="I\'m a header control"/></label>')},withIconAndHeader=function(){return Object(utils.a)("calcite-block",createBlockAttributes({exceptions:["open","collapsible"]}),'<div slot="icon">✅</div>')};basic.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-block",\n    createBlockAttributes(),\n    html`\n      ${create(\n        "calcite-block-section",\n        createSectionAttributes(),\n        `<img alt="demo" src="${placeholderImage({ width: 320, height: 240 })}" />`\n      )}\n\n      <calcite-block-section text="Nature" open>\n        <img alt="demo" src="${placeholderImage({ width: 320, height: 240 })}" />\n      </calcite-block-section>\n    `\n  )'}},basic.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-block",\n    createBlockAttributes({ exceptions: ["dir"] }).concat({ name: "dir", value: "rtl" }),\n    html`\n      ${create(\n        "calcite-block-section",\n        createSectionAttributes(),\n        `<img alt="demo" src="${placeholderImage({ width: 320, height: 240 })}" />`\n      )}\n\n      <calcite-block-section text="Nature" open>\n        <img alt="demo" src="${placeholderImage({ width: 320, height: 240 })}" />\n      </calcite-block-section>\n    `\n  )'}},RTL.parameters),withHeaderControl.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-block",\n    createBlockAttributes({ exceptions: ["open", "collapsible"] }),\n    `<label slot="control">test <input placeholder="I\'m a header control"/></label>`\n  )'}},withHeaderControl.parameters),withIconAndHeader.parameters=Object.assign({storySource:{source:'(): string =>\n  create("calcite-block", createBlockAttributes({ exceptions: ["open", "collapsible"] }), `<div slot="icon">✅</div>`)'}},withIconAndHeader.parameters)},"./src/components/button/button.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"WithIconStart",(function(){return WithIconStart})),__webpack_require__.d(__webpack_exports__,"WithIconEnd",(function(){return WithIconEnd})),__webpack_require__.d(__webpack_exports__,"WithIconStartAndIconEnd",(function(){return WithIconStartAndIconEnd})),__webpack_require__.d(__webpack_exports__,"WithIconStartEmpty",(function(){return WithIconStartEmpty})),__webpack_require__.d(__webpack_exports__,"WithIconEndEmpty",(function(){return WithIconEndEmpty})),__webpack_require__.d(__webpack_exports__,"SetWidthContainer",(function(){return SetWidthContainer})),__webpack_require__.d(__webpack_exports__,"Alignment",(function(){return Alignment})),__webpack_require__.d(__webpack_exports__,"SideBySide",(function(){return SideBySide})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Buttons/Button",parameters:{notes:'# calcite-button\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-button icon-start="plus" color="red">Go!</calcite-button>\n```\n\n### Focusing\n\nYou can programmatically focus a `calcite-button` with the `setFocus()` method:\n\n```html\n<div onclick="document.querySelector(\'#my-button\').setFocus()">Focus!</div>\n```\n\n### Internals\n\nAny additional attributes set on `<calcite-button>` are passed to the internal `<a>` or `<button>` tag. For example, the first button below sets `target="_blank` On the internal `<a>`. The second button sets `type="submit"` on the internal `<button>`.\n\n- ```html\n  <calcite-button href="https://github.com/esri/calcite-components" target="_blank">\n    Calcite Components on GitHub\n  </calcite-button>\n\n  <calcite-button type="submit">Submit</calcite-button>\n  ```\n\n### With-icons\n\n```html\n<calcite-button appearance="solid" icon-start="arrow-left">Back</calcite-button>\n<calcite-button icon-end="map" color="red">Map Options</calcite-button>\n<calcite-button icon-end="plus" appearance="outline" color="inverse">Add to favorites</calcite-button>\n```\n\n### With-loader-disabled\n\n```html\n<calcite-button loading color="neutral">Fetching data...</calcite-button>\n<calcite-button disabled>Can\'t touch this</calcite-button>\n```\n\n### Within-form\n\n```html\n<form name="sign-up">\n  <calcite-label>\n    First name\n    <calcite-input name="first-name" required value="Jane"></calcite-input>\n  </calcite-label>\n  <calcite-button type="reset">I should reset the form (type reset)</calcite-button>\n  <calcite-button type="button">I should not submit the form (type button)</calcite-button>\n  <calcite-button>Submit</calcite-button>\n</form>\n```\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                                                                                       | Type                                                                                                        | Default        |\n| ------------- | --------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------- | -------------- |\n| `alignment`   | `alignment`     | optionally specify alignment of button elements.                                                                                                                  | `"center" \\| "end" \\| "icon-end-space-between" \\| "icon-start-space-between" \\| "space-between" \\| "start"` | `"center"`     |\n| `appearance`  | `appearance`    | specify the appearance style of the button, defaults to solid.                                                                                                    | `"clear" \\| "outline" \\| "solid" \\| "transparent"`                                                          | `"solid"`      |\n| `color`       | `color`         | specify the color of the button, defaults to blue                                                                                                                 | `"blue" \\| "inverse" \\| "neutral" \\| "red"`                                                                 | `"blue"`       |\n| `disabled`    | `disabled`      | is the button disabled                                                                                                                                            | `boolean`                                                                                                   | `false`        |\n| `form`        | `form`          | <span style="color:red">**[DEPRECATED]**</span> – this property is no longer needed if placed inside a form.<br/><br/>The form ID to associate with the component | `string`                                                                                                    | `undefined`    |\n| `href`        | `href`          | optionally pass a href - used to determine if the component should render as a button or an anchor                                                                | `string`                                                                                                    | `undefined`    |\n| `iconEnd`     | `icon-end`      | optionally pass an icon to display at the end of a button - accepts calcite ui icon names                                                                         | `string`                                                                                                    | `undefined`    |\n| `iconFlipRtl` | `icon-flip-rtl` | flip the icon(s) in rtl                                                                                                                                           | `"both" \\| "end" \\| "start"`                                                                                | `undefined`    |\n| `iconStart`   | `icon-start`    | optionally pass an icon to display at the start of a button - accepts calcite ui icon names                                                                       | `string`                                                                                                    | `undefined`    |\n| `intlLoading` | `intl-loading`  | string to override English loading text                                                                                                                           | `string`                                                                                                    | `TEXT.loading` |\n| `label`       | `label`         | Applies to the aria-label attribute on the button or hyperlink                                                                                                    | `string`                                                                                                    | `undefined`    |\n| `loading`     | `loading`       | optionally add a calcite-loader component to the button, disabling interaction.                                                                                   | `boolean`                                                                                                   | `false`        |\n| `name`        | `name`          | The name attribute to apply to the button                                                                                                                         | `string`                                                                                                    | `undefined`    |\n| `rel`         | `rel`           | The rel attribute to apply to the hyperlink                                                                                                                       | `string`                                                                                                    | `undefined`    |\n| `round`       | `round`         | optionally add a round style to the button                                                                                                                        | `boolean`                                                                                                   | `false`        |\n| `scale`       | `scale`         | specify the scale of the button, defaults to m                                                                                                                    | `"l" \\| "m" \\| "s"`                                                                                         | `"m"`          |\n| `splitChild`  | `split-child`   | is the button a child of a calcite-split-button                                                                                                                   | `"primary" \\| "secondary" \\| boolean`                                                                       | `false`        |\n| `target`      | `target`        | The target attribute to apply to the hyperlink                                                                                                                    | `string`                                                                                                    | `undefined`    |\n| `type`        | `type`          | The type attribute to apply to the button                                                                                                                         | `string`                                                                                                    | `undefined`    |\n| `width`       | `width`         | specify the width of the button, defaults to auto                                                                                                                 | `"auto" \\| "full" \\| "half"`                                                                                | `"auto"`       |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description             |\n| ---- | ----------------------- |\n|      | A slot for adding text. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-color-picker](../color-picker)\n- [calcite-fab](../fab)\n- [calcite-inline-editable](../inline-editable)\n- [calcite-split-button](../split-button)\n\n### Depends on\n\n- [calcite-loader](../loader)\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-button --\x3e calcite-loader\n  calcite-button --\x3e calcite-icon\n  calcite-color-picker --\x3e calcite-button\n  calcite-fab --\x3e calcite-button\n  calcite-inline-editable --\x3e calcite-button\n  calcite-split-button --\x3e calcite-button\n  style calcite-button fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-button
    appearance="${Object(dist.select)("appearance",["solid","clear","outline","transparent"],"solid")}"
    color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("round",!1)}
    href="${Object(dist.text)("href","")}"
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    ${Object(dist.text)("text","button text here")}
  </calcite-button>
`}),WithIconStart=function(){return tests_utils.a`
  <calcite-button
    appearance="${Object(dist.select)("appearance",["solid","clear","outline","transparent"],"solid")}"
    color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("round",!1)}
    href="${Object(dist.text)("href","")}"
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("disabled",!1)}
    icon-start="${Object(dist.select)("icon-start",helpers.c,helpers.c[0])}"
  >
    ${Object(dist.text)("text","button text here")}
  </calcite-button>
`};WithIconStart.storyName="With icon-start";var WithIconEnd=function(){return tests_utils.a`
  <calcite-button
    appearance="${Object(dist.select)("appearance",["solid","clear","outline","transparent"],"solid")}"
    color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("round",!1)}
    href="${Object(dist.text)("href","")}"
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("disabled",!1)}
    icon-end="${Object(dist.select)("icon-end",helpers.c,helpers.c[0])}"
  >
    ${Object(dist.text)("text","button text here")}
  </calcite-button>
`};WithIconEnd.storyName="With icon-end";var WithIconStartAndIconEnd=function(){return tests_utils.a`
  <calcite-button
    appearance="${Object(dist.select)("appearance",["solid","clear","outline","transparent"],"solid")}"
    color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("round",!1)}
    href="${Object(dist.text)("href","")}"
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("disabled",!1)}
    icon-start="${Object(dist.select)("icon-start",helpers.c,helpers.c[0])}"
    icon-end="${Object(dist.select)("icon-end",helpers.c,helpers.c[0])}"
  >
    ${Object(dist.text)("text","button text here")}
  </calcite-button>
`};WithIconStartAndIconEnd.storyName="With icon-start and icon-end";var WithIconStartEmpty=function(){return tests_utils.a` <calcite-button icon-start> Button </calcite-button>`};WithIconStartEmpty.storyName="With icon-start set to empty";var WithIconEndEmpty=function(){return tests_utils.a` <calcite-button icon-end> Button </calcite-button>`};WithIconEndEmpty.storyName="With icon-end set to empty";var SetWidthContainer=function(){return tests_utils.a`
  <div style="width: 480px; max-width: 100%; background-color: #fff">
    <calcite-button
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      icon-start="${Object(dist.select)("icon-start",helpers.c,helpers.c[0])}"
    >
      ${Object(dist.text)("text","button text here")}
    </calcite-button>
  </div>
`};SetWidthContainer.storyName="Set width container";var Alignment=function(){return tests_utils.a`
  <div style="width: 480px; max-width: 100%; background-color: #fff">
    <calcite-button
      alignment="${Object(dist.select)("alignment",["start","end","center","space-between","icon-start-space-between","icon-end-space-between"],"center")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      icon-start="${Object(dist.select)("icon-start",helpers.c,helpers.c[0])}"
      icon-end="${Object(dist.select)("icon-end",helpers.c,helpers.c[0])}"
    >
      ${Object(dist.text)("text","button text here")}
    </calcite-button>
  </div>
`},SideBySide=function(){return tests_utils.a`
  <div style="width: 300px; max-width: 100%; display: flex; flex-direction: row; background-color: #fff">
    <calcite-button
      width="half"
      appearance="${Object(dist.select)("appearance",["solid","clear","outline","transparent"],"outline")}"
      color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
    >
      ${Object(dist.text)("text","Back")}
    </calcite-button>
    <calcite-button
      width="half"
      appearance="${Object(dist.select)("appearance-2",["solid","clear","outline","transparent"],"solid")}"
      color="${Object(dist.select)("color-2",["blue","red","neutral","inverse"],"blue")}"
      icon-start="${Object(dist.select)("icon-start",helpers.c,helpers.c[0])}"
    >
      ${Object(dist.text)("text-2","Some long string")}
    </calcite-button>
  </div>
`};SideBySide.storyName="Side by side";var DarkMode=function(){return tests_utils.a`
  <calcite-button
    class="calcite-theme-dark"
    appearance="${Object(dist.select)("appearance",["solid","clear","outline","transparent"],"solid")}"
    color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("round",!1)}
    href="${Object(dist.text)("href","")}"
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("disabled",!1)}
    icon-start="${Object(dist.select)("icon-start",helpers.c,helpers.c[0])}"
    icon-end="${Object(dist.select)("icon-end",helpers.c,helpers.c[0])}"
  >
    ${Object(dist.text)("text","button text here")}
  </calcite-button>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f};var RTL=function(){return tests_utils.a`
  <calcite-button
    dir="rtl"
    class="calcite-theme-dark"
    appearance="${Object(dist.select)("appearance",["solid","clear","outline","transparent"],"solid")}"
    color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("round",!1)}
    href="${Object(dist.text)("href","")}"
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("disabled",!1)}
    icon-start="${Object(dist.select)("icon-start",helpers.c,helpers.c[0])}"
    icon-end="${Object(dist.select)("icon-end",helpers.c,helpers.c[1])}"
  >
    ${Object(dist.text)("text","button text here")}
  </calcite-button>
`};Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-button\n    appearance="${select("appearance", ["solid", "clear", "outline", "transparent"], "solid")}"\n    color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("round", false)}\n    href="${text("href", "")}"\n    ${boolean("loading", false)}\n    ${boolean("disabled", false)}\n  >\n    ${text("text", "button text here")}\n  </calcite-button>\n`'}},Simple.parameters),WithIconStart.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-button\n    appearance="${select("appearance", ["solid", "clear", "outline", "transparent"], "solid")}"\n    color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("round", false)}\n    href="${text("href", "")}"\n    ${boolean("loading", false)}\n    ${boolean("disabled", false)}\n    icon-start="${select("icon-start", iconNames, iconNames[0])}"\n  >\n    ${text("text", "button text here")}\n  </calcite-button>\n`'}},WithIconStart.parameters),WithIconEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-button\n    appearance="${select("appearance", ["solid", "clear", "outline", "transparent"], "solid")}"\n    color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("round", false)}\n    href="${text("href", "")}"\n    ${boolean("loading", false)}\n    ${boolean("disabled", false)}\n    icon-end="${select("icon-end", iconNames, iconNames[0])}"\n  >\n    ${text("text", "button text here")}\n  </calcite-button>\n`'}},WithIconEnd.parameters),WithIconStartAndIconEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-button\n    appearance="${select("appearance", ["solid", "clear", "outline", "transparent"], "solid")}"\n    color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("round", false)}\n    href="${text("href", "")}"\n    ${boolean("loading", false)}\n    ${boolean("disabled", false)}\n    icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    icon-end="${select("icon-end", iconNames, iconNames[0])}"\n  >\n    ${text("text", "button text here")}\n  </calcite-button>\n`'}},WithIconStartAndIconEnd.parameters),WithIconStartEmpty.parameters=Object.assign({storySource:{source:"(): string => html` <calcite-button icon-start> Button </calcite-button>`"}},WithIconStartEmpty.parameters),WithIconEndEmpty.parameters=Object.assign({storySource:{source:"(): string => html` <calcite-button icon-end> Button </calcite-button>`"}},WithIconEndEmpty.parameters),SetWidthContainer.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 480px; max-width: 100%; background-color: #fff">\n    <calcite-button\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    >\n      ${text("text", "button text here")}\n    </calcite-button>\n  </div>\n`'}},SetWidthContainer.parameters),Alignment.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 480px; max-width: 100%; background-color: #fff">\n    <calcite-button\n      alignment="${select(\n        "alignment",\n        ["start", "end", "center", "space-between", "icon-start-space-between", "icon-end-space-between"],\n        "center"\n      )}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      icon-start="${select("icon-start", iconNames, iconNames[0])}"\n      icon-end="${select("icon-end", iconNames, iconNames[0])}"\n    >\n      ${text("text", "button text here")}\n    </calcite-button>\n  </div>\n`'}},Alignment.parameters),SideBySide.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 300px; max-width: 100%; display: flex; flex-direction: row; background-color: #fff">\n    <calcite-button\n      width="half"\n      appearance="${select("appearance", ["solid", "clear", "outline", "transparent"], "outline")}"\n      color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n    >\n      ${text("text", "Back")}\n    </calcite-button>\n    <calcite-button\n      width="half"\n      appearance="${select("appearance-2", ["solid", "clear", "outline", "transparent"], "solid")}"\n      color="${select("color-2", ["blue", "red", "neutral", "inverse"], "blue")}"\n      icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    >\n      ${text("text-2", "Some long string")}\n    </calcite-button>\n  </div>\n`'}},SideBySide.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-button\n    class="calcite-theme-dark"\n    appearance="${select("appearance", ["solid", "clear", "outline", "transparent"], "solid")}"\n    color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("round", false)}\n    href="${text("href", "")}"\n    ${boolean("loading", false)}\n    ${boolean("disabled", false)}\n    icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    icon-end="${select("icon-end", iconNames, iconNames[0])}"\n  >\n    ${text("text", "button text here")}\n  </calcite-button>\n`'}},DarkMode.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-button\n    dir="rtl"\n    class="calcite-theme-dark"\n    appearance="${select("appearance", ["solid", "clear", "outline", "transparent"], "solid")}"\n    color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("round", false)}\n    href="${text("href", "")}"\n    ${boolean("loading", false)}\n    ${boolean("disabled", false)}\n    icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    icon-end="${select("icon-end", iconNames, iconNames[1])}"\n  >\n    ${text("text", "button text here")}\n  </calcite-button>\n`'}},RTL.parameters)},"./src/components/card/card.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"SimpleWithLinks",(function(){return SimpleWithLinks})),__webpack_require__.d(__webpack_exports__,"FooterButton",(function(){return FooterButton})),__webpack_require__.d(__webpack_exports__,"FooterLinks",(function(){return FooterLinks})),__webpack_require__.d(__webpack_exports__,"FooterTextButtonsTooltips",(function(){return FooterTextButtonsTooltips})),__webpack_require__.d(__webpack_exports__,"FooterButtonsTooltipsDropdown",(function(){return FooterButtonsTooltipsDropdown})),__webpack_require__.d(__webpack_exports__,"DarkThemeSimple",(function(){return DarkThemeSimple})),__webpack_require__.d(__webpack_exports__,"DarkThemeSimpleWithLinks",(function(){return DarkThemeSimpleWithLinks})),__webpack_require__.d(__webpack_exports__,"DarkThemeFooterButton",(function(){return DarkThemeFooterButton})),__webpack_require__.d(__webpack_exports__,"DarkThemeFooterLinks",(function(){return DarkThemeFooterLinks})),__webpack_require__.d(__webpack_exports__,"DarkThemeFooterTextButtonsTooltips",(function(){return DarkThemeFooterTextButtonsTooltips})),__webpack_require__.d(__webpack_exports__,"DarkThemeFooterButtonsTooltipsDropdown",(function(){return DarkThemeFooterButtonsTooltipsDropdown})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Card",parameters:{notes:'# calcite-card\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<div style="width:260px">\n  <calcite-card>\n    <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>\n    <span slot="subtitle">\n      A great example of a study description that might wrap to a line or two, but isn\'t overly verbose.\n    </span>\n  </calcite-card>\n</div>\n```\n\n## Properties\n\n| Property       | Attribute       | Description                                                                              | Type      | Default         |\n| -------------- | --------------- | ---------------------------------------------------------------------------------------- | --------- | --------------- |\n| `intlDeselect` | `intl-deselect` | string to override English deselect text for checkbox when selectable is true            | `string`  | `TEXT.deselect` |\n| `intlLoading`  | `intl-loading`  | string to override English loading text                                                  | `string`  | `TEXT.loading`  |\n| `intlSelect`   | `intl-select`   | string to override English select text for checkbox when selectable is true              | `string`  | `TEXT.select`   |\n| `loading`      | `loading`       | When true, the cards content is waiting to be loaded. This state shows a busy indicator. | `boolean` | `false`         |\n| `selectable`   | `selectable`    | Indicates whether the card is selectable.                                                | `boolean` | `false`         |\n| `selected`     | `selected`      | Indicates whether the card is selected.                                                  | `boolean` | `false`         |\n\n## Events\n\n| Event               | Description                              | Type               |\n| ------------------- | ---------------------------------------- | ------------------ |\n| `calciteCardSelect` | Fired when a selectable card is selected | `CustomEvent<any>` |\n\n## Slots\n\n| Slot                | Description                                         |\n| ------------------- | --------------------------------------------------- |\n|                     | A slot for adding subheader/description content.    |\n| `"footer-leading"`  | A slot for adding a leading footer.                 |\n| `"footer-trailing"` | A slot for adding a trailing footer.                |\n| `"subtitle"`        | A slot for adding a card subtitle or short summary. |\n| `"thumbnail"`       | A slot for adding a thumbnail to the card.          |\n| `"title"`           | A slot for adding a card title.                     |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-loader](../loader)\n- [calcite-label](../label)\n- [calcite-checkbox](../checkbox)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-card --\x3e calcite-loader\n  calcite-card --\x3e calcite-label\n  calcite-card --\x3e calcite-checkbox\n  style calcite-card fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <div style="width:260px">
    <calcite-card ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
      <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>
      <span slot="subtitle"
        >A great example of a study description that might wrap to a line or two, but isn't overly verbose.</span
      >
    </calcite-card>
  </div>
`}),SimpleWithLinks=function(){return tests_utils.a`
  <div style="width:260px">
    <calcite-card ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
      <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>
      <span slot="subtitle"
        >A great example of a study description that might wrap to a line or two, but isn't overly verbose.</span
      >
      <calcite-link class="calcite-theme-dark" slot="footer-leading">Lead footer</calcite-link>
      <calcite-link class="calcite-theme-dark" slot="footer-trailing">Trail footer</calcite-link>
    </calcite-card>
  </div>
`};SimpleWithLinks.storyName="Simple with Links";var footerThumbnail=`<img alt="footer thumbnail" slot="thumbnail" src="${Object(tests_utils.b)({width:380,height:180})}" style="width: 380px;" />`,FooterButton=function(){return tests_utils.a`
  <div style="width:260px">
    <calcite-card ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
      ${footerThumbnail}
      <h3 slot="title">Untitled experience</h3>
      <span slot="subtitle">Subtext</span>
      <calcite-button slot="footer-leading" width="full">Go</calcite-button>
    </calcite-card>
  </div>
`},FooterLinks=function(){return tests_utils.a`
  <div style="width:260px">
    <calcite-card ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
      ${footerThumbnail}
      <h3 slot="title">My perhaps multiline card title</h3>
      <span slot="subtitle"
        >A great example of a study description that might wrap to a line or two, but isn't overly verbose.</span
      >
      <calcite-link slot="footer-leading">Lead footer</calcite-link>
      <calcite-link slot="footer-trailing">Trail footer</calcite-link>
    </calcite-card>
  </div>
`},FooterTextButtonsTooltips=function(){return tests_utils.a`
  <div style="width:260px">
    <calcite-tooltip-manager>
      <calcite-card ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
        ${footerThumbnail}
        <h3 slot="title">My great project that might wrap two lines</h3>
        <span slot="subtitle">Johnathan Smith</span>
        <span slot="footer-leading">Nov 25, 2018</span>
        <div slot="footer-trailing">
          <calcite-button id="card-icon-test-6" scale="s" appearance="transparent" color="neutral" icon-start="circle">
          </calcite-button>
          <calcite-button id="card-icon-test-7" scale="s" appearance="transparent" color="neutral" icon-start="circle">
          </calcite-button>
        </div>
      </calcite-card>
    </calcite-tooltip-manager>
  </div>
  <calcite-tooltip placement="top-start" reference-element="card-icon-test-6">Configure </calcite-tooltip>
  <calcite-tooltip placement="bottom-start" reference-element="card-icon-test-7">Delete </calcite-tooltip>
`};FooterTextButtonsTooltips.storyName="Footer Text, Buttons, Tooltips";var FooterButtonsTooltipsDropdown=function(){return tests_utils.a`
<div style="width:260px">
  <calcite-tooltip-manager>
    <calcite-card
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("selectable",!1)}
    >
      <img alt="" slot="thumbnail" src="${Object(tests_utils.b)({width:260,height:160})}" style="width:260px;height:160px" />
      <h3 slot="title">Portland Businesses</h3>
      <span slot="subtitle">by
        <calcite-link href="">example_user</calcite-button>
      </span>
      <div>
        Created: Apr 22, 2019
        <br />
        Updated: Dec 9, 2019
        <br />
        View Count: 0
      </div>
      <calcite-button slot="footer-leading" color="neutral" scale="s"  id="card-icon-test-1" icon-start='circle'></calcite-button>
      <div slot="footer-trailing">
        <calcite-button scale="s" color="neutral" id="card-icon-test-2" icon-start='circle'></calcite-button>
        <calcite-button scale="s" color="neutral" id="card-icon-test-3" icon-start='circle'></calcite-button>
        <calcite-dropdown type="hover">
          <calcite-button id="card-icon-test-5" slot="dropdown-trigger" scale="s" color="neutral" icon-start='circle'></calcite-button>
          <calcite-dropdown-group selection-mode="none">
            <calcite-dropdown-item>View details</calcite-dropdown-item>
            <calcite-dropdown-item>Duplicate</calcite-dropdown-item>
            <calcite-dropdown-item>Delete</calcite-dropdown-item>
          </calcite-dropdown-group>
        </calcite-dropdown>
      </div>
    </calcite-card>
  </calcite-tooltip-manager>
</div>
<calcite-tooltip placement="bottom-start" reference-element="card-icon-test-1">My great tooltip example
</calcite-tooltip>
<calcite-tooltip placement="bottom-start" reference-element="card-icon-test-2">Sharing level: 2
</calcite-tooltip>
<calcite-tooltip placement="top-end" reference-element="card-icon-test-3">More...
</calcite-tooltip>
<calcite-tooltip placement="top-start" reference-element="card-icon-test-5">More options
</calcite-tooltip>
`};FooterButtonsTooltipsDropdown.storyName="Footer Buttons, Tooltips, Dropdown";var DarkThemeSimple=function(){return tests_utils.a`
  <div style="width:260px">
    <calcite-card class="calcite-theme-dark" ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
      <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>
      <span slot="subtitle"
        >A great example of a study description that might wrap to a line or two, but isn't overly verbose.</span
      >
    </calcite-card>
  </div>
`};DarkThemeSimple.storyName="Dark Theme - Simple",DarkThemeSimple.parameters={themes:utils.f};var DarkThemeSimpleWithLinks=function(){return tests_utils.a`
  <div style="width:260px">
    <calcite-card class="calcite-theme-dark" ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
      <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>
      <span slot="subtitle"
        >A great example of a study description that might wrap to a line or two, but isn't overly verbose.</span
      >
      <calcite-link slot="footer-leading">Lead footer</calcite-link>
      <calcite-link slot="footer-trailing">Trail footer</calcite-link>
    </calcite-card>
  </div>
`};DarkThemeSimpleWithLinks.storyName="Dark Theme - Simple with Links",DarkThemeSimpleWithLinks.parameters={themes:utils.f};var DarkThemeFooterButton=function(){return tests_utils.a`
  <div style="width:260px">
    <calcite-card class="calcite-theme-dark" ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
      ${footerThumbnail}
      <h3 slot="title">Untitled experience</h3>
      <span slot="subtitle">Subtext</span>
      <calcite-button slot="footer-leading" width="full">Go</calcite-button>
    </calcite-card>
  </div>
`};DarkThemeFooterButton.storyName="Dark Theme - Footer Button",DarkThemeFooterButton.parameters={themes:utils.f};var DarkThemeFooterLinks=function(){return tests_utils.a`
  <div style="width:260px">
    <calcite-card class="calcite-theme-dark" ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
      ${footerThumbnail}
      <h3 slot="title">My perhaps multiline card title</h3>
      <span slot="subtitle"
        >A great example of a study description that might wrap to a line or two, but isn't overly verbose.</span
      >
      <calcite-link slot="footer-leading">Lead footer</calcite-link>
      <calcite-link slot="footer-trailing">Trail footer</calcite-link>
    </calcite-card>
  </div>
`};DarkThemeFooterLinks.storyName="Dark Theme - Footer Links",DarkThemeFooterLinks.parameters={themes:utils.f};var DarkThemeFooterTextButtonsTooltips=function(){return tests_utils.a`
  <div style="width:260px">
    <calcite-tooltip-manager>
      <calcite-card class="calcite-theme-dark" ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
        ${footerThumbnail}
        <h3 slot="title">My great project that might wrap two lines</h3>
        <span slot="subtitle">Johnathan Smith</span>
        <span slot="footer-leading">Nov 25, 2018</span>
        <div slot="footer-trailing">
          <calcite-button id="card-icon-test-6" scale="s" appearance="transparent" color="neutral" icon-start="circle">
          </calcite-button>
          <calcite-button id="card-icon-test-7" scale="s" appearance="transparent" color="neutral" icon-start="circle">
          </calcite-button>
        </div>
      </calcite-card>
    </calcite-tooltip-manager>
  </div>
  <calcite-tooltip placement="bottom" class="calcite-theme-dark" reference-element="card-icon-test-6"
    >Configure
  </calcite-tooltip>
  <calcite-tooltip placement="bottom" class="calcite-theme-dark" reference-element="card-icon-test-7"
    >Delete
  </calcite-tooltip>
`};DarkThemeFooterTextButtonsTooltips.storyName="Dark Theme - Footer Text, Buttons, Tooltips",DarkThemeFooterTextButtonsTooltips.parameters={themes:utils.f};var DarkThemeFooterButtonsTooltipsDropdown=function(){return tests_utils.a`
  <div style="width:260px">
    <calcite-tooltip-manager>
      <calcite-card class="calcite-theme-dark" ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
        <img
          alt=""
          slot="thumbnail"
          src="${Object(tests_utils.b)({width:260,height:160})}"
          style="width: 260px; height: 160px;"
        />
        <h3 slot="title">Portland Businesses</h3>
        <span slot="subtitle"
          >by
          <calcite-link href="">example_user</calcite-link>
        </span>
        <div>
          Created: Apr 22, 2019
          <br />
          Updated: Dec 9, 2019
          <br />
          View Count: 0
        </div>
        <calcite-button
          slot="footer-leading"
          color="neutral"
          scale="s"
          id="card-icon-test-1"
          icon-start="circle"
        ></calcite-button>
        <div slot="footer-trailing">
          <calcite-button
            class="calcite-theme-dark"
            color="neutral"
            scale="s"
            id="card-icon-test-2"
            icon-start="circle"
          ></calcite-button>
          <calcite-button
            class="calcite-theme-dark"
            color="neutral"
            scale="s"
            id="card-icon-test-3"
            icon-start="circle"
          ></calcite-button>
          <calcite-dropdown type="hover">
            <calcite-button
              class="calcite-theme-dark"
              color="neutral"
              id="card-icon-test-5"
              slot="dropdown-trigger"
              scale="s"
              icon-start="circle"
            ></calcite-button>
            <calcite-dropdown-group selection-mode="none">
              <calcite-dropdown-item>View details</calcite-dropdown-item>
              <calcite-dropdown-item>Duplicate</calcite-dropdown-item>
              <calcite-dropdown-item>Delete</calcite-dropdown-item>
            </calcite-dropdown-group>
          </calcite-dropdown>
        </div>
      </calcite-card>
    </calcite-tooltip-manager>
  </div>
  <calcite-tooltip
    class="calcite-theme-dark"
    label="bottom placed tooltip"
    placement="bottom-start"
    reference-element="card-icon-test-1"
    >My great tooltip example
  </calcite-tooltip>
  <calcite-tooltip
    class="calcite-theme-dark"
    label="bottom placed tooltip"
    placement="bottom-start"
    reference-element="card-icon-test-2"
    >Sharing level: 2
  </calcite-tooltip>
  <calcite-tooltip
    class="calcite-theme-dark"
    label="top end placed tooltip"
    placement="top-end"
    reference-element="card-icon-test-3"
    >More...
  </calcite-tooltip>
  <calcite-tooltip class="calcite-theme-dark" placement="top-start" reference-element="card-icon-test-5"
    >More options
  </calcite-tooltip>
`};DarkThemeFooterButtonsTooltipsDropdown.storyName="Dark Theme - Footer Buttons, Tooltips, Dropdown",DarkThemeFooterButtonsTooltipsDropdown.parameters={themes:utils.f};var RTL=function(){return tests_utils.a`
  <div style="width:260px" dir="rtl">
    <calcite-card ${Object(helpers.a)("loading",!1)} ${Object(helpers.a)("selectable",!1)}>
      <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>
      <span slot="subtitle"
        >A great example of a study description that might wrap to a line or two, but isn't overly verbose.</span
      >
    </calcite-card>
  </div>
`};Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    <calcite-card ${boolean("loading", false)} ${boolean("selectable", false)}>\n      <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>\n      <span slot="subtitle"\n        >A great example of a study description that might wrap to a line or two, but isn\'t overly verbose.</span\n      >\n    </calcite-card>\n  </div>\n`'}},Simple.parameters),SimpleWithLinks.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    <calcite-card ${boolean("loading", false)} ${boolean("selectable", false)}>\n      <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>\n      <span slot="subtitle"\n        >A great example of a study description that might wrap to a line or two, but isn\'t overly verbose.</span\n      >\n      <calcite-link class="calcite-theme-dark" slot="footer-leading">Lead footer</calcite-link>\n      <calcite-link class="calcite-theme-dark" slot="footer-trailing">Trail footer</calcite-link>\n    </calcite-card>\n  </div>\n`'}},SimpleWithLinks.parameters),FooterButton.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    <calcite-card ${boolean("loading", false)} ${boolean("selectable", false)}>\n      ${footerThumbnail}\n      <h3 slot="title">Untitled experience</h3>\n      <span slot="subtitle">Subtext</span>\n      <calcite-button slot="footer-leading" width="full">Go</calcite-button>\n    </calcite-card>\n  </div>\n`'}},FooterButton.parameters),FooterLinks.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    <calcite-card ${boolean("loading", false)} ${boolean("selectable", false)}>\n      ${footerThumbnail}\n      <h3 slot="title">My perhaps multiline card title</h3>\n      <span slot="subtitle"\n        >A great example of a study description that might wrap to a line or two, but isn\'t overly verbose.</span\n      >\n      <calcite-link slot="footer-leading">Lead footer</calcite-link>\n      <calcite-link slot="footer-trailing">Trail footer</calcite-link>\n    </calcite-card>\n  </div>\n`'}},FooterLinks.parameters),FooterTextButtonsTooltips.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    <calcite-tooltip-manager>\n      <calcite-card ${boolean("loading", false)} ${boolean("selectable", false)}>\n        ${footerThumbnail}\n        <h3 slot="title">My great project that might wrap two lines</h3>\n        <span slot="subtitle">Johnathan Smith</span>\n        <span slot="footer-leading">Nov 25, 2018</span>\n        <div slot="footer-trailing">\n          <calcite-button id="card-icon-test-6" scale="s" appearance="transparent" color="neutral" icon-start="circle">\n          </calcite-button>\n          <calcite-button id="card-icon-test-7" scale="s" appearance="transparent" color="neutral" icon-start="circle">\n          </calcite-button>\n        </div>\n      </calcite-card>\n    </calcite-tooltip-manager>\n  </div>\n  <calcite-tooltip placement="top-start" reference-element="card-icon-test-6">Configure </calcite-tooltip>\n  <calcite-tooltip placement="bottom-start" reference-element="card-icon-test-7">Delete </calcite-tooltip>\n`'}},FooterTextButtonsTooltips.parameters),FooterButtonsTooltipsDropdown.parameters=Object.assign({storySource:{source:'(): string => html`\n<div style="width:260px">\n  <calcite-tooltip-manager>\n    <calcite-card\n    ${boolean("loading", false)}\n    ${boolean("selectable", false)}\n    >\n      <img alt="" slot="thumbnail" src="${placeholderImage({\n        width: 260,\n        height: 160\n      })}" style="width:260px;height:160px" />\n      <h3 slot="title">Portland Businesses</h3>\n      <span slot="subtitle">by\n        <calcite-link href="">example_user</calcite-button>\n      </span>\n      <div>\n        Created: Apr 22, 2019\n        <br />\n        Updated: Dec 9, 2019\n        <br />\n        View Count: 0\n      </div>\n      <calcite-button slot="footer-leading" color="neutral" scale="s"  id="card-icon-test-1" icon-start=\'circle\'></calcite-button>\n      <div slot="footer-trailing">\n        <calcite-button scale="s" color="neutral" id="card-icon-test-2" icon-start=\'circle\'></calcite-button>\n        <calcite-button scale="s" color="neutral" id="card-icon-test-3" icon-start=\'circle\'></calcite-button>\n        <calcite-dropdown type="hover">\n          <calcite-button id="card-icon-test-5" slot="dropdown-trigger" scale="s" color="neutral" icon-start=\'circle\'></calcite-button>\n          <calcite-dropdown-group selection-mode="none">\n            <calcite-dropdown-item>View details</calcite-dropdown-item>\n            <calcite-dropdown-item>Duplicate</calcite-dropdown-item>\n            <calcite-dropdown-item>Delete</calcite-dropdown-item>\n          </calcite-dropdown-group>\n        </calcite-dropdown>\n      </div>\n    </calcite-card>\n  </calcite-tooltip-manager>\n</div>\n<calcite-tooltip placement="bottom-start" reference-element="card-icon-test-1">My great tooltip example\n</calcite-tooltip>\n<calcite-tooltip placement="bottom-start" reference-element="card-icon-test-2">Sharing level: 2\n</calcite-tooltip>\n<calcite-tooltip placement="top-end" reference-element="card-icon-test-3">More...\n</calcite-tooltip>\n<calcite-tooltip placement="top-start" reference-element="card-icon-test-5">More options\n</calcite-tooltip>\n`'}},FooterButtonsTooltipsDropdown.parameters),DarkThemeSimple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    <calcite-card class="calcite-theme-dark" ${boolean("loading", false)} ${boolean("selectable", false)}>\n      <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>\n      <span slot="subtitle"\n        >A great example of a study description that might wrap to a line or two, but isn\'t overly verbose.</span\n      >\n    </calcite-card>\n  </div>\n`'}},DarkThemeSimple.parameters),DarkThemeSimpleWithLinks.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    <calcite-card class="calcite-theme-dark" ${boolean("loading", false)} ${boolean("selectable", false)}>\n      <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>\n      <span slot="subtitle"\n        >A great example of a study description that might wrap to a line or two, but isn\'t overly verbose.</span\n      >\n      <calcite-link slot="footer-leading">Lead footer</calcite-link>\n      <calcite-link slot="footer-trailing">Trail footer</calcite-link>\n    </calcite-card>\n  </div>\n`'}},DarkThemeSimpleWithLinks.parameters),DarkThemeFooterButton.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    <calcite-card class="calcite-theme-dark" ${boolean("loading", false)} ${boolean("selectable", false)}>\n      ${footerThumbnail}\n      <h3 slot="title">Untitled experience</h3>\n      <span slot="subtitle">Subtext</span>\n      <calcite-button slot="footer-leading" width="full">Go</calcite-button>\n    </calcite-card>\n  </div>\n`'}},DarkThemeFooterButton.parameters),DarkThemeFooterLinks.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    <calcite-card class="calcite-theme-dark" ${boolean("loading", false)} ${boolean("selectable", false)}>\n      ${footerThumbnail}\n      <h3 slot="title">My perhaps multiline card title</h3>\n      <span slot="subtitle"\n        >A great example of a study description that might wrap to a line or two, but isn\'t overly verbose.</span\n      >\n      <calcite-link slot="footer-leading">Lead footer</calcite-link>\n      <calcite-link slot="footer-trailing">Trail footer</calcite-link>\n    </calcite-card>\n  </div>\n`'}},DarkThemeFooterLinks.parameters),DarkThemeFooterTextButtonsTooltips.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    <calcite-tooltip-manager>\n      <calcite-card class="calcite-theme-dark" ${boolean("loading", false)} ${boolean("selectable", false)}>\n        ${footerThumbnail}\n        <h3 slot="title">My great project that might wrap two lines</h3>\n        <span slot="subtitle">Johnathan Smith</span>\n        <span slot="footer-leading">Nov 25, 2018</span>\n        <div slot="footer-trailing">\n          <calcite-button id="card-icon-test-6" scale="s" appearance="transparent" color="neutral" icon-start="circle">\n          </calcite-button>\n          <calcite-button id="card-icon-test-7" scale="s" appearance="transparent" color="neutral" icon-start="circle">\n          </calcite-button>\n        </div>\n      </calcite-card>\n    </calcite-tooltip-manager>\n  </div>\n  <calcite-tooltip placement="bottom" class="calcite-theme-dark" reference-element="card-icon-test-6"\n    >Configure\n  </calcite-tooltip>\n  <calcite-tooltip placement="bottom" class="calcite-theme-dark" reference-element="card-icon-test-7"\n    >Delete\n  </calcite-tooltip>\n`'}},DarkThemeFooterTextButtonsTooltips.parameters),DarkThemeFooterButtonsTooltipsDropdown.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    <calcite-tooltip-manager>\n      <calcite-card class="calcite-theme-dark" ${boolean("loading", false)} ${boolean("selectable", false)}>\n        <img\n          alt=""\n          slot="thumbnail"\n          src="${placeholderImage({ width: 260, height: 160 })}"\n          style="width: 260px; height: 160px;"\n        />\n        <h3 slot="title">Portland Businesses</h3>\n        <span slot="subtitle"\n          >by\n          <calcite-link href="">example_user</calcite-link>\n        </span>\n        <div>\n          Created: Apr 22, 2019\n          <br />\n          Updated: Dec 9, 2019\n          <br />\n          View Count: 0\n        </div>\n        <calcite-button\n          slot="footer-leading"\n          color="neutral"\n          scale="s"\n          id="card-icon-test-1"\n          icon-start="circle"\n        ></calcite-button>\n        <div slot="footer-trailing">\n          <calcite-button\n            class="calcite-theme-dark"\n            color="neutral"\n            scale="s"\n            id="card-icon-test-2"\n            icon-start="circle"\n          ></calcite-button>\n          <calcite-button\n            class="calcite-theme-dark"\n            color="neutral"\n            scale="s"\n            id="card-icon-test-3"\n            icon-start="circle"\n          ></calcite-button>\n          <calcite-dropdown type="hover">\n            <calcite-button\n              class="calcite-theme-dark"\n              color="neutral"\n              id="card-icon-test-5"\n              slot="dropdown-trigger"\n              scale="s"\n              icon-start="circle"\n            ></calcite-button>\n            <calcite-dropdown-group selection-mode="none">\n              <calcite-dropdown-item>View details</calcite-dropdown-item>\n              <calcite-dropdown-item>Duplicate</calcite-dropdown-item>\n              <calcite-dropdown-item>Delete</calcite-dropdown-item>\n            </calcite-dropdown-group>\n          </calcite-dropdown>\n        </div>\n      </calcite-card>\n    </calcite-tooltip-manager>\n  </div>\n  <calcite-tooltip\n    class="calcite-theme-dark"\n    label="bottom placed tooltip"\n    placement="bottom-start"\n    reference-element="card-icon-test-1"\n    >My great tooltip example\n  </calcite-tooltip>\n  <calcite-tooltip\n    class="calcite-theme-dark"\n    label="bottom placed tooltip"\n    placement="bottom-start"\n    reference-element="card-icon-test-2"\n    >Sharing level: 2\n  </calcite-tooltip>\n  <calcite-tooltip\n    class="calcite-theme-dark"\n    label="top end placed tooltip"\n    placement="top-end"\n    reference-element="card-icon-test-3"\n    >More...\n  </calcite-tooltip>\n  <calcite-tooltip class="calcite-theme-dark" placement="top-start" reference-element="card-icon-test-5"\n    >More options\n  </calcite-tooltip>\n`'}},DarkThemeFooterButtonsTooltipsDropdown.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px" dir="rtl">\n    <calcite-card ${boolean("loading", false)} ${boolean("selectable", false)}>\n      <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>\n      <span slot="subtitle"\n        >A great example of a study description that might wrap to a line or two, but isn\'t overly verbose.</span\n      >\n    </calcite-card>\n  </div>\n`'}},RTL.parameters)},"./src/components/checkbox/checkbox.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Controls/Checkbox",parameters:{notes:'# calcite-checkbox\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-checkbox id="first-name" name="first-name"></calcite-checkbox>\n```\n\n### Checked-with-calcite-label\n\n```html\n<calcite-label layout="inline" for="checked-item">\n  To do\n  <calcite-checkbox checked id="checked-item" name="checked-item"></calcite-checkbox>\n</calcite-label>\n```\n\n### Hovered-with-calcite-label\n\n```html\n<calcite-label layout="inline" for="hovered-item">\n  <calcite-checkbox hovered id="hovered-item" name="hovered-item"></calcite-checkbox>\n  To do\n</calcite-label>\n```\n\n### Indeterminate-with-native-label\n\n```html\n<label for="checked-indeterminate">\n  Status\n  <calcite-checkbox checked indeterminate id="checked-indeterminate" name="checked-indeterminate"></calcite-checkbox>\n</label>\n```\n\n## Properties\n\n| Property        | Attribute       | Description                                                                                                                                   | Type                | Default     |\n| --------------- | --------------- | --------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- | ----------- |\n| `checked`       | `checked`       | The checked state of the checkbox.                                                                                                            | `boolean`           | `false`     |\n| `disabled`      | `disabled`      | True if the checkbox is disabled                                                                                                              | `boolean`           | `false`     |\n| `guid`          | `guid`          | The id attribute of the checkbox. When omitted, a globally unique identifier is used.                                                         | `string`            | `undefined` |\n| `indeterminate` | `indeterminate` | True if the checkbox is initially indeterminate, which is independent from its checked state https://css-tricks.com/indeterminate-checkboxes/ | `boolean`           | `false`     |\n| `name`          | `name`          | The name of the checkbox input                                                                                                                | `any`               | `undefined` |\n| `scale`         | `scale`         | specify the scale of the checkbox, defaults to m                                                                                              | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `value`         | `value`         | The value of the checkbox input                                                                                                               | `any`               | `undefined` |\n\n## Events\n\n| Event                   | Description                                      | Type               |\n| ----------------------- | ------------------------------------------------ | ------------------ |\n| `calciteCheckboxChange` | Emitted when the checkbox checked status changes | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## CSS Custom Properties\n\n| Name                      | Description                          |\n| ------------------------- | ------------------------------------ |\n| `--calcite-checkbox-size` | the width and height of the checkbox |\n\n## Dependencies\n\n### Used by\n\n- [calcite-card](../card)\n- [calcite-tree-item](../tree-item)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-card --\x3e calcite-checkbox\n  calcite-tree-item --\x3e calcite-checkbox\n  style calcite-checkbox fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-label layout="inline">
    <calcite-checkbox
      ${Object(helpers.a)("checked",!0)}
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("indeterminate",!1)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ></calcite-checkbox>
    ${Object(dist.text)("label","Checkbox")}
  </calcite-label>
`}),DarkMode=function(){return tests_utils.a`
  <calcite-label layout="inline" class="calcite-theme-dark">
    <calcite-checkbox
      ${Object(helpers.a)("checked",!0)}
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("indeterminate",!1)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ></calcite-checkbox>
    ${Object(dist.text)("label","Checkbox")}
  </calcite-label>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f};var RTL=function(){return tests_utils.a`
  <calcite-label layout="inline" dir="rtl">
    <calcite-checkbox
      ${Object(helpers.a)("checked",!0)}
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("indeterminate",!1)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ></calcite-checkbox>
    ${Object(dist.text)("label","Checkbox")}
  </calcite-label>
`};Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label layout="inline">\n    <calcite-checkbox\n      ${boolean("checked", true)}\n      ${boolean("disabled", false)}\n      ${boolean("indeterminate", false)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n    ></calcite-checkbox>\n    ${text("label", "Checkbox")}\n  </calcite-label>\n`'}},Simple.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label layout="inline" class="calcite-theme-dark">\n    <calcite-checkbox\n      ${boolean("checked", true)}\n      ${boolean("disabled", false)}\n      ${boolean("indeterminate", false)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n    ></calcite-checkbox>\n    ${text("label", "Checkbox")}\n  </calcite-label>\n`'}},DarkMode.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label layout="inline" dir="rtl">\n    <calcite-checkbox\n      ${boolean("checked", true)}\n      ${boolean("disabled", false)}\n      ${boolean("indeterminate", false)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n    ></calcite-checkbox>\n    ${text("label", "Checkbox")}\n  </calcite-label>\n`'}},RTL.parameters)},"./src/components/chip/chip.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"WithIcon",(function(){return WithIcon})),__webpack_require__.d(__webpack_exports__,"WithImage",(function(){return WithImage})),__webpack_require__.d(__webpack_exports__,"WithAvatar",(function(){return WithAvatar})),__webpack_require__.d(__webpack_exports__,"DarkTheme",(function(){return DarkTheme})),__webpack_require__.d(__webpack_exports__,"Rtl",(function(){return Rtl}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Chip",parameters:{notes:'# calcite-chip\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-chip value="Global" dismissible icon="globe" appearance="clear" color="green">Global</calcite-chip>\n```\n\n## Properties\n\n| Property             | Attribute       | Description                                                        | Type                                               | Default      |\n| -------------------- | --------------- | ------------------------------------------------------------------ | -------------------------------------------------- | ------------ |\n| `appearance`         | `appearance`    | specify the appearance style of the button, defaults to solid.     | `"clear" \\| "solid"`                               | `"solid"`    |\n| `color`              | `color`         | specify the color of the button, defaults to blue                  | `"blue" \\| "green" \\| "grey" \\| "red" \\| "yellow"` | `"grey"`     |\n| `dismissLabel`       | `dismiss-label` | Aria label for the "x" button                                      | `string`                                           | `TEXT.close` |\n| `dismissible`        | `dismissible`   | Optionally show a button the user can click to dismiss the chip    | `boolean`                                          | `false`      |\n| `icon`               | `icon`          | optionally pass an icon to display - accepts Calcite UI icon names | `string`                                           | `undefined`  |\n| `iconFlipRtl`        | `icon-flip-rtl` | flip the icon in rtl                                               | `boolean`                                          | `false`      |\n| `scale`              | `scale`         | specify the scale of the chip, defaults to m                       | `"l" \\| "m" \\| "s"`                                | `"m"`        |\n| `value` _(required)_ | `value`         | The assigned value for the chip                                    | `any`                                              | `undefined`  |\n\n## Events\n\n| Event                | Description                                | Type               |\n| -------------------- | ------------------------------------------ | ------------------ |\n| `calciteChipDismiss` | Emitted when the dismiss button is clicked | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot      | Description                 |\n| --------- | --------------------------- |\n|           | A slot for adding text.     |\n| `"image"` | A slot for adding an image. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-alert](../alert)\n- [calcite-combobox](../combobox)\n- [calcite-rating](../rating)\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-chip --\x3e calcite-icon\n  calcite-alert --\x3e calcite-chip\n  calcite-combobox --\x3e calcite-chip\n  calcite-rating --\x3e calcite-chip\n  style calcite-chip fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <div style="background-color:white;padding:100px">
    <calcite-chip
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      appearance="${Object(dist.select)("appearance",["solid","clear"],"solid")}"
      color="${Object(dist.select)("color",["blue","red","yellow","green","grey"],"grey")}"
      ${Object(helpers.a)("dismissible",!1)}
      >My great chip</calcite-chip
    >
  </div>
`}),WithIcon=function(){return tests_utils.a`
  <div style="background-color:white;padding:100px">
    <calcite-chip
      icon="${Object(dist.select)("icon",helpers.c,helpers.c[0])}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      appearance="${Object(dist.select)("appearance",["solid","clear"],"solid")}"
      color="${Object(dist.select)("color",["blue","red","yellow","green","grey"],"grey")}"
      ${Object(helpers.a)("dismissible",!1)}
    >
      My great chip</calcite-chip
    >
  </div>
`},WithImage=function(){return tests_utils.a`
  <div style="background-color:white;padding:100px">
    <calcite-chip
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      appearance="${Object(dist.select)("appearance",["solid","clear"],"solid")}"
      color="${Object(dist.select)("color",["blue","red","yellow","green","grey"],"grey")}"
      ${Object(helpers.a)("dismissible",!1)}
    >
      <img alt="" slot="image" src="${Object(tests_utils.b)({width:50,height:50})}" />
      My great chip</calcite-chip
    >
  </div>
`},WithAvatar=function(){var scale=Object(dist.select)("scale",["s","m","l"],"m");return tests_utils.a`
    <div style="background-color:white;padding:100px">
      <calcite-chip
        scale="${scale}"
        appearance="${Object(dist.select)("appearance",["solid","clear"],"solid")}"
        color="${Object(dist.select)("color",["blue","red","yellow","green","grey"],"grey")}"
        ${Object(helpers.a)("dismissible",!1)}
      >
        <calcite-avatar
          slot="image"
          scale="${scale}"
          user-id="25684463a00c449585dbb32a065f6b74"
          full-name="user name"
        ></calcite-avatar>
        User Name
      </calcite-chip>
    </div>
  `},DarkTheme=function(){return tests_utils.a`
  <div style="background-color:#2b2b2b;padding:100px">
    <calcite-chip
      class="calcite-theme-dark"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      appearance="${Object(dist.select)("appearance",["solid","clear"],"solid")}"
      color="${Object(dist.select)("color",["blue","red","yellow","green","grey"],"grey")}"
      ${Object(helpers.a)("dismissible",!1)}
      >My great chip</calcite-chip
    >
  </div>
`};DarkTheme.storyName="Dark theme",DarkTheme.parameters={themes:utils.f};var Rtl=function(){return tests_utils.a`
  <div style="background-color:white;padding:100px" dir="rtl">
    <calcite-chip
      icon="${Object(dist.select)("icon",helpers.c,helpers.c[0])}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      appearance="${Object(dist.select)("appearance",["solid","clear"],"solid")}"
      color="${Object(dist.select)("color",["blue","red","yellow","green","grey"],"grey")}"
      ${Object(helpers.a)("dismissible",!1)}
      >My great chip</calcite-chip
    >
  </div>
`};Rtl.storyName="RTL",Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="background-color:white;padding:100px">\n    <calcite-chip\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      appearance="${select("appearance", ["solid", "clear"], "solid")}"\n      color="${select("color", ["blue", "red", "yellow", "green", "grey"], "grey")}"\n      ${boolean("dismissible", false)}\n      >My great chip</calcite-chip\n    >\n  </div>\n`'}},Simple.parameters),WithIcon.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="background-color:white;padding:100px">\n    <calcite-chip\n      icon="${select("icon", iconNames, iconNames[0])}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      appearance="${select("appearance", ["solid", "clear"], "solid")}"\n      color="${select("color", ["blue", "red", "yellow", "green", "grey"], "grey")}"\n      ${boolean("dismissible", false)}\n    >\n      My great chip</calcite-chip\n    >\n  </div>\n`'}},WithIcon.parameters),WithImage.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="background-color:white;padding:100px">\n    <calcite-chip\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      appearance="${select("appearance", ["solid", "clear"], "solid")}"\n      color="${select("color", ["blue", "red", "yellow", "green", "grey"], "grey")}"\n      ${boolean("dismissible", false)}\n    >\n      <img alt="" slot="image" src="${placeholderImage({ width: 50, height: 50 })}" />\n      My great chip</calcite-chip\n    >\n  </div>\n`'}},WithImage.parameters),WithAvatar.parameters=Object.assign({storySource:{source:'(): string => {\n  const scale = select("scale", ["s", "m", "l"], "m");\n\n  return html`\n    <div style="background-color:white;padding:100px">\n      <calcite-chip\n        scale="${scale}"\n        appearance="${select("appearance", ["solid", "clear"], "solid")}"\n        color="${select("color", ["blue", "red", "yellow", "green", "grey"], "grey")}"\n        ${boolean("dismissible", false)}\n      >\n        <calcite-avatar\n          slot="image"\n          scale="${scale}"\n          user-id="25684463a00c449585dbb32a065f6b74"\n          full-name="user name"\n        ></calcite-avatar>\n        User Name\n      </calcite-chip>\n    </div>\n  `;\n}'}},WithAvatar.parameters),DarkTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="background-color:#2b2b2b;padding:100px">\n    <calcite-chip\n      class="calcite-theme-dark"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      appearance="${select("appearance", ["solid", "clear"], "solid")}"\n      color="${select("color", ["blue", "red", "yellow", "green", "grey"], "grey")}"\n      ${boolean("dismissible", false)}\n      >My great chip</calcite-chip\n    >\n  </div>\n`'}},DarkTheme.parameters),Rtl.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="background-color:white;padding:100px" dir="rtl">\n    <calcite-chip\n      icon="${select("icon", iconNames, iconNames[0])}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      appearance="${select("appearance", ["solid", "clear"], "solid")}"\n      color="${select("color", ["blue", "red", "yellow", "green", "grey"], "grey")}"\n      ${boolean("dismissible", false)}\n      >My great chip</calcite-chip\n    >\n  </div>\n`'}},Rtl.parameters)},"./src/components/color-picker/color-picker.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"AllowingEmpty",(function(){return AllowingEmpty}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),resources=__webpack_require__("./.storybook/resources.ts");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={title:"Components/Controls/ColorPicker",parameters:{notes:'# calcite-color-picker\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-color-picker dir="ltr" scale="m" value="#b33f33" appearance="default"></calcite-color-picker>\n```\n\n### Minimal\n\nFor a minimal design, you can hide unused color formats and options:\n\n```html\n<calcite-color-picker appearance="minimal" value="" allow-empty hide-saved hide-channels></calcite-color-picker>\n```\n\n## Properties\n\n| Property          | Attribute           | Description                                                                                                                                                                                                                                     | Type                                                                                                                                       | Default            |\n| ----------------- | ------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------ | ------------------ |\n| `allowEmpty`      | `allow-empty`       | When false, empty color (null) will be allowed as a value. Otherwise, a color value is always enforced by the component. When true, clearing the input and blurring will restore the last valid color set. When false, it will set it to empty. | `boolean`                                                                                                                                  | `false`            |\n| `appearance`      | `appearance`        | specify the appearance - default (containing border), or minimal (no containing border)                                                                                                                                                         | `"default" \\| "minimal"`                                                                                                                   | `"default"`        |\n| `format`          | `format`            | The format of the value property. When "auto", the format will be inferred from `value` when set.                                                                                                                                               | `"auto" \\| "hex" \\| "hexa" \\| "hsl" \\| "hsl-css" \\| "hsla" \\| "hsla-css" \\| "hsv" \\| "hsva" \\| "rgb" \\| "rgb-css" \\| "rgba" \\| "rgba-css"` | `defaultFormat`    |\n| `hideChannels`    | `hide-channels`     | When true, hides the RGB/HSV channel inputs                                                                                                                                                                                                     | `boolean`                                                                                                                                  | `false`            |\n| `hideHex`         | `hide-hex`          | When true, hides the hex input                                                                                                                                                                                                                  | `boolean`                                                                                                                                  | `false`            |\n| `hideSaved`       | `hide-saved`        | When true, hides the saved colors section                                                                                                                                                                                                       | `boolean`                                                                                                                                  | `false`            |\n| `intlB`           | `intl-b`            | Label used for the blue channel                                                                                                                                                                                                                 | `string`                                                                                                                                   | `TEXT.b`           |\n| `intlBlue`        | `intl-blue`         | Label used for the blue channel description                                                                                                                                                                                                     | `string`                                                                                                                                   | `TEXT.blue`        |\n| `intlDeleteColor` | `intl-delete-color` | Label used for the delete color button.                                                                                                                                                                                                         | `string`                                                                                                                                   | `TEXT.deleteColor` |\n| `intlG`           | `intl-g`            | Label used for the green channel                                                                                                                                                                                                                | `string`                                                                                                                                   | `TEXT.g`           |\n| `intlGreen`       | `intl-green`        | Label used for the green channel description                                                                                                                                                                                                    | `string`                                                                                                                                   | `TEXT.green`       |\n| `intlH`           | `intl-h`            | Label used for the hue channel                                                                                                                                                                                                                  | `string`                                                                                                                                   | `TEXT.h`           |\n| `intlHex`         | `intl-hex`          | Label used for the hex input                                                                                                                                                                                                                    | `string`                                                                                                                                   | `TEXT.hex`         |\n| `intlHsv`         | `intl-hsv`          | Label used for the HSV mode                                                                                                                                                                                                                     | `string`                                                                                                                                   | `TEXT.hsv`         |\n| `intlHue`         | `intl-hue`          | Label used for the hue channel description                                                                                                                                                                                                      | `string`                                                                                                                                   | `TEXT.hue`         |\n| `intlNoColor`     | `intl-no-color`     | Label used for the hex input when there is no color selected.                                                                                                                                                                                   | `string`                                                                                                                                   | `TEXT.noColor`     |\n| `intlR`           | `intl-r`            | Label used for the red channel                                                                                                                                                                                                                  | `string`                                                                                                                                   | `TEXT.r`           |\n| `intlRed`         | `intl-red`          | Label used for the red channel description                                                                                                                                                                                                      | `string`                                                                                                                                   | `TEXT.red`         |\n| `intlRgb`         | `intl-rgb`          | Label used for the RGB mode                                                                                                                                                                                                                     | `string`                                                                                                                                   | `TEXT.rgb`         |\n| `intlS`           | `intl-s`            | Label used for the saturation channel                                                                                                                                                                                                           | `string`                                                                                                                                   | `TEXT.s`           |\n| `intlSaturation`  | `intl-saturation`   | Label used for the saturation channel description                                                                                                                                                                                               | `string`                                                                                                                                   | `TEXT.saturation`  |\n| `intlSaveColor`   | `intl-save-color`   | Label used for the save color button.                                                                                                                                                                                                           | `string`                                                                                                                                   | `TEXT.saveColor`   |\n| `intlSaved`       | `intl-saved`        | Label used for the saved colors section                                                                                                                                                                                                         | `string`                                                                                                                                   | `TEXT.saved`       |\n| `intlV`           | `intl-v`            | Label used for the value channel                                                                                                                                                                                                                | `string`                                                                                                                                   | `TEXT.v`           |\n| `intlValue`       | `intl-value`        | Label used for the                                                                                                                                                                                                                              | `string`                                                                                                                                   | `TEXT.value`       |\n| `scale`           | `scale`             | The scale of the color picker.                                                                                                                                                                                                                  | `"l" \\| "m" \\| "s"`                                                                                                                        | `"m"`              |\n| `storageId`       | `storage-id`        | Storage ID for colors.                                                                                                                                                                                                                          | `string`                                                                                                                                   | `undefined`        |\n| `value`           | `value`             | The color value. This value can be either a {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color\\|CSS string} a RGB, HSL or HSV object. The type will be preserved as the color is updated.                                            | `HSL \\| HSL & ObjectWithAlpha \\| HSV \\| HSV & ObjectWithAlpha \\| RGB \\| RGB & ObjectWithAlpha \\| string`                                   | `defaultValue`     |\n\n## Events\n\n| Event                      | Description                                                                                                                                                                                      | Type               |\n| -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------ |\n| `calciteColorPickerChange` | Fires when the color value has changed.                                                                                                                                                          | `CustomEvent<any>` |\n| `calciteColorPickerInput`  | Fires as the color value changes. This is similar to the change event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved. | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Dependencies\n\n### Depends on\n\n- [calcite-tab-title](../tab-title)\n- [calcite-tab](../tab)\n- [calcite-input](../input)\n- [calcite-color-picker-hex-input](../color-picker-hex-input)\n- [calcite-tabs](../tabs)\n- [calcite-tab-nav](../tab-nav)\n- [calcite-button](../button)\n- [calcite-color-picker-swatch](../color-picker-swatch)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-color-picker --\x3e calcite-tab-title\n  calcite-color-picker --\x3e calcite-tab\n  calcite-color-picker --\x3e calcite-input\n  calcite-color-picker --\x3e calcite-color-picker-hex-input\n  calcite-color-picker --\x3e calcite-tabs\n  calcite-color-picker --\x3e calcite-tab-nav\n  calcite-color-picker --\x3e calcite-button\n  calcite-color-picker --\x3e calcite-color-picker-swatch\n  calcite-tab-title --\x3e calcite-icon\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  calcite-color-picker-hex-input --\x3e calcite-input\n  calcite-color-picker-hex-input --\x3e calcite-color-picker-swatch\n  calcite-button --\x3e calcite-loader\n  calcite-button --\x3e calcite-icon\n  style calcite-color-picker fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}};var createColorAttributes=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,scale=resources.a.scale;return Object(utils.b)([{name:"hide-channels",commit:function(){return this.value=Object(dist.boolean)("hide-channels",!1),delete this.build,this}},{name:"hide-hex",commit:function(){return this.value=Object(dist.boolean)("hide-hex",!1),delete this.build,this}},{name:"hide-saved",commit:function(){return this.value=Object(dist.boolean)("hide-saved",!1),delete this.build,this}},{name:"scale",commit:function(){return this.value=Object(dist.select)("scale",scale.values,scale.defaultValue),delete this.build,this}}],exceptions)},Simple=function(){return Object(utils.a)("calcite-color-picker",[].concat(_toConsumableArray(createColorAttributes()),[{name:"value",value:Object(dist.text)("value","#b33f33")}]))},RTL=function(){return Object(utils.a)("calcite-color-picker",[].concat(_toConsumableArray(createColorAttributes({exceptions:["dir"]}).concat({name:"dir",value:"rtl"})),[{name:"value",value:Object(dist.text)("value","#b33f33")}]))},DarkMode=function(){return Object(utils.a)("calcite-color-picker",[].concat(_toConsumableArray(createColorAttributes()),[{name:"class",value:"calcite-theme-dark"},{name:"value",value:Object(dist.text)("value","#b33f33")}]))};DarkMode.parameters={themes:utils.f};var AllowingEmpty=function(){return Object(utils.a)("calcite-color-picker",[].concat(_toConsumableArray(createColorAttributes()),[{name:"allow-empty",value:!0},{name:"value",value:Object(dist.text)("value","")}]))};Simple.parameters=Object.assign({storySource:{source:'(): string =>\n  create("calcite-color-picker", [\n    ...createColorAttributes(),\n    {\n      name: "value",\n      value: text("value", "#b33f33")\n    }\n  ])'}},Simple.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create("calcite-color-picker", [\n    ...createColorAttributes({ exceptions: ["dir"] }).concat({ name: "dir", value: "rtl" }),\n    {\n      name: "value",\n      value: text("value", "#b33f33")\n    }\n  ])'}},RTL.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string =>\n  create("calcite-color-picker", [\n    ...createColorAttributes(),\n    { name: "class", value: "calcite-theme-dark" },\n    {\n      name: "value",\n      value: text("value", "#b33f33")\n    }\n  ])'}},DarkMode.parameters),AllowingEmpty.parameters=Object.assign({storySource:{source:'(): string =>\n  create("calcite-color-picker", [\n    ...createColorAttributes(),\n    { name: "allow-empty", value: true },\n    { name: "value", value: text("value", "") }\n  ])'}},AllowingEmpty.parameters)},"./src/components/combobox/combobox.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"Single",(function(){return Single})),__webpack_require__.d(__webpack_exports__,"Multiple",(function(){return Multiple})),__webpack_require__.d(__webpack_exports__,"NestedItems",(function(){return NestedItems})),__webpack_require__.d(__webpack_exports__,"DarkTheme",(function(){return DarkTheme})),__webpack_require__.d(__webpack_exports__,"Rtl",(function(){return Rtl})),__webpack_require__.d(__webpack_exports__,"FlipPositioning",(function(){return FlipPositioning}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Controls/Combobox",parameters:{notes:['# calcite-combobox\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Ancestors\n\n```html\n<calcite-combobox label="Ancestors selection-mode combobox" selection-mode="ancestors">\n  <calcite-combobox-item value="Trees" text-label="Trees">\n    <calcite-combobox-item\n      value="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n      text-label="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n      selected\n    ></calcite-combobox-item>\n    <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n    <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n  </calcite-combobox-item>\n</calcite-combobox>\n```\n\n### Multi\n\n```html\n<calcite-combobox label="Mulit selection-mode combobox" selection-mode="multi">\n  <calcite-combobox-item value="Trees" text-label="Trees">\n    <calcite-combobox-item\n      value="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n      text-label="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n      selected\n    ></calcite-combobox-item>\n    <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n    <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n  </calcite-combobox-item>\n</calcite-combobox>\n```\n\n### Single\n\n```html\n<calcite-combobox label="Single selection-mode combobox" selection-mode="single">\n  <calcite-combobox-item value="Trees" text-label="Trees">\n    <calcite-combobox-item\n      value="CommercialDamageAssessment - Damage to Commercial Buildings"\n      text-label="CommercialDamageAssessment - Damage to Commercial Buildings"\n      selected\n    ></calcite-combobox-item>\n    <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n    <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n  </calcite-combobox-item>\n  <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n</calcite-combobox>\n```\n\n## Properties\n\n| Property             | Attribute             | Description                                                                                                                                                                                                                    | Type                                 | Default          |\n| -------------------- | --------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------ | ---------------- |\n| `active`             | `active`              | Opens or closes the combobox                                                                                                                                                                                                   | `boolean`                            | `false`          |\n| `allowCustomValues`  | `allow-custom-values` | Allow entry of custom values which are not in the original set of items                                                                                                                                                        | `boolean`                            | `undefined`      |\n| `disabled`           | `disabled`            | Disable combobox input                                                                                                                                                                                                         | `boolean`                            | `false`          |\n| `intlRemoveTag`      | `intl-remove-tag`     | string to override the English "Remove tag" text for when an item is selected.                                                                                                                                                 | `string`                             | `TEXT.removeTag` |\n| `label` _(required)_ | `label`               | Aria label for combobox (required)                                                                                                                                                                                             | `string`                             | `undefined`      |\n| `maxItems`           | `max-items`           | Specify the maximum number of combobox items (including nested children) to display before showing the scroller                                                                                                                | `number`                             | `0`              |\n| `name`               | `name`                | The name of the switch input                                                                                                                                                                                                   | `string`                             | `undefined`      |\n| `overlayPositioning` | `overlay-positioning` | Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the \'fixed\' value.                                                                                             | `"absolute" \\| "fixed"`              | `"absolute"`     |\n| `placeholder`        | `placeholder`         | Placeholder text for input                                                                                                                                                                                                     | `string`                             | `undefined`      |\n| `scale`              | `scale`               | Specify the scale of the combobox, defaults to m                                                                                                                                                                               | `"l" \\| "m" \\| "s"`                  | `"m"`            |\n| `selectionMode`      | `selection-mode`      | specify the selection mode - multi: allow any number of selected items (default) - single: only one selection) - ancestors: like multi, but show ancestors of selected items as selected, only deepest children shown in chips | `"ancestors" \\| "multi" \\| "single"` | `"multi"`        |\n| `value`              | `value`               | The value(s) of the selectedItem(s)                                                                                                                                                                                            | `string \\| string[]`                 | `null`           |\n\n## Events\n\n| Event                         | Description                                                                                                                           | Type                                                  |\n| ----------------------------- | ------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------- |\n| `calciteComboboxChange`       | Called when the selected item(s) changes.                                                                                             | `CustomEvent<{ selectedItems: any[]; }>`              |\n| `calciteComboboxChipDismiss`  | Called when a selected item in the combobox is dismissed via its chip \\*                                                              | `CustomEvent<any>`                                    |\n| `calciteComboboxFilterChange` | Called when the user has entered text to filter the options list                                                                      | `CustomEvent<{ visibleItems: any[]; text: string; }>` |\n| `calciteLookupChange`         | <span style="color:red">**[DEPRECATED]**</span> use calciteComboboxChange instead<br/><br/>Called when the selected items set changes | `CustomEvent<any[]>`                                  |\n\n## Methods\n\n### `reposition() => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description                                 |\n| ---- | ------------------------------------------- |\n|      | A slot for adding `calcite-combobox-item`s. |\n\n## CSS Custom Properties\n\n| Name                              | Description                      |\n| --------------------------------- | -------------------------------- |\n| `--calcite-combobox-input-height` | the height of the combobox input |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-chip](../chip)\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-combobox --\x3e calcite-chip\n  calcite-combobox --\x3e calcite-icon\n  calcite-chip --\x3e calcite-icon\n  style calcite-combobox fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n',"# calcite-combobox-item\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property                 | Attribute    | Description                                                                         | Type      | Default     |\n| ------------------------ | ------------ | ----------------------------------------------------------------------------------- | --------- | ----------- |\n| `active`                 | `active`     | True when item is highlighted either from keyboard or mouse hover                   | `boolean` | `false`     |\n| `ancestors`              | --           | Parent and grandparent combobox items, this is set internally for use from combobox | `any[]`   | `undefined` |\n| `constant`               | `constant`   | Don't filter this item based on the search text                                     | `boolean` | `undefined` |\n| `disabled`               | `disabled`   | When true, the item cannot be clicked and is visually muted.                        | `boolean` | `false`     |\n| `guid`                   | `guid`       | Unique identifier, used for accessibility                                           | `string`  | `guid()`    |\n| `icon`                   | `icon`       | Custom icon to display both in combobox chips and next to combobox item text        | `string`  | `undefined` |\n| `selected`               | `selected`   | Set this to true to pre-select an item. Toggles when an item is checked/unchecked.  | `boolean` | `false`     |\n| `textLabel` _(required)_ | `text-label` | The main label for this item.                                                       | `string`  | `undefined` |\n| `value` _(required)_     | `value`      | The item's associated value                                                         | `any`     | `undefined` |\n\n## Events\n\n| Event                       | Description                                          | Type               |\n| --------------------------- | ---------------------------------------------------- | ------------------ |\n| `calciteComboboxItemChange` | Emitted whenever the item is selected or unselected. | `CustomEvent<any>` |\n\n## Methods\n\n### `toggleSelected(coerce?: boolean) => Promise<void>`\n\nUsed to toggle the selection state. By default this won't trigger an event.\nThe first argument allows the value to be coerced, rather than swapping values.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description                                        |\n| ---- | -------------------------------------------------- |\n|      | A slot for adding nested `calcite-combobox-item`s. |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-combobox-item --\x3e calcite-icon\n  style calcite-combobox-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n"]}},function(){return tests_utils.a`
  <div style="width:400px;max-width:100%;background-color:white;padding:100px">
    <calcite-combobox
      label="demo combobox"
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      selection-mode="${Object(dist.select)("selection-mode",["multi","single","ancestors"],"multi")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("allow-custom-values",!1)}
      max-items="${Object(dist.number)("max-items",0)}"
    >
      <calcite-combobox-item value="Trees" text-label="Trees">
        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>
        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>
        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers">
        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>
        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>
        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals">
        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>
        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>
        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`}),Single=function(){return tests_utils.a`
  <div style="width:150px;max-width:100%;background-color:white;padding:100px">
    <calcite-combobox
      label="demo combobox"
      selection-mode="${Object(dist.select)("selection-mode",["multi","single","ancestors"],"single")}"
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      max-items="${Object(dist.number)("max-items",0)}"
    >
      <calcite-combobox-item icon="altitude" value="altitude" text-label="Altitude" selected></calcite-combobox-item>
      <calcite-combobox-item icon="article" value="article" text-label="Article"></calcite-combobox-item>
      <calcite-combobox-item icon="attachment" value="attachment" text-label="Attachment"></calcite-combobox-item>
      <calcite-combobox-item icon="banana" value="banana" text-label="Banana"></calcite-combobox-item>
      <calcite-combobox-item icon="battery3" value="battery" text-label="Batterycharging"></calcite-combobox-item>
      <calcite-combobox-item icon="beaker" value="beaker" text-label="Beaker"></calcite-combobox-item>
      <calcite-combobox-item icon="bell" value="bell" text-label="Bell"></calcite-combobox-item>
      <calcite-combobox-item icon="bookmark" value="bookmark" text-label="Bookmark"></calcite-combobox-item>
      <calcite-combobox-item icon="brightness" value="brightness" text-label="Brightness"></calcite-combobox-item>
      <calcite-combobox-item icon="calendar" value="calendar" text-label="Calendar"></calcite-combobox-item>
      <calcite-combobox-item icon="camera" value="camera" text-label="Camera"></calcite-combobox-item>
      <calcite-combobox-item icon="car" value="car" text-label="Car"></calcite-combobox-item>
      <calcite-combobox-item icon="clock" value="clock" text-label="Clock"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`},Multiple=function(){return tests_utils.a`
  <div style="width:400px;max-width:100%;background-color:white;padding:100px">
    <calcite-combobox
      label="demo combobox"
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      selection-mode="${Object(dist.select)("selection-mode",["multi","single","ancestors"],"multi")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("allow-custom-values",!1)}
      max-items="${Object(dist.number)("max-items",0)}"
    >
      <calcite-combobox-item value="Trees" text-label="Trees" selected></calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers" selected></calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals"></calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
      <calcite-combobox-item
        value="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"
        text-label="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"
        selected
      ></calcite-combobox-item>
    </calcite-combobox>
  </div>
`},NestedItems=function(){return tests_utils.a`
  <div style="width:400px;max-width:100%;background-color:white;padding:100px">
    <calcite-combobox
      active
      label="demo combobox"
      selection-mode="${Object(dist.select)("selection-mode",["multi","single","ancestors"],"multi")}"
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("allow-custom-values",!1)}
      max-items="${Object(dist.number)("max-items",0)}"
    >
      <calcite-combobox-item value="ITEM-0-0" text-label="Level 1">
        <calcite-combobox-item value="ITEM-0-1" text-label="Level 2"></calcite-combobox-item>
        <calcite-combobox-item value="ITEM-0-2" text-label="Level 2"></calcite-combobox-item>
        <calcite-combobox-item value="ITEM-0-3" text-label="Level 2"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="ITEM-1-0" text-label="Level 1">
        <calcite-combobox-item value="ITEM-1-1" text-label="Level 2">
          <calcite-combobox-item value="ITEM-1-1-0" text-label="Level 3"></calcite-combobox-item>
          <calcite-combobox-item value="ITEM-1-1-1" text-label="Level 3">
            <calcite-combobox-item value="ITEM-1-1-1-0" text-label="Level 4"></calcite-combobox-item>
            <calcite-combobox-item value="ITEM-1-1-1-1" text-label="Level 4"></calcite-combobox-item>
          </calcite-combobox-item>
        </calcite-combobox-item>
        <calcite-combobox-item value="ITEM-1-2" text-label="Level 2"></calcite-combobox-item>
        <calcite-combobox-item value="ITEM-1-3" text-label="Level 2"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="ITEM-2-0" text-label="Level 1">
        <calcite-combobox-item value="ITEM-2-1" text-label="Level 2"></calcite-combobox-item>
        <calcite-combobox-item value="ITEM-2-2" text-label="Level 2">
          <calcite-combobox-item value="ITEM-2-2-0" text-label="Level 3"></calcite-combobox-item>
        </calcite-combobox-item>
        <calcite-combobox-item value="ITEM-2-3" text-label="Level 2"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="ITEM-0-4" text-label="Level 1"></calcite-combobox-item>
      <calcite-combobox-item value="ITEM-0-5" text-label="Level 1"></calcite-combobox-item>
      <calcite-combobox-item value="ITEM-0-6" text-label="Level 1"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`},DarkTheme=function(){return tests_utils.a`
  <div style="width:400px;max-width:100%;padding:100px">
    <calcite-combobox
      label="demo combobox"
      selection-mode="${Object(dist.select)("selection-mode",["multi","single","ancestors"],"multi")}"
      class="calcite-theme-dark"
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("allow-custom-values",!1)}
      max-items="${Object(dist.number)("max-items",0)}"
    >
      <calcite-combobox-item value="Trees" text-label="Trees">
        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>
        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>
        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers">
        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>
        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>
        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals">
        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>
        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>
        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`};DarkTheme.parameters={themes:utils.f};var Rtl=function(){return tests_utils.a`
  <div style="width:400px;max-width:100%;background-color:white;padding:100px">
    <calcite-combobox
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      selection-mode="${Object(dist.select)("selection-mode",["multi","single","ancestors"],"multi")}"
      dir="rtl"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("allow-custom-values",!1)}
    >
      <calcite-combobox-item value="Trees" text-label="Trees">
        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>
        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>
        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers">
        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>
        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>
        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals">
        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>
        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>
        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`};Rtl.storyName="RTL";var FlipPositioning=Object(helpers.f)((function(){return tests_utils.a`
    <div style="position: absolute; bottom: 10px; left: 10px;">
      <calcite-combobox
        max-items="${Object(dist.number)("max-items",6)}"
        placeholder="${Object(dist.text)("placeholder","placeholder")}"
        label="${Object(dist.text)("label (for screen readers)","demo")}"
        selection-mode="${Object(dist.select)("selection-mode",["multi","single","ancestors"],"multi")}"
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        ${Object(helpers.a)("disabled",!1)}
        ${Object(helpers.a)("allow-custom-values",!1)}
      >
        <calcite-combobox-item value="Trees" text-label="Trees">
          <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>
          <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>
          <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>
        </calcite-combobox-item>
        <calcite-combobox-item value="Flowers" text-label="Flowers">
          <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>
          <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>
          <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>
        </calcite-combobox-item>
        <calcite-combobox-item value="Animals" text-label="Animals">
          <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>
          <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>
          <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>
        </calcite-combobox-item>
        <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>
        <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>
        <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
      </calcite-combobox>
    </div>
  `}),Object(helpers.b)("calcite-combobox").snapshot("Default").click("calcite-combobox").snapshot("Open"));FlipPositioning.parameters={layout:"fullscreen"},Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px;max-width:100%;background-color:white;padding:100px">\n    <calcite-combobox\n      label="demo combobox"\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      selection-mode="${select("selection-mode", ["multi", "single", "ancestors"], "multi")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      ${boolean("allow-custom-values", false)}\n      max-items="${number("max-items", 0)}"\n    >\n      <calcite-combobox-item value="Trees" text-label="Trees">\n        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>\n        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers">\n        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>\n        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>\n        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals">\n        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>\n        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>\n        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},Simple.parameters),Single.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:150px;max-width:100%;background-color:white;padding:100px">\n    <calcite-combobox\n      label="demo combobox"\n      selection-mode="${select("selection-mode", ["multi", "single", "ancestors"], "single")}"\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      max-items="${number("max-items", 0)}"\n    >\n      <calcite-combobox-item icon="altitude" value="altitude" text-label="Altitude" selected></calcite-combobox-item>\n      <calcite-combobox-item icon="article" value="article" text-label="Article"></calcite-combobox-item>\n      <calcite-combobox-item icon="attachment" value="attachment" text-label="Attachment"></calcite-combobox-item>\n      <calcite-combobox-item icon="banana" value="banana" text-label="Banana"></calcite-combobox-item>\n      <calcite-combobox-item icon="battery3" value="battery" text-label="Batterycharging"></calcite-combobox-item>\n      <calcite-combobox-item icon="beaker" value="beaker" text-label="Beaker"></calcite-combobox-item>\n      <calcite-combobox-item icon="bell" value="bell" text-label="Bell"></calcite-combobox-item>\n      <calcite-combobox-item icon="bookmark" value="bookmark" text-label="Bookmark"></calcite-combobox-item>\n      <calcite-combobox-item icon="brightness" value="brightness" text-label="Brightness"></calcite-combobox-item>\n      <calcite-combobox-item icon="calendar" value="calendar" text-label="Calendar"></calcite-combobox-item>\n      <calcite-combobox-item icon="camera" value="camera" text-label="Camera"></calcite-combobox-item>\n      <calcite-combobox-item icon="car" value="car" text-label="Car"></calcite-combobox-item>\n      <calcite-combobox-item icon="clock" value="clock" text-label="Clock"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},Single.parameters),Multiple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px;max-width:100%;background-color:white;padding:100px">\n    <calcite-combobox\n      label="demo combobox"\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      selection-mode="${select("selection-mode", ["multi", "single", "ancestors"], "multi")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      ${boolean("allow-custom-values", false)}\n      max-items="${number("max-items", 0)}"\n    >\n      <calcite-combobox-item value="Trees" text-label="Trees" selected></calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers" selected></calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals"></calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n      <calcite-combobox-item\n        value="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n        text-label="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n        selected\n      ></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},Multiple.parameters),NestedItems.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px;max-width:100%;background-color:white;padding:100px">\n    <calcite-combobox\n      active\n      label="demo combobox"\n      selection-mode="${select("selection-mode", ["multi", "single", "ancestors"], "multi")}"\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      ${boolean("allow-custom-values", false)}\n      max-items="${number("max-items", 0)}"\n    >\n      <calcite-combobox-item value="ITEM-0-0" text-label="Level 1">\n        <calcite-combobox-item value="ITEM-0-1" text-label="Level 2"></calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-0-2" text-label="Level 2"></calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-0-3" text-label="Level 2"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="ITEM-1-0" text-label="Level 1">\n        <calcite-combobox-item value="ITEM-1-1" text-label="Level 2">\n          <calcite-combobox-item value="ITEM-1-1-0" text-label="Level 3"></calcite-combobox-item>\n          <calcite-combobox-item value="ITEM-1-1-1" text-label="Level 3">\n            <calcite-combobox-item value="ITEM-1-1-1-0" text-label="Level 4"></calcite-combobox-item>\n            <calcite-combobox-item value="ITEM-1-1-1-1" text-label="Level 4"></calcite-combobox-item>\n          </calcite-combobox-item>\n        </calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-1-2" text-label="Level 2"></calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-1-3" text-label="Level 2"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="ITEM-2-0" text-label="Level 1">\n        <calcite-combobox-item value="ITEM-2-1" text-label="Level 2"></calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-2-2" text-label="Level 2">\n          <calcite-combobox-item value="ITEM-2-2-0" text-label="Level 3"></calcite-combobox-item>\n        </calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-2-3" text-label="Level 2"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="ITEM-0-4" text-label="Level 1"></calcite-combobox-item>\n      <calcite-combobox-item value="ITEM-0-5" text-label="Level 1"></calcite-combobox-item>\n      <calcite-combobox-item value="ITEM-0-6" text-label="Level 1"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},NestedItems.parameters),DarkTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px;max-width:100%;padding:100px">\n    <calcite-combobox\n      label="demo combobox"\n      selection-mode="${select("selection-mode", ["multi", "single", "ancestors"], "multi")}"\n      class="calcite-theme-dark"\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      ${boolean("allow-custom-values", false)}\n      max-items="${number("max-items", 0)}"\n    >\n      <calcite-combobox-item value="Trees" text-label="Trees">\n        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>\n        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers">\n        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>\n        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>\n        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals">\n        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>\n        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>\n        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},DarkTheme.parameters),Rtl.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px;max-width:100%;background-color:white;padding:100px">\n    <calcite-combobox\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      selection-mode="${select("selection-mode", ["multi", "single", "ancestors"], "multi")}"\n      dir="rtl"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      ${boolean("allow-custom-values", false)}\n    >\n      <calcite-combobox-item value="Trees" text-label="Trees">\n        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>\n        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers">\n        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>\n        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>\n        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals">\n        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>\n        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>\n        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},Rtl.parameters),FlipPositioning.parameters=Object.assign({storySource:{source:'stepStory(\n  (): string => html`\n    <div style="position: absolute; bottom: 10px; left: 10px;">\n      <calcite-combobox\n        max-items="${number("max-items", 6)}"\n        placeholder="${text("placeholder", "placeholder")}"\n        label="${text("label (for screen readers)", "demo")}"\n        selection-mode="${select("selection-mode", ["multi", "single", "ancestors"], "multi")}"\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        ${boolean("disabled", false)}\n        ${boolean("allow-custom-values", false)}\n      >\n        <calcite-combobox-item value="Trees" text-label="Trees">\n          <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>\n          <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n          <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n        </calcite-combobox-item>\n        <calcite-combobox-item value="Flowers" text-label="Flowers">\n          <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>\n          <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>\n          <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>\n        </calcite-combobox-item>\n        <calcite-combobox-item value="Animals" text-label="Animals">\n          <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>\n          <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>\n          <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>\n        </calcite-combobox-item>\n        <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>\n        <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>\n        <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n      </calcite-combobox>\n    </div>\n  `,\n  createSteps("calcite-combobox").snapshot("Default").click("calcite-combobox").snapshot("Open")\n)'}},FlipPositioning.parameters)},"./src/components/date-picker/date-picker.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),locale=__webpack_require__("./src/utils/locale.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),scale=__webpack_require__("./.storybook/resources.ts").a.scale,Default=(__webpack_exports__.default={title:"Components/Controls/DatePicker",parameters:{notes:'# calcite-date-picker\n\nThe `calcite-date-picker` component allows for selecting a date via a calendar or text input. It supports multiple locales, languages, right to left, and is fully keyboard accessible.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nYou can set a min and max range, as well as an initial value with ISO 8601 formatted strings:\n\n```html\n<calcite-date-picker value="2020-03-27" min="2020-02-01" max="2021-01-01"></calcite-date-picker>\n```\n\n### Range\n\nYou can also add range property to activate date range mode. In this mode, you can specify start and end instead of the single value property.\n\n```html\n<calcite-date-picker range start="2020-03-15" end="2020-03-27" min="2020-02-01" max="2021-01-01" />\n```\n\n## Properties\n\n| Property                     | Attribute                      | Description                                                                                                              | Type                         | Default                                   |\n| ---------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------------ | ---------------------------- | ----------------------------------------- |\n| `activeRange`                | `active-range`                 | Active range                                                                                                             | `"end" \\| "start"`           | `undefined`                               |\n| `end`                        | `end`                          | <span style="color:red">**[DEPRECATED]**</span> use value instead<br/><br/>Selected end date                             | `string`                     | `undefined`                               |\n| `endAsDate`                  | --                             | <span style="color:red">**[DEPRECATED]**</span> use valueAsDate instead<br/><br/>Selected end date as full date object   | `Date`                       | `undefined`                               |\n| `headingLevel`               | `heading-level`                | Number at which section headings should start for this component.                                                        | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6` | `undefined`                               |\n| `intlNextMonth`              | `intl-next-month`              | Localized string for "next month" (used for aria label)                                                                  | `string`                     | `TEXT.nextMonth`                          |\n| `intlPrevMonth`              | `intl-prev-month`              | Localized string for "previous month" (used for aria label)                                                              | `string`                     | `TEXT.prevMonth`                          |\n| `intlYear`                   | `intl-year`                    | Localized string for "year" (used for aria label)                                                                        | `string`                     | `TEXT.year`                               |\n| `locale`                     | `locale`                       | BCP 47 language tag for desired language and country format                                                              | `string`                     | `document.documentElement.lang \\|\\| "en"` |\n| `max`                        | `max`                          | Latest allowed date ("yyyy-mm-dd")                                                                                       | `string`                     | `undefined`                               |\n| `maxAsDate`                  | --                             | Latest allowed date as full date object                                                                                  | `Date`                       | `undefined`                               |\n| `min`                        | `min`                          | Earliest allowed date ("yyyy-mm-dd")                                                                                     | `string`                     | `undefined`                               |\n| `minAsDate`                  | --                             | Earliest allowed date as full date object                                                                                | `Date`                       | `undefined`                               |\n| `proximitySelectionDisabled` | `proximity-selection-disabled` | Disables the default behaviour on the third click of narrowing or extending the range and instead starts a new range.    | `boolean`                    | `false`                                   |\n| `range`                      | `range`                        | Range mode activation                                                                                                    | `boolean`                    | `false`                                   |\n| `scale`                      | `scale`                        | specify the scale of the date picker                                                                                     | `"l" \\| "m" \\| "s"`          | `"m"`                                     |\n| `start`                      | `start`                        | <span style="color:red">**[DEPRECATED]**</span> use value instead<br/><br/>Selected start date                           | `string`                     | `undefined`                               |\n| `startAsDate`                | --                             | <span style="color:red">**[DEPRECATED]**</span> use valueAsDate instead<br/><br/>Selected start date as full date object | `Date`                       | `undefined`                               |\n| `value`                      | `value`                        | Selected date                                                                                                            | `string \\| string[]`         | `undefined`                               |\n| `valueAsDate`                | --                             | Selected date as full date object                                                                                        | `Date \\| Date[]`             | `undefined`                               |\n\n## Events\n\n| Event                          | Description                                                     | Type                           |\n| ------------------------------ | --------------------------------------------------------------- | ------------------------------ |\n| `calciteDatePickerChange`      | Trigger calcite date change when a user changes the date.       | `CustomEvent<Date>`            |\n| `calciteDatePickerRangeChange` | Trigger calcite date change when a user changes the date range. | `CustomEvent<DateRangeChange>` |\n\n## Dependencies\n\n### Used by\n\n- [calcite-input-date-picker](../input-date-picker)\n\n### Depends on\n\n- [calcite-date-picker-month-header](../date-picker-month-header)\n- [calcite-date-picker-month](../date-picker-month)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-date-picker --\x3e calcite-date-picker-month-header\n  calcite-date-picker --\x3e calcite-date-picker-month\n  calcite-date-picker-month-header --\x3e calcite-icon\n  calcite-date-picker-month --\x3e calcite-date-picker-day\n  calcite-input-date-picker --\x3e calcite-date-picker\n  style calcite-date-picker fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},Object(helpers.f)((function(){return tests_utils.a`<div style="width: 400px">${Object(utils.a)("calcite-date-picker",function(){var exceptions=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]}).exceptions;return Object(utils.b)([{name:"dir",commit:function(){return this.value=Object(dist.text)("dir",""),delete this.build,this}},{name:"end",commit:function(){return this.value=Object(dist.text)("end",""),delete this.build,this}},{name:"intl-next-month",commit:function(){return this.value=Object(dist.text)("intl-next-month","Next month"),delete this.build,this}},{name:"intl-prev-month",commit:function(){return this.value=Object(dist.text)("intl-prev-month","Previous month"),delete this.build,this}},{name:"locale",commit:function(){return this.value=Object(dist.select)("locale",locale.a,"en"),delete this.build,this}},{name:"max",commit:function(){return this.value=Object(dist.text)("max",""),delete this.build,this}},{name:"min",commit:function(){return this.value=Object(dist.text)("min",""),delete this.build,this}},{name:"next-month-label",commit:function(){return this.value=Object(dist.text)("next-month-label",""),delete this.build,this}},{name:"prev-month-label",commit:function(){return this.value=Object(dist.text)("prev-month-label",""),delete this.build,this}},{name:"range",commit:function(){return this.value=Object(dist.boolean)("range",!1),delete this.build,this}},{name:"scale",commit:function(){return this.value=Object(dist.select)("scale",scale.values,scale.defaultValue),delete this.build,this}},{name:"start",commit:function(){return this.value=Object(dist.text)("start",""),delete this.build,this}},{name:"value",commit:function(){return this.value=Object(dist.text)("value","2020-02-28"),delete this.build,this}}],exceptions)}())}</div>`}),Object(helpers.b)("calcite-date-picker").snapshot("Default").executeScript(Object(helpers.d)({story:"components-controls-datepicker--default",knobs:[{name:"dir",value:"rtl"}]})).snapshot("Default RTL").executeScript(Object(helpers.d)({story:"components-controls-datepicker--default",knobs:[]})).executeScript(Object(helpers.e)("dark")).snapshot("Dark").executeScript(Object(helpers.e)("light")).executeScript(Object(helpers.d)({story:"components-controls-datepicker--default",knobs:[{name:"end",value:"2020-02-16"},{name:"min",value:"2016-08-09"},{name:"range",value:"true"},{name:"start",value:"2020-02-12"}]})).snapshot("Range").executeScript(Object(helpers.d)({story:"components-controls-datepicker--default",knobs:[{name:"dir",value:"rtl"},{name:"end",value:"2020-02-16"},{name:"min",value:"2016-08-09"},{name:"range",value:"true"},{name:"start",value:"2020-02-12"}]})).snapshot("Range RTL")));Default.parameters=Object.assign({storySource:{source:'stepStory(\n  (): string => html`<div style="width: 400px">${create("calcite-date-picker", createAttributes())}</div>`,\n\n  createSteps("calcite-date-picker")\n    .snapshot("Default")\n\n    .executeScript(\n      setKnobs({\n        story: "components-controls-datepicker--default",\n        knobs: [{ name: "dir", value: "rtl" }]\n      })\n    )\n    .snapshot("Default RTL")\n\n    .executeScript(\n      setKnobs({\n        story: "components-controls-datepicker--default",\n        knobs: []\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Dark")\n\n    .executeScript(setTheme("light"))\n    .executeScript(\n      setKnobs({\n        story: "components-controls-datepicker--default",\n        knobs: [\n          { name: "end", value: "2020-02-16" },\n          { name: "min", value: "2016-08-09" },\n          { name: "range", value: "true" },\n          { name: "start", value: "2020-02-12" }\n        ]\n      })\n    )\n    .snapshot("Range")\n\n    .executeScript(\n      setKnobs({\n        story: "components-controls-datepicker--default",\n        knobs: [\n          { name: "dir", value: "rtl" },\n          { name: "end", value: "2020-02-16" },\n          { name: "min", value: "2016-08-09" },\n          { name: "range", value: "true" },\n          { name: "start", value: "2020-02-12" }\n        ]\n      })\n    )\n    .snapshot("Range RTL")\n)'}},Default.parameters)},"./src/components/dropdown/dropdown.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"WithIcons",(function(){return WithIcons})),__webpack_require__.d(__webpack_exports__,"GroupsAndSelectionModes",(function(){return GroupsAndSelectionModes})),__webpack_require__.d(__webpack_exports__,"ItemsAsLinks",(function(){return ItemsAsLinks})),__webpack_require__.d(__webpack_exports__,"AMixOfLinksAndNonLinks",(function(){return AMixOfLinksAndNonLinks})),__webpack_require__.d(__webpack_exports__,"DarkTheme",(function(){return DarkTheme})),__webpack_require__.d(__webpack_exports__,"WithIconsDarkTheme",(function(){return WithIconsDarkTheme})),__webpack_require__.d(__webpack_exports__,"GroupsAndSelectionModesDarkTheme",(function(){return GroupsAndSelectionModesDarkTheme})),__webpack_require__.d(__webpack_exports__,"ItemsAsLinksDarkTheme",(function(){return ItemsAsLinksDarkTheme})),__webpack_require__.d(__webpack_exports__,"SimpleRtl",(function(){return SimpleRtl})),__webpack_require__.d(__webpack_exports__,"ScrollingAfterCertainItems",(function(){return ScrollingAfterCertainItems})),__webpack_require__.d(__webpack_exports__,"FlipPositioning",(function(){return FlipPositioning}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),placements=["top-start","top","top-end","bottom-start","bottom","bottom-end","top-leading","top-trailing","bottom-leading","bottom-trailing"],Simple=(__webpack_exports__.default={title:"Components/Buttons/Dropdown",parameters:{notes:['# calcite-dropdown\n\nA `calcite-dropdown` can be used to provide an absolutely positioned set of selectable items. You can combine multiple groups of items and selection modes, and optionally pass a title for each group. All `<calcite-dropdown-item>` must have a parent `<calcite-dropdown-group>`, even if `group-title` attribute is not set.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-dropdown>\n  <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n  <calcite-dropdown-group>\n    <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n    <calcite-dropdown-item active>Date modified</calcite-dropdown-item>\n    <calcite-dropdown-item>Title</calcite-dropdown-item>\n  </calcite-dropdown-group>\n</calcite-dropdown>\n```\n\n### Disabling-close-on-select\n\nYou can choose to leave the dropdown open when an item is selected with the `disable-close-on-select` attribute. Note that this will only apply when the `calcite-dropdown-group` selection mode is set to `single` or `multi` - dropdowns will always close when an item in `none` selection mode is selected.\n\n```html\n<calcite-dropdown disable-close-on-select>\n  <calcite-button id="trigger" slot="dropdown-trigger">Open dropdown</calcite-button>\n  <calcite-dropdown-group id="group-1" selection-mode="single">\n    <calcite-dropdown-item id="item-1"> Dropdown Item Content </calcite-dropdown-item>\n    <calcite-dropdown-item id="item-2" active> Dropdown Item Content </calcite-dropdown-item>\n    <calcite-dropdown-item id="item-3"> Dropdown Item Content </calcite-dropdown-item>\n  </calcite-dropdown-group>\n</calcite-dropdown>\n```\n\n### Groups\n\nYou can combine groups in a single dropdown, with varying selection modes:\n\n```html\n<calcite-dropdown>\n  <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n  <calcite-dropdown-group group-title="Select one">\n    <calcite-dropdown-item>Apple</calcite-dropdown-item>\n    <calcite-dropdown-item active>Orange</calcite-dropdown-item>\n    <calcite-dropdown-item>Grape</calcite-dropdown-item>\n  </calcite-dropdown-group>\n  <calcite-dropdown-group group-title="Select multi" selection-mode="multi">\n    <calcite-dropdown-item>Asparagus</calcite-dropdown-item>\n    <calcite-dropdown-item active>Potato</calcite-dropdown-item>\n    <calcite-dropdown-item>Yam</calcite-dropdown-item>\n  </calcite-dropdown-group>\n  <calcite-dropdown-group group-title="Select none (useful for actions)" selection-mode="none">\n    <calcite-dropdown-item>Plant beans</calcite-dropdown-item>\n    <calcite-dropdown-item active>Add peas</calcite-dropdown-item>\n  </calcite-dropdown-group>\n</calcite-dropdown>\n```\n\n## Properties\n\n| Property               | Attribute                 | Description                                                                                                                                                                                    | Type                                                                                                                                                          | Default                    |\n| ---------------------- | ------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------- |\n| `active`               | `active`                  | Opens or closes the dropdown                                                                                                                                                                   | `boolean`                                                                                                                                                     | `false`                    |\n| `disableCloseOnSelect` | `disable-close-on-select` | allow the dropdown to remain open after a selection is made if the selection-mode of the selected item\'s containing group is "none", the dropdown will always close                            | `boolean`                                                                                                                                                     | `false`                    |\n| `disabled`             | `disabled`                | is the dropdown disabled                                                                                                                                                                       | `boolean`                                                                                                                                                     | `false`                    |\n| `maxItems`             | `max-items`               | specify the maximum number of calcite-dropdown-items to display before showing the scroller, must be greater than 0 - this value does not include groupTitles passed to calcite-dropdown-group | `number`                                                                                                                                                      | `0`                        |\n| `overlayPositioning`   | `overlay-positioning`     | Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the \'fixed\' value.                                                             | `"absolute" \\| "fixed"`                                                                                                                                       | `"absolute"`               |\n| `placement`            | `placement`               | Determines where the dropdown will be positioned relative to the button.                                                                                                                       | `"bottom" \\| "bottom-end" \\| "bottom-leading" \\| "bottom-start" \\| "bottom-trailing" \\| "top" \\| "top-end" \\| "top-leading" \\| "top-start" \\| "top-trailing"` | `DefaultDropdownPlacement` |\n| `scale`                | `scale`                   | specify the scale of dropdown, defaults to m                                                                                                                                                   | `"l" \\| "m" \\| "s"`                                                                                                                                           | `"m"`                      |\n| `selectedItems`        | --                        | **read-only** The currently selected items                                                                                                                                                     | `any[]`                                                                                                                                                       | `[]`                       |\n| `type`                 | `type`                    | specify whether the dropdown is opened by hover or click of a trigger element                                                                                                                  | `"click" \\| "hover"`                                                                                                                                          | `"click"`                  |\n| `width`                | `width`                   | specify the width of dropdown, defaults to m                                                                                                                                                   | `"l" \\| "m" \\| "s"`                                                                                                                                           | `"m"`                      |\n\n## Events\n\n| Event                   | Description                                                   | Type                |\n| ----------------------- | ------------------------------------------------------------- | ------------------- |\n| `calciteDropdownClose`  | fires when a dropdown has been closed \\*                      | `CustomEvent<void>` |\n| `calciteDropdownOpen`   | fires when a dropdown has been opened \\*                      | `CustomEvent<void>` |\n| `calciteDropdownSelect` | fires when a dropdown item has been selected or deselected \\* | `CustomEvent<void>` |\n\n## Methods\n\n### `reposition() => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot                 | Description                                                              |\n| -------------------- | ------------------------------------------------------------------------ |\n|                      | A slot for adding `calcite-dropdown-group`s or `calcite-dropdown-item`s. |\n| `"dropdown-trigger"` | A slot for the element that triggers the dropdown.                       |\n\n## CSS Custom Properties\n\n| Name                       | Description                       |\n| -------------------------- | --------------------------------- |\n| `--calcite-dropdown-width` | the width of the dropdown wrapper |\n\n## Dependencies\n\n### Used by\n\n- [calcite-split-button](../split-button)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-split-button --\x3e calcite-dropdown\n  style calcite-dropdown fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n','# calcite-dropdown-group\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property        | Attribute        | Description                                                                                                                                                           | Type                            | Default     |\n| --------------- | ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------- | ----------- |\n| `groupTitle`    | `group-title`    | optionally set a group title for display                                                                                                                              | `string`                        | `undefined` |\n| `scale`         | `scale`          | Specifies the size of the action.                                                                                                                                     | `"l" \\| "m" \\| "s"`             | `undefined` |\n| `selectionMode` | `selection-mode` | specify the selection mode - multi (allow any number of (or no) active items), single (allow and require one active item), none (no active items), defaults to single | `"multi" \\| "none" \\| "single"` | `"single"`  |\n\n## Slots\n\n| Slot | Description                                 |\n| ---- | ------------------------------------------- |\n|      | A slot for adding `calcite-dropdown-item`s. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n','# calcite-dropdown-item\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                | Type                         | Default     |\n| ------------- | --------------- | ------------------------------------------------------------------------------------------ | ---------------------------- | ----------- |\n| `active`      | `active`        | Indicates whether the item is active.                                                      | `boolean`                    | `false`     |\n| `href`        | `href`          | optionally pass a href - used to determine if the component should render as anchor        | `string`                     | `undefined` |\n| `iconEnd`     | `icon-end`      | optionally pass an icon to display at the end of an item - accepts calcite ui icon names   | `string`                     | `undefined` |\n| `iconFlipRtl` | `icon-flip-rtl` | flip the icon(s) in rtl                                                                    | `"both" \\| "end" \\| "start"` | `undefined` |\n| `iconStart`   | `icon-start`    | optionally pass an icon to display at the start of an item - accepts calcite ui icon names | `string`                     | `undefined` |\n| `label`       | `label`         | Applies to the aria-label attribute on the button or hyperlink                             | `string`                     | `undefined` |\n| `rel`         | `rel`           | The rel attribute to apply to the hyperlink                                                | `string`                     | `undefined` |\n| `target`      | `target`        | The target attribute to apply to the hyperlink                                             | `string`                     | `undefined` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description             |\n| ---- | ----------------------- |\n|      | A slot for adding text. |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-dropdown-item --\x3e calcite-icon\n  style calcite-dropdown-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n']}},function(){return tests_utils.a`
  <calcite-dropdown
    active
    placement="${Object(dist.select)("placement",placements,"bottom-leading")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("disable-close-on-select",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","multi","none"],"single")}"
      group-title="Sort by"
    >
      <calcite-dropdown-item>Relevance</calcite-dropdown-item>
      <calcite-dropdown-item active>Date modified</calcite-dropdown-item>
      <calcite-dropdown-item>Title</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`}),WithIcons=function(){return tests_utils.a`
  <calcite-dropdown
    active
    placement="${Object(dist.select)("placement",placements,"bottom-leading")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("disable-close-on-select",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","multi","none"],"single")}"
      group-title="Icon Start"
    >
      <calcite-dropdown-item icon-start="list">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="grid" active>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="table">Table</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","multi","none"],"single")}"
      group-title="Icon End"
    >
      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="grid" active>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","multi","none"],"single")}"
      group-title="Icon Both"
    >
      <calcite-dropdown-item icon-start="list" icon-end="data-check">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="grid" icon-end="data-check" active>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="table" icon-end="data-check">Table</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`},GroupsAndSelectionModes=function(){return tests_utils.a`
  <calcite-dropdown
    active
    placement="${Object(dist.select)("placement",placements,"bottom-leading")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("disable-close-on-select",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group group-title="Select one">
      <calcite-dropdown-item>Apple</calcite-dropdown-item>
      <calcite-dropdown-item active>Orange</calcite-dropdown-item>
      <calcite-dropdown-item>Grape</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Select multi" selection-mode="multi">
      <calcite-dropdown-item>Asparagus</calcite-dropdown-item>
      <calcite-dropdown-item active>Potato</calcite-dropdown-item>
      <calcite-dropdown-item active>Yam</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Select none (useful for actions)" selection-mode="none">
      <calcite-dropdown-item>Plant beans</calcite-dropdown-item>
      <calcite-dropdown-item>Add peas</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`};GroupsAndSelectionModes.storyName="Groups and selection modes";var ItemsAsLinks=function(){return tests_utils.a`
  <calcite-dropdown
    active
    placement="${Object(dist.select)("placement",placements,"bottom-leading")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("disable-close-on-select",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group selection-mode="none" group-title="Select one">
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Throw Apples</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Visit Oranges</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Eat Grapes</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-start="camera-flash-on"
        >Plant beans</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-end="camera-flash-on"
        >Add peas</calcite-dropdown-item
      >
    </calcite-dropdown-group>
  </calcite-dropdown>
`};ItemsAsLinks.storyName="Items as Links";var AMixOfLinksAndNonLinks=function(){return tests_utils.a`
  <calcite-dropdown
    active
    placement="${Object(dist.select)("placement",placements,"bottom-leading")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("disable-close-on-select",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group selection-mode="none" group-title="Select one">
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title">A link</calcite-dropdown-item>
      <calcite-dropdown-item onclick='alert("not a link")'>Not a link</calcite-dropdown-item>
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Another Link</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-end="camera-flash-on"
        >Another link that might wrap to another line</calcite-dropdown-item
      >
      <calcite-dropdown-item onclick='alert("not a link")'>Not a link</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`};AMixOfLinksAndNonLinks.storyName="A mix of links and non-links";var DarkTheme=function(){return tests_utils.a`
  <calcite-dropdown
    active
    class="calcite-theme-dark"
    placement="${Object(dist.select)("placement",placements,"bottom-leading")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("disable-close-on-select",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","multi","none"],"single")}"
      group-title="Sort by"
    >
      <calcite-dropdown-item>Relevance</calcite-dropdown-item>
      <calcite-dropdown-item active>Date modified</calcite-dropdown-item>
      <calcite-dropdown-item>Title</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`};DarkTheme.storyName="Dark theme",DarkTheme.parameters={themes:utils.f};var WithIconsDarkTheme=function(){return tests_utils.a`
  <calcite-dropdown
    active
    class="calcite-theme-dark"
    placement="${Object(dist.select)("placement",placements,"bottom-leading")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("disable-close-on-select",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","multi","none"],"single")}"
      group-title="Icon Start"
    >
      <calcite-dropdown-item icon-start="list">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="grid" active>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="table">Table</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","multi","none"],"single")}"
      group-title="Icon End"
    >
      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="grid" active>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","multi","none"],"single")}"
      group-title="Icon Both"
    >
      <calcite-dropdown-item icon-start="list" icon-end="data-check">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="grid" icon-end="data-check" active>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="table" icon-end="data-check">Table</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`};WithIconsDarkTheme.storyName="With Icons - Dark theme",WithIconsDarkTheme.parameters={themes:utils.f};var GroupsAndSelectionModesDarkTheme=function(){return tests_utils.a`
  <calcite-dropdown
    active
    class="calcite-theme-dark"
    placement="${Object(dist.select)("placement",placements,"bottom-leading")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("disable-close-on-select",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group group-title="Select one">
      <calcite-dropdown-item>Apple</calcite-dropdown-item>
      <calcite-dropdown-item active>Orange</calcite-dropdown-item>
      <calcite-dropdown-item>Grape</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Select multi" selection-mode="multi">
      <calcite-dropdown-item>Asparagus</calcite-dropdown-item>
      <calcite-dropdown-item active>Potato</calcite-dropdown-item>
      <calcite-dropdown-item active>Yam</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Select none (useful for actions)" selection-mode="none">
      <calcite-dropdown-item>Plant beans</calcite-dropdown-item>
      <calcite-dropdown-item>Add peas</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`};GroupsAndSelectionModesDarkTheme.storyName="Groups and selection modes dark theme",GroupsAndSelectionModesDarkTheme.parameters={themes:utils.f};var ItemsAsLinksDarkTheme=function(){return tests_utils.a`
  <calcite-dropdown
    active
    class="calcite-theme-dark"
    placement="${Object(dist.select)("placement",placements,"bottom-leading")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("disable-close-on-select",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group selection-mode="none" group-title="Select one">
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Throw Apples</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Visit Oranges</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Eat Grapes</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-start="camera-flash-on"
        >Plant beans</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-end="camera-flash-on"
        >Add peas</calcite-dropdown-item
      >
    </calcite-dropdown-group>
  </calcite-dropdown>
`};ItemsAsLinksDarkTheme.storyName="Items as Links - dark theme",ItemsAsLinksDarkTheme.parameters={themes:utils.f};var SimpleRtl=function(){return tests_utils.a`
  <calcite-dropdown
    active
    dir="rtl"
    placement="${Object(dist.select)("placement",placements,"bottom-leading")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("disable-close-on-select",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","multi","none"],"single")}"
      group-title="Sort by"
    >
      <calcite-dropdown-item>Relevance</calcite-dropdown-item>
      <calcite-dropdown-item active>Date modified</calcite-dropdown-item>
      <calcite-dropdown-item>Title</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`};SimpleRtl.storyName="Simple - RTL";var ScrollingAfterCertainItems=function(){return tests_utils.a`
  <calcite-dropdown
    active
    placement="${Object(dist.select)("placement",placements,"bottom-leading")}"
    max-items="${Object(dist.number)("max-items",7,{min:0,max:10,step:1})}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("disable-close-on-select",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group group-title="First group">
      <calcite-dropdown-item>1</calcite-dropdown-item>
      <calcite-dropdown-item>2</calcite-dropdown-item>
      <calcite-dropdown-item>3</calcite-dropdown-item>
      <calcite-dropdown-item>4</calcite-dropdown-item>
      <calcite-dropdown-item>5</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Second group">
      <calcite-dropdown-item>6</calcite-dropdown-item>
      <calcite-dropdown-item>7</calcite-dropdown-item>
      <calcite-dropdown-item>8</calcite-dropdown-item>
      <calcite-dropdown-item>9</calcite-dropdown-item>
      <calcite-dropdown-item>10</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`};ScrollingAfterCertainItems.storyName="Scrolling after certain items";var FlipPositioning=Object(helpers.f)((function(){return tests_utils.a`
    <div style="margin:10px;">
      <calcite-dropdown placement="${Object(dist.select)("placement",placements,"top")}">
        <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>
        <calcite-dropdown-item>1</calcite-dropdown-item>
        <calcite-dropdown-item>2</calcite-dropdown-item>
        <calcite-dropdown-item>3</calcite-dropdown-item>
        <calcite-dropdown-item>4</calcite-dropdown-item>
        <calcite-dropdown-item>5</calcite-dropdown-item>
      </calcite-dropdown>
    </div>
  `}),Object(helpers.b)("calcite-dropdown").snapshot("Default").click("calcite-button").snapshot("Open"));FlipPositioning.parameters={layout:"fullscreen"},Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    active\n    placement="${select("placement", placements, DefaultDropdownPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("disable-close-on-select", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "multi", "none"], "single")}"\n      group-title="Sort by"\n    >\n      <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n      <calcite-dropdown-item active>Date modified</calcite-dropdown-item>\n      <calcite-dropdown-item>Title</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},Simple.parameters),WithIcons.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    active\n    placement="${select("placement", placements, DefaultDropdownPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("disable-close-on-select", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "multi", "none"], "single")}"\n      group-title="Icon Start"\n    >\n      <calcite-dropdown-item icon-start="list">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="grid" active>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="table">Table</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "multi", "none"], "single")}"\n      group-title="Icon End"\n    >\n      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="grid" active>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "multi", "none"], "single")}"\n      group-title="Icon Both"\n    >\n      <calcite-dropdown-item icon-start="list" icon-end="data-check">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="grid" icon-end="data-check" active>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="table" icon-end="data-check">Table</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},WithIcons.parameters),GroupsAndSelectionModes.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    active\n    placement="${select("placement", placements, DefaultDropdownPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("disable-close-on-select", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group group-title="Select one">\n      <calcite-dropdown-item>Apple</calcite-dropdown-item>\n      <calcite-dropdown-item active>Orange</calcite-dropdown-item>\n      <calcite-dropdown-item>Grape</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Select multi" selection-mode="multi">\n      <calcite-dropdown-item>Asparagus</calcite-dropdown-item>\n      <calcite-dropdown-item active>Potato</calcite-dropdown-item>\n      <calcite-dropdown-item active>Yam</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Select none (useful for actions)" selection-mode="none">\n      <calcite-dropdown-item>Plant beans</calcite-dropdown-item>\n      <calcite-dropdown-item>Add peas</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},GroupsAndSelectionModes.parameters),ItemsAsLinks.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    active\n    placement="${select("placement", placements, DefaultDropdownPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("disable-close-on-select", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group selection-mode="none" group-title="Select one">\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Throw Apples</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Visit Oranges</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Eat Grapes</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-start="camera-flash-on"\n        >Plant beans</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-end="camera-flash-on"\n        >Add peas</calcite-dropdown-item\n      >\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},ItemsAsLinks.parameters),AMixOfLinksAndNonLinks.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    active\n    placement="${select("placement", placements, DefaultDropdownPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("disable-close-on-select", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group selection-mode="none" group-title="Select one">\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title">A link</calcite-dropdown-item>\n      <calcite-dropdown-item onclick=\'alert("not a link")\'>Not a link</calcite-dropdown-item>\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Another Link</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-end="camera-flash-on"\n        >Another link that might wrap to another line</calcite-dropdown-item\n      >\n      <calcite-dropdown-item onclick=\'alert("not a link")\'>Not a link</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},AMixOfLinksAndNonLinks.parameters),DarkTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    active\n    class="calcite-theme-dark"\n    placement="${select("placement", placements, DefaultDropdownPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("disable-close-on-select", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "multi", "none"], "single")}"\n      group-title="Sort by"\n    >\n      <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n      <calcite-dropdown-item active>Date modified</calcite-dropdown-item>\n      <calcite-dropdown-item>Title</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},DarkTheme.parameters),WithIconsDarkTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    active\n    class="calcite-theme-dark"\n    placement="${select("placement", placements, DefaultDropdownPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("disable-close-on-select", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "multi", "none"], "single")}"\n      group-title="Icon Start"\n    >\n      <calcite-dropdown-item icon-start="list">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="grid" active>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="table">Table</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "multi", "none"], "single")}"\n      group-title="Icon End"\n    >\n      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="grid" active>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "multi", "none"], "single")}"\n      group-title="Icon Both"\n    >\n      <calcite-dropdown-item icon-start="list" icon-end="data-check">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="grid" icon-end="data-check" active>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="table" icon-end="data-check">Table</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},WithIconsDarkTheme.parameters),GroupsAndSelectionModesDarkTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    active\n    class="calcite-theme-dark"\n    placement="${select("placement", placements, DefaultDropdownPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("disable-close-on-select", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group group-title="Select one">\n      <calcite-dropdown-item>Apple</calcite-dropdown-item>\n      <calcite-dropdown-item active>Orange</calcite-dropdown-item>\n      <calcite-dropdown-item>Grape</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Select multi" selection-mode="multi">\n      <calcite-dropdown-item>Asparagus</calcite-dropdown-item>\n      <calcite-dropdown-item active>Potato</calcite-dropdown-item>\n      <calcite-dropdown-item active>Yam</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Select none (useful for actions)" selection-mode="none">\n      <calcite-dropdown-item>Plant beans</calcite-dropdown-item>\n      <calcite-dropdown-item>Add peas</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},GroupsAndSelectionModesDarkTheme.parameters),ItemsAsLinksDarkTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    active\n    class="calcite-theme-dark"\n    placement="${select("placement", placements, DefaultDropdownPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("disable-close-on-select", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group selection-mode="none" group-title="Select one">\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Throw Apples</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Visit Oranges</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Eat Grapes</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-start="camera-flash-on"\n        >Plant beans</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-end="camera-flash-on"\n        >Add peas</calcite-dropdown-item\n      >\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},ItemsAsLinksDarkTheme.parameters),SimpleRtl.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    active\n    dir="rtl"\n    placement="${select("placement", placements, DefaultDropdownPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("disable-close-on-select", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "multi", "none"], "single")}"\n      group-title="Sort by"\n    >\n      <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n      <calcite-dropdown-item active>Date modified</calcite-dropdown-item>\n      <calcite-dropdown-item>Title</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},SimpleRtl.parameters),ScrollingAfterCertainItems.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    active\n    placement="${select("placement", placements, DefaultDropdownPlacement)}"\n    max-items="${number("max-items", 7, { min: 0, max: 10, step: 1 })}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("disable-close-on-select", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group group-title="First group">\n      <calcite-dropdown-item>1</calcite-dropdown-item>\n      <calcite-dropdown-item>2</calcite-dropdown-item>\n      <calcite-dropdown-item>3</calcite-dropdown-item>\n      <calcite-dropdown-item>4</calcite-dropdown-item>\n      <calcite-dropdown-item>5</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Second group">\n      <calcite-dropdown-item>6</calcite-dropdown-item>\n      <calcite-dropdown-item>7</calcite-dropdown-item>\n      <calcite-dropdown-item>8</calcite-dropdown-item>\n      <calcite-dropdown-item>9</calcite-dropdown-item>\n      <calcite-dropdown-item>10</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},ScrollingAfterCertainItems.parameters),FlipPositioning.parameters=Object.assign({storySource:{source:'stepStory(\n  (): string => html`\n    <div style="margin:10px;">\n      <calcite-dropdown placement="${select("placement", placements, "top")}">\n        <calcite-button slot="dropdown-trigger">Open Dropdown</calcite-button>\n        <calcite-dropdown-item>1</calcite-dropdown-item>\n        <calcite-dropdown-item>2</calcite-dropdown-item>\n        <calcite-dropdown-item>3</calcite-dropdown-item>\n        <calcite-dropdown-item>4</calcite-dropdown-item>\n        <calcite-dropdown-item>5</calcite-dropdown-item>\n      </calcite-dropdown>\n    </div>\n  `,\n  createSteps("calcite-dropdown").snapshot("Default").click("calcite-button").snapshot("Open")\n)'}},FlipPositioning.parameters)},"./src/components/fab/fab.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"darkThemeRTL",(function(){return darkThemeRTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),resources=__webpack_require__("./.storybook/resources.ts"),ICONS_plus="plus",scale=resources.a.scale,createAttributes=(__webpack_exports__.default={title:"Components/Buttons/FAB",parameters:{notes:'# calcite-fab\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nRenders a `calcite-fab` that displays only an icon and a tooltip label.\n\n```html\n<calcite-fab label="Performs my custom action"></calcite-fab>\n```\n\n### Loading-and-disabled\n\nRenders a `calcite-fab` that is loading and disabled.\n\n```html\n<calcite-fab loading disabled></calcite-fab>\n```\n\n### With-text\n\nRenders a `calcite-fab` that displays text along side an icon and a tooltip label.\n\n```html\n<calcite-fab label="Performs my custom action" text="Perform Action!" text-enabled></calcite-fab>\n```\n\n## Properties\n\n| Property      | Attribute      | Description                                                                                                                                    | Type                                        | Default      |\n| ------------- | -------------- | ---------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------- | ------------ |\n| `appearance`  | `appearance`   | Used to set the button\'s appearance. Default is outline.                                                                                       | `"outline" \\| "solid"`                      | `"outline"`  |\n| `color`       | `color`        | Used to set the button\'s color. Default is light.                                                                                              | `"blue" \\| "inverse" \\| "neutral" \\| "red"` | `"neutral"`  |\n| `disabled`    | `disabled`     | When true, disabled prevents interaction. This state shows items with lower opacity/grayed.                                                    | `boolean`                                   | `false`      |\n| `icon`        | `icon`         | The name of the icon to display. The value of this property must match the icon name from https://esri.github.io/calcite-ui-icons/.            | `string`                                    | `ICONS.plus` |\n| `label`       | `label`        | Label of the FAB, exposed on hover when textEnabled is false. If no label is provided, the label inherits what\'s provided for the `text` prop. | `string`                                    | `undefined`  |\n| `loading`     | `loading`      | When true, content is waiting to be loaded. This state shows a busy indicator.                                                                 | `boolean`                                   | `false`      |\n| `scale`       | `scale`        | Specifies the size of the fab.                                                                                                                 | `"l" \\| "m" \\| "s"`                         | `"m"`        |\n| `text`        | `text`         | Text that accompanies the FAB icon.                                                                                                            | `string`                                    | `undefined`  |\n| `textEnabled` | `text-enabled` | Indicates whether the text is displayed.                                                                                                       | `boolean`                                   | `false`      |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Dependencies\n\n### Depends on\n\n- [calcite-button](../button)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-fab --\x3e calcite-button\n  calcite-button --\x3e calcite-loader\n  calcite-button --\x3e calcite-icon\n  style calcite-fab fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"appearance",commit:function(){return this.value=Object(dist.select)("appearance",["solid","outline"],"outline"),delete this.build,this}},{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1),delete this.build,this}},{name:"icon",commit:function(){return this.value=Object(dist.text)("icon",ICONS_plus),delete this.build,this}},{name:"label",commit:function(){return this.value=Object(dist.text)("label","Label"),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1),delete this.build,this}},{name:"text",commit:function(){return this.value=Object(dist.text)("text","Text"),delete this.build,this}},{name:"text-enabled",commit:function(){return this.value=Object(dist.boolean)("text-enabled",!0),delete this.build,this}},{name:"scale",commit:function(){return this.value=Object(dist.select)("scale",scale.values,scale.defaultValue),delete this.build,this}}],exceptions)}),basic=function(){return Object(utils.a)("calcite-fab",createAttributes())},darkThemeRTL=function(){return Object(utils.a)("calcite-fab",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-theme-dark"}]))};darkThemeRTL.parameters={themes:utils.f},basic.parameters=Object.assign({storySource:{source:'(): string => create("calcite-fab", createAttributes())'}},basic.parameters),darkThemeRTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-fab",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-theme-dark"\n      }\n    ])\n  )'}},darkThemeRTL.parameters)},"./src/components/flow/flow.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),panel_readme=__webpack_require__("./src/components/panel/readme.md"),resources=__webpack_require__("./src/components/panel/resources.ts"),tests_utils=__webpack_require__("./src/tests/utils.ts"),createAttributes=(__webpack_exports__.default={title:"Components/Flow",parameters:{notes:{flow:'# calcite-flow\n\nThe `calcite-flow` component is a series of panels that provides a user with a workflow (eg. editing experience), by which the user can switch from panel to panel of `calcite-panel`s.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nRenders a basic flow with a couple `calcite-panel`s.\n\n```html\n<calcite-flow>\n  <calcite-panel heading="one, two, three, four">\n    \x3c!-- image --\x3e\n  </calcite-panel>\n  <calcite-panel heading="tell me that you love me more">\n    \x3c!-- image --\x3e\n  </calcite-panel>\n</calcite-flow>\n```\n\n### Menu-actions-and-footer-actions\n\nRenders a flow with menu-actions and footer-actions in the form of buttons.\n\n```html\n<calcite-flow>\n  <calcite-panel heading="What are the most popular commute alternatives?">\n    <button slot="header-menu-actions">Reset</button>\n    <button slot="header-menu-actions">Rename</button>\n    <button slot="footer-actions">Save</button>\n    <button slot="footer-actions">Cancel</button>\n  </calcite-panel>\n</calcite-flow>\n```\n\n## Methods\n\n### `back() => Promise<HTMLCalcitePanelElement>`\n\nRemoves the currently active `calcite-panel`.\n\n#### Returns\n\nType: `Promise<any>`\n\n## Slots\n\n| Slot | Description                                     |\n| ---- | ----------------------------------------------- |\n|      | A slot for adding `calcite-panel`s to the flow. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n',item:panel_readme.a}}},function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([],exceptions)}),createFlowItemAttributes=function(group){return[{name:"disabled",value:Object(dist.boolean)("disabled",!1,group)},{name:"heading",value:Object(dist.text)("heading","Heading",group)},{name:"loading",value:Object(dist.boolean)("loading",!1,group)},{name:"menu-open",value:Object(dist.boolean)("menuOpen",!1,group)},{name:"summary",value:Object(dist.text)("summary","Summary",group)},{name:"intl-back",value:Object(dist.text)("intlBack",resources.b.back,group)},{name:"intl-open",value:Object(dist.text)("intlOpen",resources.b.open,group)},{name:"intl-close",value:Object(dist.text)("intlClose",resources.b.close,group)}]},menuActionsHTML=tests_utils.a`
  <calcite-action
    slot="${resources.a.headerMenuActions}"
    text-enabled
    text="Add"
    label="Add Item"
    icon="plus"
  ></calcite-action>
  <calcite-action
    slot="${resources.a.headerMenuActions}"
    text-enabled
    text="Save"
    label="Save Item"
    icon="save"
  ></calcite-action>
  <calcite-action
    slot="${resources.a.headerMenuActions}"
    text-enabled
    text="Layers"
    label="View Layers"
    icon="layers"
  ></calcite-action>
`,footerActionsHTML=tests_utils.a`
  <calcite-button slot="${resources.a.footerActions}" width="half" appearance="clear">Cancel</calcite-button>
  <calcite-button slot="${resources.a.footerActions}" width="half">Save</button>
`;function createItemHTML(content){return`${menuActionsHTML}${content}${footerActionsHTML}`}var item1HTML=tests_utils.a`
  <p>
    Enim nascetur erat faucibus ornare varius arcu fames bibendum habitant felis elit ante. Nibh morbi massa curae; leo
    semper diam aenean congue taciti eu porta. Varius faucibus ridiculus donec. Montes sit ligula purus porta ante lacus
    habitasse libero cubilia purus! In quis congue arcu maecenas felis cursus pellentesque nascetur porta donec non.
    Quisque, rutrum ligula pharetra justo habitasse facilisis rutrum neque. Magnis nostra nec nulla dictumst taciti
    consectetur. Non porttitor tempor orci dictumst magna porta vitae.
  </p>
  <p>
    Ipsum nostra tempus etiam augue ullamcorper scelerisque sapien potenti erat nisi gravida. Vehicula sem tristique
    sed. Nullam, sociis imperdiet ullamcorper? Dapibus fames primis ridiculus vulputate, habitant inceptos! Nunc
    torquent lorem urna vehicula volutpat donec nec. Orci massa eu nec donec enim fames, faucibus quam aenean. Laoreet
    tellus tempor quisque ornare lobortis praesent erat senectus natoque consectetur donec imperdiet. Quis sem cum
    gravida dictumst a pretium purus aptent amet id. Orci habitasse, praesent facilisis condimentum. Nec elit turpis
    leo.
  </p>
  <p>
    Tempus per volutpat diam tempor mauris parturient vulputate leo id libero quisque. Mattis aliquam dictum venenatis
    fringilla. Taciti venenatis, ultrices sollicitudin consequat. Sapien fusce est iaculis potenti ut auctor potenti.
    Nisi malesuada feugiat vulputate vitae porttitor. Nullam nullam nullam accumsan quis magna in. Elementum, nascetur
    gravida cras scelerisque inceptos aenean inceptos potenti. Lobortis condimentum accumsan posuere curabitur fermentum
    diam, natoque quisque. Eget placerat sed aptent orci urna fusce magnis. Vel lacus magnis nunc.
  </p>
  <p>
    Magna ligula neque phasellus. Velit duis auctor etiam nullam sociis nam neque quis. Donec fusce bibendum quam
    egestas sociosqu orci tempus vulputate egestas penatibus urna sociosqu. Nulla nam potenti diam egestas litora
    lobortis tristique maecenas pulvinar maecenas vitae tortor. Lacus purus facilisi est accumsan varius gravida
    facilisis rutrum tortor potenti rhoncus id. Ipsum praesent tristique blandit taciti morbi torquent pharetra
    fermentum aenean!
  </p>
  <p>
    Congue eu duis integer nisl molestie nostra dis auctor lobortis tellus parturient. Porttitor dis curae; maecenas
    quis praesent ridiculus posuere mus. Dictumst, vivamus fames semper congue fusce! Nunc placerat enim fermentum
    posuere magna justo habitasse. Tristique placerat mauris, per nulla gravida dui urna ut nec venenatis! Non lacus
    iaculis quisque, neque erat integer. Duis tortor ad habitant turpis dis eu mollis at facilisis. Tellus nisl amet
    morbi fringilla mus dui neque himenaeos maecenas platea venenatis. Tristique nisl quisque ad aliquam senectus
    pulvinar litora.
  </p>
`,item2HTML=tests_utils.a`
  <ul>
    <li>
      Morbi in sem quis dui placerat ornare. Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed
      arcu. Cras consequat.
    </li>
    <li>
      Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam
      erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus.
    </li>
    <li>
      Phasellus ultrices nulla quis nibh. Quisque a lectus. Donec consectetuer ligula vulputate sem tristique cursus.
      Nam nulla quam, gravida non, commodo a, sodales sit amet, nisi.
    </li>
    <li>
      Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.
    </li>
  </ul>
`,basic=function(){return Object(utils.a)("calcite-flow",createAttributes(),`${Object(utils.a)("calcite-panel",createFlowItemAttributes("Panel 1"),createItemHTML(item1HTML))}\n    ${Object(utils.a)("calcite-panel",createFlowItemAttributes("Panel 2"),createItemHTML(item2HTML))}`)},RTL=function(){return Object(utils.a)("calcite-flow",createAttributes({exceptions:["dir"]}).concat({name:"dir",value:"rtl"}),`${Object(utils.a)("calcite-panel",createFlowItemAttributes("Panel 1"),createItemHTML(item1HTML))}\n    ${Object(utils.a)("calcite-panel",createFlowItemAttributes("Panel 2"),createItemHTML(item2HTML))}`)};basic.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-flow",\n    createAttributes(),\n    `${create("calcite-panel", createFlowItemAttributes("Panel 1"), createItemHTML(item1HTML))}\n    ${create("calcite-panel", createFlowItemAttributes("Panel 2"), createItemHTML(item2HTML))}`\n  )'}},basic.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-flow",\n    createAttributes({ exceptions: ["dir"] }).concat({ name: "dir", value: "rtl" }),\n    `${create("calcite-panel", createFlowItemAttributes("Panel 1"), createItemHTML(item1HTML))}\n    ${create("calcite-panel", createFlowItemAttributes("Panel 2"), createItemHTML(item2HTML))}`\n  )'}},RTL.parameters)},"./src/components/icon/icon.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL})),__webpack_require__.d(__webpack_exports__,"darkMode",(function(){return darkMode}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),sampleIcon=(__webpack_exports__.default={title:"Components/Icon",parameters:{notes:'# calcite-icon\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Custom-icon-color\n\nTo use a custom color for the icon fill, you can add a class to the `calcite-icon` component with the desired color.\n\n```html\n<calcite-icon class="my-icon-color-class" icon="arrowBoldLeft"></calcite-icon>\n```\n\n```css\n.my-icon-color-class {\n  color: #007ac2;\n}\n```\n\n## Properties\n\n| Property    | Attribute    | Description                                                                                                                         | Type                | Default     |\n| ----------- | ------------ | ----------------------------------------------------------------------------------------------------------------------------------- | ------------------- | ----------- |\n| `flipRtl`   | `flip-rtl`   | When true, the icon will be flipped when the element direction is \'rtl\'.                                                            | `boolean`           | `false`     |\n| `icon`      | `icon`       | The name of the icon to display. The value of this property must match the icon name from https://esri.github.io/calcite-ui-icons/. | `string`            | `null`      |\n| `scale`     | `scale`      | Icon scale.                                                                                                                         | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `textLabel` | `text-label` | The icon label. It is recommended to set this value if your icon is semantic.                                                       | `string`            | `undefined` |\n\n## CSS Custom Properties\n\n| Name                      | Description                                        |\n| ------------------------- | -------------------------------------------------- |\n| `--calcite-ui-icon-color` | the color of the icon. Defaults to \'currentColor\'. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-accordion-item](../accordion-item)\n- [calcite-action](../action)\n- [calcite-alert](../alert)\n- [calcite-avatar](../avatar)\n- [calcite-block](../block)\n- [calcite-block-section](../block-section)\n- [calcite-button](../button)\n- [calcite-chip](../chip)\n- [calcite-combobox](../combobox)\n- [calcite-combobox-item](../combobox-item)\n- [calcite-date-picker-month-header](../date-picker-month-header)\n- [calcite-dropdown-item](../dropdown-item)\n- [calcite-filter](../filter)\n- [calcite-handle](../handle)\n- [calcite-input](../input)\n- [calcite-input-date-picker](../input-date-picker)\n- [calcite-input-message](../input-message)\n- [calcite-link](../link)\n- [calcite-modal](../modal)\n- [calcite-notice](../notice)\n- [calcite-pagination](../pagination)\n- [calcite-pick-list-item](../pick-list-item)\n- [calcite-popover](../popover)\n- [calcite-radio-group-item](../radio-group-item)\n- [calcite-rating](../rating)\n- [calcite-select](../select)\n- [calcite-stepper-item](../stepper-item)\n- [calcite-tab-title](../tab-title)\n- [calcite-tile](../tile)\n- [calcite-time-picker](../time-picker)\n- [calcite-tip-manager](../tip-manager)\n- [calcite-tree-item](../tree-item)\n- [calcite-value-list-item](../value-list-item)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-accordion-item --\x3e calcite-icon\n  calcite-action --\x3e calcite-icon\n  calcite-alert --\x3e calcite-icon\n  calcite-avatar --\x3e calcite-icon\n  calcite-block --\x3e calcite-icon\n  calcite-block-section --\x3e calcite-icon\n  calcite-button --\x3e calcite-icon\n  calcite-chip --\x3e calcite-icon\n  calcite-combobox --\x3e calcite-icon\n  calcite-combobox-item --\x3e calcite-icon\n  calcite-date-picker-month-header --\x3e calcite-icon\n  calcite-dropdown-item --\x3e calcite-icon\n  calcite-filter --\x3e calcite-icon\n  calcite-handle --\x3e calcite-icon\n  calcite-input --\x3e calcite-icon\n  calcite-input-date-picker --\x3e calcite-icon\n  calcite-input-message --\x3e calcite-icon\n  calcite-link --\x3e calcite-icon\n  calcite-modal --\x3e calcite-icon\n  calcite-notice --\x3e calcite-icon\n  calcite-pagination --\x3e calcite-icon\n  calcite-pick-list-item --\x3e calcite-icon\n  calcite-popover --\x3e calcite-icon\n  calcite-radio-group-item --\x3e calcite-icon\n  calcite-rating --\x3e calcite-icon\n  calcite-select --\x3e calcite-icon\n  calcite-stepper-item --\x3e calcite-icon\n  calcite-tab-title --\x3e calcite-icon\n  calcite-tile --\x3e calcite-icon\n  calcite-time-picker --\x3e calcite-icon\n  calcite-tip-manager --\x3e calcite-icon\n  calcite-tree-item --\x3e calcite-icon\n  calcite-value-list-item --\x3e calcite-icon\n  style calcite-icon fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},helpers.c.find((function(item){return"arrowRight"===item}))),simple=function(){return tests_utils.a`
  <calcite-icon
    icon="${Object(dist.select)("icon",helpers.c,sampleIcon)}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  ></calcite-icon>
`},RTL=function(){return tests_utils.a`
  <calcite-icon dir="rtl" icon="${Object(dist.select)("icon",helpers.c,sampleIcon)}" ${Object(helpers.a)("flip-rtl",!0)}></calcite-icon>
`},darkMode=function(){return tests_utils.a`
  <style>
    :root {
      /* icon svg inherits the current font color */
      color: var(--calcite-ui-warning);
    }
  </style>
  <calcite-icon icon="${Object(dist.select)("icon",helpers.c,sampleIcon)}" class="calcite-theme-dark"></calcite-icon>
`};darkMode.parameters={themes:utils.f},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-icon\n    icon="${select("icon", iconNames, sampleIcon)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-icon>\n`'}},simple.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-icon dir="rtl" icon="${select("icon", iconNames, sampleIcon)}" ${boolean("flip-rtl", true)}></calcite-icon>\n`'}},RTL.parameters),darkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      /* icon svg inherits the current font color */\n      color: var(--calcite-ui-warning);\n    }\n  </style>\n  <calcite-icon icon="${select("icon", iconNames, sampleIcon)}" class="calcite-theme-dark"></calcite-icon>\n`'}},darkMode.parameters)},"./src/components/inline-editable/inline-editable.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"WithLabel",(function(){return WithLabel})),__webpack_require__.d(__webpack_exports__,"WithoutLabel",(function(){return WithoutLabel})),__webpack_require__.d(__webpack_exports__,"WithoutLabelRTL",(function(){return WithoutLabelRTL})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),WithLabel=(__webpack_exports__.default={title:"Components/Controls/Inline Editable",parameters:{notes:'# calcite-inline-editable\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nThere is no need to set a theme or scale on the `<calcite-inline-editable>` component, as it inherits these values from the wrapped `<calcite-input>`, or the closest parent component where these props are set.\n\n```html\n<calcite-inline-editable>\n  <calcite-input value="Entered value" placeholder="My placeholder"></calcite-input>\n</calcite-inline-editable>\n```\n\n### With-label\n\n```html\n<calcite-label>\n  My great label\n  <calcite-inline-editable controls>\n    <calcite-input value="Entered value" placeholder="My placeholder"></calcite-input>\n  </calcite-inline-editable>\n</calcite-label>\n```\n\n### With-save-and-cancel-controls\n\n```html\n<calcite-inline-editable controls>\n  <calcite-input value="Entered value" placeholder="My placeholder"></calcite-input>\n</calcite-inline-editable>\n```\n\n## Properties\n\n| Property             | Attribute              | Description                                                                                                                                                            | Type                  | Default                    |\n| -------------------- | ---------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------- | -------------------------- |\n| `afterConfirm`       | --                     | when controls, specify a callback to be executed prior to disabling editing. when provided, loading state will be handled automatically.                               | `() => Promise<void>` | `undefined`                |\n| `controls`           | `controls`             | specify whether save/cancel controls should be displayed when editingEnabled is true, defaults to false                                                                | `boolean`             | `false`                    |\n| `disabled`           | `disabled`             | specify whether editing can be enabled                                                                                                                                 | `boolean`             | `false`                    |\n| `editingEnabled`     | `editing-enabled`      | specify whether the wrapped input element is editable, defaults to false                                                                                               | `boolean`             | `false`                    |\n| `intlCancelEditing`  | `intl-cancel-editing`  | specify text to be user for the cancel editing button\'s aria-label, defaults to `Cancel`                                                                               | `string`              | `TEXT.intlCancelEditing`   |\n| `intlConfirmChanges` | `intl-confirm-changes` | specify text to be user for the confirm changes button\'s aria-label, defaults to `Save`                                                                                | `string`              | `TEXT.intlConfirmChanges`  |\n| `intlEnableEditing`  | `intl-enable-editing`  | specify text to be user for the enable editing button\'s aria-label, defaults to `Click to edit`                                                                        | `string`              | `TEXT.intlEnablingEditing` |\n| `loading`            | `loading`              | specify whether the confirm button should display a loading state, defaults to false                                                                                   | `boolean`             | `false`                    |\n| `scale`              | `scale`                | specify the scale of the inline-editable component, defaults to the scale of the wrapped calcite-input or the scale of the closest wrapping component with a set scale | `"l" \\| "m" \\| "s"`   | `undefined`                |\n\n## Events\n\n| Event                              | Description                                  | Type                |\n| ---------------------------------- | -------------------------------------------- | ------------------- |\n| `calciteInlineEditableEditCancel`  | Emitted when the cancel button gets clicked. | `CustomEvent<void>` |\n| `calciteInlineEditableEditConfirm` | Emitted when the check button gets clicked.  | `CustomEvent<void>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description                          |\n| ---- | ------------------------------------ |\n|      | A slot for adding a `calcite-input`. |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-button](../button)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-inline-editable --\x3e calcite-button\n  calcite-button --\x3e calcite-loader\n  calcite-button --\x3e calcite-icon\n  style calcite-inline-editable fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;">
    <calcite-label
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle","Label")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m","Label")}"
      layout="${Object(dist.select)("layout",["default","inline","inline-space-between"],"default","Label")}"
    >
      ${Object(dist.text)("label text","My great label","Label")}
      <calcite-inline-editable
        ${Object(dist.boolean)("controls",!1,"InlineEditable")&&"controls"}
        ${Object(dist.boolean)("editing-enabled",!1,"InlineEditable")&&"editing-enabled"}
        ${Object(dist.boolean)("loading",!1,"InlineEditable")&&"loading"}
        ${Object(dist.boolean)("disabled",!1,"InlineEditable")&&"disabled"}
        intl-cancel-editing="${Object(dist.text)("intl-cancel-editing","Cancelar","InlineEditable")}"
        intl-enable-editing="${Object(dist.text)("intl-enable-editing","Haga clic para editar","InlineEditable")}"
        intl-confirm-changes="${Object(dist.text)("intl-confirm-changes","Guardar","InlineEditable")}"
      >
        <calcite-input
          alignment="${Object(dist.select)("alignment",["start","end"],"start","Input")}"
          placeholder="${Object(dist.text)("placeholder","Placeholder text","Input")}"
        >
        </calcite-input>
      </calcite-inline-editable>
      <calcite-input-message
        ${Object(dist.boolean)("active",!1,"InputMessage")&&"active"}
        ${Object(dist.boolean)("icon",!1,"InputMessage")&&"icon"}
        status="${Object(dist.select)("status",["idle","valid","invalid"],"idle","InputMessage")}"
      >
        ${Object(dist.text)("text","My great input message","InputMessage")}
      </calcite-input-message>
    </calcite-label>
  </div>
`});WithLabel.storyName="With label";var WithoutLabel=function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;">
    <calcite-inline-editable
      scale="${Object(dist.select)("scale",["s","m","l"],"m","InlineEditable")}"
      ${Object(dist.boolean)("controls",!1,"InlineEditable")&&"controls"}
      ${Object(dist.boolean)("editing-enabled",!1,"InlineEditable")&&"editing-enabled"}
      ${Object(dist.boolean)("loading",!1,"InlineEditable")&&"loading"}
      ${Object(dist.boolean)("disabled",!1,"InlineEditable")&&"disabled"}
      intl-cancel-editing="${Object(dist.text)("intl-cancel-editing","Cancelar","InlineEditable")}"
      intl-enable-editing="${Object(dist.text)("intl-enable-editing","Haga clic para editar","InlineEditable")}"
      intl-confirm-changes="${Object(dist.text)("intl-confirm-changes","Guardar","InlineEditable")}"
    >
      <calcite-input
        alignment="${Object(dist.select)("alignment",["start","end"],"start","Input")}"
        placeholder="${Object(dist.text)("placeholder","Placeholder text","Input")}"
      >
      </calcite-input>
    </calcite-inline-editable>
  </div>
`},WithoutLabelRTL=function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;" dir="rtl">
    <calcite-inline-editable
      scale="${Object(dist.select)("scale",["s","m","l"],"m","InlineEditable")}"
      ${Object(dist.boolean)("controls",!1,"InlineEditable")&&"controls"}
      ${Object(dist.boolean)("editing-enabled",!1,"InlineEditable")&&"editing-enabled"}
      ${Object(dist.boolean)("loading",!1,"InlineEditable")&&"loading"}
      ${Object(dist.boolean)("disabled",!1,"InlineEditable")&&"disabled"}
      intl-cancel-editing="${Object(dist.text)("intl-cancel-editing","Cancelar","InlineEditable")}"
      intl-enable-editing="${Object(dist.text)("intl-enable-editing","Haga clic para editar","InlineEditable")}"
      intl-confirm-changes="${Object(dist.text)("intl-confirm-changes","Guardar","InlineEditable")}"
    >
      <calcite-input
        alignment="${Object(dist.select)("alignment",["start","end"],"start","Input")}"
        placeholder="${Object(dist.text)("placeholder","Placeholder text","Input")}"
      >
      </calcite-input>
    </calcite-inline-editable>
  </div>
`},DarkMode=function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;">
    <calcite-label
      class="calcite-theme-dark"
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle","Label")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m","Label")}"
      layout="${Object(dist.select)("layout",["default","inline","inline-space-between"],"default","Label")}"
    >
      ${Object(dist.text)("label text","My great label","Label")}
      <calcite-inline-editable
        ${Object(dist.boolean)("controls",!1,"InlineEditable")&&"controls"}
        ${Object(dist.boolean)("editing-enabled",!1,"InlineEditable")&&"editing-enabled"}
        ${Object(dist.boolean)("loading",!1,"InlineEditable")&&"loading"}
        ${Object(dist.boolean)("disabled",!1,"InlineEditable")&&"disabled"}
        intl-cancel-editing="${Object(dist.text)("intl-cancel-editing","Cancelar","InlineEditable")}"
        intl-enable-editing="${Object(dist.text)("intl-enable-editing","Haga clic para editar","InlineEditable")}"
        intl-confirm-changes="${Object(dist.text)("intl-confirm-changes","Guardar","InlineEditable")}"
      >
        <calcite-input
          alignment="${Object(dist.select)("alignment",["start","end"],"start","Input")}"
          placeholder="${Object(dist.text)("placeholder","Placeholder text","Input")}"
        >
        </calcite-input>
      </calcite-inline-editable>
      <calcite-input-message
        ${Object(dist.boolean)("active",!1,"InputMessage")&&"active"}
        ${Object(dist.boolean)("icon",!1,"InputMessage")&&"icon"}
        status="${Object(dist.select)("status",["idle","valid","invalid"],"idle","InputMessage")}"
      >
        ${Object(dist.text)("text","My great input message","InputMessage")}
      </calcite-input-message>
    </calcite-label>
  </div>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f},WithLabel.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;">\n    <calcite-label\n      status="${select("status", ["idle", "valid", "invalid"], "idle", "Label")}"\n      scale="${select("scale", ["s", "m", "l"], "m", "Label")}"\n      layout="${select("layout", ["default", "inline", "inline-space-between"], "default", "Label")}"\n    >\n      ${text("label text", "My great label", "Label")}\n      <calcite-inline-editable\n        ${boolean("controls", false, "InlineEditable") && "controls"}\n        ${boolean("editing-enabled", false, "InlineEditable") && "editing-enabled"}\n        ${boolean("loading", false, "InlineEditable") && "loading"}\n        ${boolean("disabled", false, "InlineEditable") && "disabled"}\n        intl-cancel-editing="${text("intl-cancel-editing", "Cancelar", "InlineEditable")}"\n        intl-enable-editing="${text("intl-enable-editing", "Haga clic para editar", "InlineEditable")}"\n        intl-confirm-changes="${text("intl-confirm-changes", "Guardar", "InlineEditable")}"\n      >\n        <calcite-input\n          alignment="${select("alignment", ["start", "end"], "start", "Input")}"\n          placeholder="${text("placeholder", "Placeholder text", "Input")}"\n        >\n        </calcite-input>\n      </calcite-inline-editable>\n      <calcite-input-message\n        ${boolean("active", false, "InputMessage") && "active"}\n        ${boolean("icon", false, "InputMessage") && "icon"}\n        status="${select("status", ["idle", "valid", "invalid"], "idle", "InputMessage")}"\n      >\n        ${text("text", "My great input message", "InputMessage")}\n      </calcite-input-message>\n    </calcite-label>\n  </div>\n`'}},WithLabel.parameters),WithoutLabel.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;">\n    <calcite-inline-editable\n      scale="${select("scale", ["s", "m", "l"], "m", "InlineEditable")}"\n      ${boolean("controls", false, "InlineEditable") && "controls"}\n      ${boolean("editing-enabled", false, "InlineEditable") && "editing-enabled"}\n      ${boolean("loading", false, "InlineEditable") && "loading"}\n      ${boolean("disabled", false, "InlineEditable") && "disabled"}\n      intl-cancel-editing="${text("intl-cancel-editing", "Cancelar", "InlineEditable")}"\n      intl-enable-editing="${text("intl-enable-editing", "Haga clic para editar", "InlineEditable")}"\n      intl-confirm-changes="${text("intl-confirm-changes", "Guardar", "InlineEditable")}"\n    >\n      <calcite-input\n        alignment="${select("alignment", ["start", "end"], "start", "Input")}"\n        placeholder="${text("placeholder", "Placeholder text", "Input")}"\n      >\n      </calcite-input>\n    </calcite-inline-editable>\n  </div>\n`'}},WithoutLabel.parameters),WithoutLabelRTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;" dir="rtl">\n    <calcite-inline-editable\n      scale="${select("scale", ["s", "m", "l"], "m", "InlineEditable")}"\n      ${boolean("controls", false, "InlineEditable") && "controls"}\n      ${boolean("editing-enabled", false, "InlineEditable") && "editing-enabled"}\n      ${boolean("loading", false, "InlineEditable") && "loading"}\n      ${boolean("disabled", false, "InlineEditable") && "disabled"}\n      intl-cancel-editing="${text("intl-cancel-editing", "Cancelar", "InlineEditable")}"\n      intl-enable-editing="${text("intl-enable-editing", "Haga clic para editar", "InlineEditable")}"\n      intl-confirm-changes="${text("intl-confirm-changes", "Guardar", "InlineEditable")}"\n    >\n      <calcite-input\n        alignment="${select("alignment", ["start", "end"], "start", "Input")}"\n        placeholder="${text("placeholder", "Placeholder text", "Input")}"\n      >\n      </calcite-input>\n    </calcite-inline-editable>\n  </div>\n`'}},WithoutLabelRTL.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;">\n    <calcite-label\n      class="calcite-theme-dark"\n      status="${select("status", ["idle", "valid", "invalid"], "idle", "Label")}"\n      scale="${select("scale", ["s", "m", "l"], "m", "Label")}"\n      layout="${select("layout", ["default", "inline", "inline-space-between"], "default", "Label")}"\n    >\n      ${text("label text", "My great label", "Label")}\n      <calcite-inline-editable\n        ${boolean("controls", false, "InlineEditable") && "controls"}\n        ${boolean("editing-enabled", false, "InlineEditable") && "editing-enabled"}\n        ${boolean("loading", false, "InlineEditable") && "loading"}\n        ${boolean("disabled", false, "InlineEditable") && "disabled"}\n        intl-cancel-editing="${text("intl-cancel-editing", "Cancelar", "InlineEditable")}"\n        intl-enable-editing="${text("intl-enable-editing", "Haga clic para editar", "InlineEditable")}"\n        intl-confirm-changes="${text("intl-confirm-changes", "Guardar", "InlineEditable")}"\n      >\n        <calcite-input\n          alignment="${select("alignment", ["start", "end"], "start", "Input")}"\n          placeholder="${text("placeholder", "Placeholder text", "Input")}"\n        >\n        </calcite-input>\n      </calcite-inline-editable>\n      <calcite-input-message\n        ${boolean("active", false, "InputMessage") && "active"}\n        ${boolean("icon", false, "InputMessage") && "icon"}\n        status="${select("status", ["idle", "valid", "invalid"], "idle", "InputMessage")}"\n      >\n        ${text("text", "My great input message", "InputMessage")}\n      </calcite-input-message>\n    </calcite-label>\n  </div>\n`'}},DarkMode.parameters)},"./src/components/input-date-picker/input-date-picker.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"Range",(function(){return Range})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),locale=__webpack_require__("./src/utils/locale.ts"),Simple=(__webpack_exports__.default={title:"Components/Controls/InputDatePicker",parameters:{notes:'# calcite-input-date-picker\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<div style="width: 400px">\n  <calcite-label layout="inline">\n    Date\n    <calcite-input-date-picker\n      min="2016-08-09"\n      max="2023-12-18"\n      locale="en"\n      intl-next-month="Next month"\n      intl-prev-month="Previous month"\n      role="application"\n      layout="horizontal"\n    ></calcite-input-date-picker>\n  </calcite-label>\n</div>\n```\n\n## Properties\n\n| Property                     | Attribute                      | Description                                                                                                                        | Type                         | Default                                   |\n| ---------------------------- | ------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- | ----------------------------------------- |\n| `active`                     | `active`                       | Expand or collapse when calendar does not have input                                                                               | `boolean`                    | `false`                                   |\n| `disabled`                   | `disabled`                     | When false, the component won\'t be interactive.                                                                                    | `boolean`                    | `false`                                   |\n| `end`                        | `end`                          | <span style="color:red">**[DEPRECATED]**</span> use value instead<br/><br/>Selected end date                                       | `string`                     | `undefined`                               |\n| `endAsDate`                  | --                             | <span style="color:red">**[DEPRECATED]**</span> use valueAsDate instead<br/><br/>Selected end date as full date object             | `Date`                       | `undefined`                               |\n| `headingLevel`               | `heading-level`                | Number at which section headings should start for this component.                                                                  | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6` | `undefined`                               |\n| `intlNextMonth`              | `intl-next-month`              | Localized string for "next month" (used for aria label)                                                                            | `string`                     | `TEXT.nextMonth`                          |\n| `intlPrevMonth`              | `intl-prev-month`              | Localized string for "previous month" (used for aria label)                                                                        | `string`                     | `TEXT.prevMonth`                          |\n| `intlYear`                   | `intl-year`                    | Localized string for "year" (used for aria label)                                                                                  | `string`                     | `TEXT.year`                               |\n| `layout`                     | `layout`                       | Layout                                                                                                                             | `"horizontal" \\| "vertical"` | `"horizontal"`                            |\n| `locale`                     | `locale`                       | BCP 47 language tag for desired language and country format                                                                        | `string`                     | `document.documentElement.lang \\|\\| "en"` |\n| `max`                        | `max`                          | Latest allowed date ("yyyy-mm-dd")                                                                                                 | `string`                     | `undefined`                               |\n| `maxAsDate`                  | --                             | Latest allowed date as full date object                                                                                            | `Date`                       | `undefined`                               |\n| `min`                        | `min`                          | Earliest allowed date ("yyyy-mm-dd")                                                                                               | `string`                     | `undefined`                               |\n| `minAsDate`                  | --                             | Earliest allowed date as full date object                                                                                          | `Date`                       | `undefined`                               |\n| `name`                       | `name`                         | The picker\'s name. Gets submitted with the form.                                                                                   | `string`                     | `undefined`                               |\n| `overlayPositioning`         | `overlay-positioning`          | Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the \'fixed\' value. | `"absolute" \\| "fixed"`      | `"absolute"`                              |\n| `proximitySelectionDisabled` | `proximity-selection-disabled` | Disables the default behaviour on the third click of narrowing or extending the range and instead starts a new range.              | `boolean`                    | `false`                                   |\n| `range`                      | `range`                        | Range mode activation                                                                                                              | `boolean`                    | `false`                                   |\n| `scale`                      | `scale`                        | specify the scale of the date picker                                                                                               | `"l" \\| "m" \\| "s"`          | `"m"`                                     |\n| `start`                      | `start`                        | <span style="color:red">**[DEPRECATED]**</span> use value instead<br/><br/>Selected start date                                     | `string`                     | `undefined`                               |\n| `startAsDate`                | --                             | <span style="color:red">**[DEPRECATED]**</span> use valueAsDate instead<br/><br/>Selected start date as full date object           | `Date`                       | `undefined`                               |\n| `value`                      | `value`                        | Selected date                                                                                                                      | `string \\| string[]`         | `undefined`                               |\n| `valueAsDate`                | --                             | Selected date as full date object                                                                                                  | `Date \\| Date[]`             | `undefined`                               |\n\n## Events\n\n| Event                          | Description                                                                                                                                                          | Type                           |\n| ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ |\n| `calciteDatePickerChange`      | <span style="color:red">**[DEPRECATED]**</span> use `calciteInputDatePickerChange` instead.<br/><br/>Trigger calcite date change when a user changes the date.       | `CustomEvent<Date>`            |\n| `calciteDatePickerRangeChange` | <span style="color:red">**[DEPRECATED]**</span> use `calciteInputDatePickerChange` instead.<br/><br/>Trigger calcite date change when a user changes the date range. | `CustomEvent<DateRangeChange>` |\n| `calciteInputDatePickerChange` | This event fires when the input date picker value changes.                                                                                                           | `CustomEvent<void>`            |\n\n## Methods\n\n### `reposition() => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n### `setFocus() => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Dependencies\n\n### Depends on\n\n- [calcite-input](../input)\n- [calcite-date-picker](../date-picker)\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-input-date-picker --\x3e calcite-input\n  calcite-input-date-picker --\x3e calcite-date-picker\n  calcite-input-date-picker --\x3e calcite-icon\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  calcite-date-picker --\x3e calcite-date-picker-month-header\n  calcite-date-picker --\x3e calcite-date-picker-month\n  calcite-date-picker-month-header --\x3e calcite-icon\n  calcite-date-picker-month --\x3e calcite-date-picker-day\n  style calcite-input-date-picker fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <div style="width: 400px">
    <calcite-label layout="inline">
      Date
      <calcite-input-date-picker
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        value="${Object(dist.text)("value","2020-12-12")}"
        min="${Object(dist.text)("min","2016-08-09")}"
        max="${Object(dist.text)("max","2023-12-18")}"
        locale="${Object(dist.select)("locale",locale.a,"en")}"
        intl-next-month="${Object(dist.text)("intl-next-month","Next month")}"
        intl-prev-month="${Object(dist.text)("intl-prev-month","Previous month")}"
      ></calcite-input-date-picker
    ></calcite-label>
  </div>
`}),DarkMode=function(){return tests_utils.a`
  <div style="width: 400px">
    <calcite-label layout="inline" class="calcite-theme-dark">
      Date
      <calcite-input-date-picker
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        value="${Object(dist.text)("value","2020-12-12")}"
        min="${Object(dist.text)("min","2016-08-09")}"
        max="${Object(dist.text)("max","2023-12-18")}"
        locale="${Object(dist.select)("locale",locale.a,"en")}"
        intl-next-month="${Object(dist.text)("intl-next-month","Next month")}"
        intl-prev-month="${Object(dist.text)("intl-prev-month","Previous month")}"
        range="${Object(dist.boolean)("range",!1)}"
      ></calcite-input-date-picker
    ></calcite-label>
  </div>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f};var Range=function(){return tests_utils.a`
  <div style="width: 400px">
    <calcite-input-date-picker
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      start="${Object(dist.text)("start","2020-12-12")}"
      end="${Object(dist.text)("end","2020-12-16")}"
      min="${Object(dist.text)("min","2016-08-09")}"
      max="${Object(dist.text)("max","2023-12-18")}"
      locale="${Object(dist.select)("locale",locale.a,"en")}"
      next-month-label="${Object(dist.text)("next-month-label","Next month")}"
      prev-month-label="${Object(dist.text)("prev-month-label","Previous month")}"
      range="${Object(dist.boolean)("range",!0)}"
      layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    ></calcite-input-date-picker>
  </div>
`},RTL=function(){return tests_utils.a`
  <div style="width: 400px" dir="rtl">
    <calcite-label layout="inline">
      Date
      <calcite-input-date-picker
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        value="${Object(dist.text)("value","2020-12-12")}"
        min="${Object(dist.text)("min","2016-08-09")}"
        max="${Object(dist.text)("max","2023-12-18")}"
        locale="${Object(dist.select)("locale",locale.a,"en")}"
        intl-next-month="${Object(dist.text)("intl-next-month","Next month")}"
        intl-prev-month="${Object(dist.text)("intl-prev-month","Previous month")}"
      ></calcite-input-date-picker
    ></calcite-label>
  </div>
`};Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px">\n    <calcite-label layout="inline">\n      Date\n      <calcite-input-date-picker\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        value="${text("value", "2020-12-12")}"\n        min="${text("min", "2016-08-09")}"\n        max="${text("max", "2023-12-18")}"\n        locale="${select("locale", locales, "en")}"\n        intl-next-month="${text("intl-next-month", "Next month")}"\n        intl-prev-month="${text("intl-prev-month", "Previous month")}"\n      ></calcite-input-date-picker\n    ></calcite-label>\n  </div>\n`'}},Simple.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px">\n    <calcite-label layout="inline" class="calcite-theme-dark">\n      Date\n      <calcite-input-date-picker\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        value="${text("value", "2020-12-12")}"\n        min="${text("min", "2016-08-09")}"\n        max="${text("max", "2023-12-18")}"\n        locale="${select("locale", locales, "en")}"\n        intl-next-month="${text("intl-next-month", "Next month")}"\n        intl-prev-month="${text("intl-prev-month", "Previous month")}"\n        range="${boolean("range", false)}"\n      ></calcite-input-date-picker\n    ></calcite-label>\n  </div>\n`'}},DarkMode.parameters),Range.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px">\n    <calcite-input-date-picker\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      start="${text("start", "2020-12-12")}"\n      end="${text("end", "2020-12-16")}"\n      min="${text("min", "2016-08-09")}"\n      max="${text("max", "2023-12-18")}"\n      locale="${select("locale", locales, "en")}"\n      next-month-label="${text("next-month-label", "Next month")}"\n      prev-month-label="${text("prev-month-label", "Previous month")}"\n      range="${boolean("range", true)}"\n      layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    ></calcite-input-date-picker>\n  </div>\n`'}},Range.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px" dir="rtl">\n    <calcite-label layout="inline">\n      Date\n      <calcite-input-date-picker\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        value="${text("value", "2020-12-12")}"\n        min="${text("min", "2016-08-09")}"\n        max="${text("max", "2023-12-18")}"\n        locale="${select("locale", locales, "en")}"\n        intl-next-month="${text("intl-next-month", "Next month")}"\n        intl-prev-month="${text("intl-prev-month", "Previous month")}"\n      ></calcite-input-date-picker\n    ></calcite-label>\n  </div>\n`'}},RTL.parameters)},"./src/components/input-time-picker/input-time-picker.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"LightTheme",(function(){return LightTheme})),__webpack_require__.d(__webpack_exports__,"DarkTheme",(function(){return DarkTheme}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),LightTheme=(__webpack_exports__.default={title:"Components/Controls/Time/Input Time Picker",parameters:{notes:'# calcite-input-time-picker\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-input-time-picker\n  hour-display-format="12"\n  name="light"\n  scale="m"\n  step="1"\n  value="12:21"\n></calcite-input-time-picker>\n```\n\n## Properties\n\n| Property           | Attribute            | Description                                                                   | Type                | Default     |\n| ------------------ | -------------------- | ----------------------------------------------------------------------------- | ------------------- | ----------- |\n| `active`           | `active`             | The active state of the time input                                            | `boolean`           | `false`     |\n| `disabled`         | `disabled`           | The disabled state of the time input                                          | `boolean`           | `false`     |\n| `intlHour`         | `intl-hour`          | aria-label for the hour input                                                 | `string`            | `undefined` |\n| `intlHourDown`     | `intl-hour-down`     | aria-label for the hour down button                                           | `string`            | `undefined` |\n| `intlHourUp`       | `intl-hour-up`       | aria-label for the hour up button                                             | `string`            | `undefined` |\n| `intlMeridiem`     | `intl-meridiem`      | aria-label for the meridiem (am/pm) input                                     | `string`            | `undefined` |\n| `intlMeridiemDown` | `intl-meridiem-down` | aria-label for the meridiem (am/pm) down button                               | `string`            | `undefined` |\n| `intlMeridiemUp`   | `intl-meridiem-up`   | aria-label for the meridiem (am/pm) up button                                 | `string`            | `undefined` |\n| `intlMinute`       | `intl-minute`        | aria-label for the minute input                                               | `string`            | `undefined` |\n| `intlMinuteDown`   | `intl-minute-down`   | aria-label for the minute down button                                         | `string`            | `undefined` |\n| `intlMinuteUp`     | `intl-minute-up`     | aria-label for the minute up button                                           | `string`            | `undefined` |\n| `intlSecond`       | `intl-second`        | aria-label for the second input                                               | `string`            | `undefined` |\n| `intlSecondDown`   | `intl-second-down`   | aria-label for the second down button                                         | `string`            | `undefined` |\n| `intlSecondUp`     | `intl-second-up`     | aria-label for the second up button                                           | `string`            | `undefined` |\n| `name`             | `name`               | The name of the time input                                                    | `string`            | `undefined` |\n| `scale`            | `scale`              | The scale (size) of the time input                                            | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `step`             | `step`               | number (seconds) that specifies the granularity that the value must adhere to | `number`            | `60`        |\n| `value`            | `value`              | The selected time in UTC (always 24-hour format)                              | `string`            | `null`      |\n\n## Events\n\n| Event                          | Description                                                     | Type                  |\n| ------------------------------ | --------------------------------------------------------------- | --------------------- |\n| `calciteInputTimePickerChange` | Fires when the time value is changed as a result of user input. | `CustomEvent<string>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Dependencies\n\n### Depends on\n\n- [calcite-input](../input)\n- [calcite-popover](../popover)\n- [calcite-time-picker](../time-picker)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-input-time-picker --\x3e calcite-input\n  calcite-input-time-picker --\x3e calcite-popover\n  calcite-input-time-picker --\x3e calcite-time-picker\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-time-picker --\x3e calcite-icon\n  style calcite-input-time-picker fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-input-time-picker
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    name="${Object(dist.text)("name","light")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    step="${Object(dist.number)("step",1)}"
    value="${Object(dist.text)("value","10:37")}"
  >
  </calcite-input-time-picker>
`}),DarkTheme=function(){return tests_utils.a`
  <calcite-input-time-picker
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    class="calcite-theme-dark"
    name="${Object(dist.text)("name","dark")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    step="${Object(dist.number)("step",1)}"
    value="${Object(dist.text)("value","22:37")}"
  >
  </calcite-input-time-picker>
`};DarkTheme.parameters={themes:utils.f},LightTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-input-time-picker\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    name="${text("name", "light")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    step="${number("step", 1)}"\n    value="${text("value", "10:37")}"\n  >\n  </calcite-input-time-picker>\n`'}},LightTheme.parameters),DarkTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-input-time-picker\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    class="calcite-theme-dark"\n    name="${text("name", "dark")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    step="${number("step", 1)}"\n    value="${text("value", "22:37")}"\n  >\n  </calcite-input-time-picker>\n`'}},DarkTheme.parameters)},"./src/components/input/input.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"WithLabel",(function(){return WithLabel})),__webpack_require__.d(__webpack_exports__,"WithLabelAndInputMessage",(function(){return WithLabelAndInputMessage})),__webpack_require__.d(__webpack_exports__,"WithoutLabel",(function(){return WithoutLabel})),__webpack_require__.d(__webpack_exports__,"WithSlottedAction",(function(){return WithSlottedAction})),__webpack_require__.d(__webpack_exports__,"Textarea",(function(){return Textarea})),__webpack_require__.d(__webpack_exports__,"SimpleDarkMode",(function(){return SimpleDarkMode})),__webpack_require__.d(__webpack_exports__,"WithLabelAndInputMessageRTL",(function(){return WithLabelAndInputMessageRTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),WithLabel=(__webpack_exports__.default={title:"Components/Controls/Input",parameters:{notes:'# calcite-input\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-input value="Entered value" placeholder="My placeholder"></calcite-input>\n```\n\n### Clearable\n\n```html\n<calcite-label>\n  Clearable item\n  <calcite-input clearable value="My great name" placeholder="John Doe"></calcite-input>\n</calcite-label>\n```\n\n### Native-events\n\nYou can also listen for native events emitted from `<calcite-input>`.\n\nYou must use `focusin`/`focusout` instead of `focus`/`blur` because these events bubble up from the rendered child element rendered inside of `<calcite-input>`\n\nAll events return an element and a value:\n\n```js\ninput.addEventListener("focusin", logFocus);\ninput.addEventListener("focusout", logBlur);\n\nfunction logChange() {\n  console.log(event.target.element);\n  console.log(event.target.value);\n}\n```\n\n### With-label\n\nUsing a wrapping `calcite-label` component lets consumers set the status attribute once and have it propagate to child `calcite-input` and `calcite-input-message` elements\n\n```html\n<calcite-label status="invalid" for="invalid-input">\n  Invalid input\n  <calcite-input id="invalid-input" placeholder="Filter your files" value="adfo2h2"></calcite-input>\n  <calcite-input-message active icon> Something doesn\'t look right </calcite-input-message>\n</calcite-label>\n```\n\n### With-message\n\n```html\n<calcite-label for="info">\n  My great label\n  <calcite-input id="info" placeholder="Enter your information"></calcite-input>\n  <calcite-input-message icon="3d-glasses" active>\n    Here\'s something you should know about this input\n  </calcite-input-message>\n</calcite-label>\n```\n\n## Properties\n\n| Property           | Attribute            | Description                                                                                                                                                                                                                                  | Type                                                                                                                                                                                   | Default                                   |\n| ------------------ | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------- |\n| `alignment`        | `alignment`          | specify the alignment of the value of the input                                                                                                                                                                                              | `"end" \\| "start"`                                                                                                                                                                     | `"start"`                                 |\n| `autofocus`        | `autofocus`          | should the input autofocus                                                                                                                                                                                                                   | `boolean`                                                                                                                                                                              | `false`                                   |\n| `clearable`        | `clearable`          | optionally display a clear button that displays when field has a value shows by default for search, time, date will not display for type="textarea"                                                                                          | `boolean`                                                                                                                                                                              | `false`                                   |\n| `disabled`         | `disabled`           | is the input disabled                                                                                                                                                                                                                        | `boolean`                                                                                                                                                                              | `false`                                   |\n| `groupSeparator`   | `group-separator`    | for number values, displays the locale\'s group separator                                                                                                                                                                                     | `boolean`                                                                                                                                                                              | `false`                                   |\n| `hidden`           | `hidden`             | when true, the component will not be visible                                                                                                                                                                                                 | `boolean`                                                                                                                                                                              | `false`                                   |\n| `icon`             | `icon`               | when used as a boolean set to true, show a default recommended icon for certain input types (tel, password, email, date, time, search). You can also pass a calcite-ui-icon name to this prop to display a requested icon for any input type | `boolean \\| string`                                                                                                                                                                    | `undefined`                               |\n| `iconFlipRtl`      | `icon-flip-rtl`      | flip the icon in rtl                                                                                                                                                                                                                         | `boolean`                                                                                                                                                                              | `false`                                   |\n| `intlLoading`      | `intl-loading`       | string to override English loading text                                                                                                                                                                                                      | `string`                                                                                                                                                                               | `TEXT.loading`                            |\n| `label`            | `label`              | Applies to the aria-label attribute on the button or hyperlink                                                                                                                                                                               | `string`                                                                                                                                                                               | `undefined`                               |\n| `loading`          | `loading`            | specify if the input is in loading state                                                                                                                                                                                                     | `boolean`                                                                                                                                                                              | `false`                                   |\n| `locale`           | `locale`             | BCP 47 language tag for desired language and country format                                                                                                                                                                                  | `string`                                                                                                                                                                               | `document.documentElement.lang \\|\\| "en"` |\n| `max`              | `max`                | input max                                                                                                                                                                                                                                    | `number`                                                                                                                                                                               | `undefined`                               |\n| `maxLength`        | `max-length`         | Maximum length of the input value                                                                                                                                                                                                            | `number`                                                                                                                                                                               | `undefined`                               |\n| `maxlength`        | `maxlength`          | <span style="color:red">**[DEPRECATED]**</span> use maxLength instead<br/><br/>Maximum length of text input.                                                                                                                                 | `number`                                                                                                                                                                               | `undefined`                               |\n| `min`              | `min`                | input min                                                                                                                                                                                                                                    | `number`                                                                                                                                                                               | `undefined`                               |\n| `minLength`        | `min-length`         | Minimum length of the text input                                                                                                                                                                                                             | `number`                                                                                                                                                                               | `undefined`                               |\n| `name`             | `name`               | The name of the input                                                                                                                                                                                                                        | `string`                                                                                                                                                                               | `undefined`                               |\n| `numberButtonType` | `number-button-type` | specify the placement of the number buttons                                                                                                                                                                                                  | `"horizontal" \\| "none" \\| "vertical"`                                                                                                                                                 | `"vertical"`                              |\n| `placeholder`      | `placeholder`        | explicitly whitelist placeholder attribute                                                                                                                                                                                                   | `string`                                                                                                                                                                               | `undefined`                               |\n| `prefixText`       | `prefix-text`        | optionally add prefix                                                                                                                                                                                                                        | `string`                                                                                                                                                                               | `undefined`                               |\n| `readOnly`         | `read-only`          | When true, a field cannot be modified.                                                                                                                                                                                                       | `boolean`                                                                                                                                                                              | `false`                                   |\n| `required`         | `required`           | is the input required                                                                                                                                                                                                                        | `boolean`                                                                                                                                                                              | `false`                                   |\n| `scale`            | `scale`              | specify the scale of the input, defaults to m                                                                                                                                                                                                | `"l" \\| "m" \\| "s"`                                                                                                                                                                    | `"m"`                                     |\n| `status`           | `status`             | specify the status of the input field, determines message and icons                                                                                                                                                                          | `"idle" \\| "invalid" \\| "valid"`                                                                                                                                                       | `"idle"`                                  |\n| `step`             | `step`               | input step                                                                                                                                                                                                                                   | `"any" \\| number`                                                                                                                                                                      | `undefined`                               |\n| `suffixText`       | `suffix-text`        | optionally add suffix \\*                                                                                                                                                                                                                     | `string`                                                                                                                                                                               | `undefined`                               |\n| `type`             | `type`               | specify the input type Note that the following types add type-specific icons by default: `date`, `email`, `password`, `search`, `tel`, `time`                                                                                                | `"color" \\| "date" \\| "datetime-local" \\| "email" \\| "file" \\| "image" \\| "month" \\| "number" \\| "password" \\| "search" \\| "tel" \\| "text" \\| "textarea" \\| "time" \\| "url" \\| "week"` | `"text"`                                  |\n| `value`            | `value`              | input value                                                                                                                                                                                                                                  | `string`                                                                                                                                                                               | `""`                                      |\n\n## Events\n\n| Event                | Description                                                    | Type                |\n| -------------------- | -------------------------------------------------------------- | ------------------- |\n| `calciteInputChange` | This event fires each time a new value is typed and committed. | `CustomEvent<void>` |\n| `calciteInputInput`  | This event fires each time a new value is typed.               | `CustomEvent<any>`  |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot       | Description                                      |\n| ---------- | ------------------------------------------------ |\n| `"action"` | A slot for positioning a button next to an input |\n\n## Dependencies\n\n### Used by\n\n- [calcite-color-picker](../color-picker)\n- [calcite-color-picker-hex-input](../color-picker-hex-input)\n- [calcite-filter](../filter)\n- [calcite-input-date-picker](../input-date-picker)\n- [calcite-input-time-picker](../input-time-picker)\n\n### Depends on\n\n- [calcite-progress](../progress)\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  calcite-color-picker --\x3e calcite-input\n  calcite-color-picker-hex-input --\x3e calcite-input\n  calcite-filter --\x3e calcite-input\n  calcite-input-date-picker --\x3e calcite-input\n  calcite-input-time-picker --\x3e calcite-input\n  style calcite-input fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-label
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      for="input-with-label"
    >
      ${Object(dist.text)("label text","My great label")}
      <calcite-input
        id="input-with-label"
        type="${Object(dist.select)("type",["text","textarea","email","password","tel","number","search","file","time","date"],"text")}"
        status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
        alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
        number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal")}"
        min="${Object(dist.number)("min",0)}"
        max="${Object(dist.number)("max",100)}"
        step="${Object(dist.number)("step",1)}"
        prefix-text="${Object(dist.text)("prefix-text","")}"
        suffix-text="${Object(dist.text)("suffix-text","")}"
        ${Object(helpers.a)("loading",!1)}
        ${Object(helpers.a)("clearable",!1)}
        ${Object(helpers.a)("disabled",!1)}
        value="${Object(dist.text)("value","")}"
        placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
      >
      </calcite-input>
      <calcite-input-message
        ${Object(helpers.a)("input-message-active",!1)}
        status="${Object(dist.select)("input message status",["idle","valid","invalid"],"idle")}"
        >${Object(dist.text)("input message text","My great input message")}</calcite-input-message
      >
    </calcite-label>
  </div>
`}),WithLabelAndInputMessage=function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-label
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle","Label")}"
      alignment="${Object(dist.select)("alignment",["start","center","end"],"start","Label")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m","Label")}"
      layout="${Object(dist.select)("layout",["default","inline","inline-space-between"],"default","Label")}"
      for="input-with-label-and-input-message"
    >
      ${Object(dist.text)("label text","My great label","Label")}
      <calcite-input
        id="input-with-label-and-input-message"
        type="${Object(dist.select)("type",["text","textarea","email","password","tel","number","search","file","time","date"],"text","Input")}"
        status="${Object(dist.select)("status",["idle","invalid","valid"],"idle","Input")}"
        alignment="${Object(dist.select)("alignment",["start","end"],"start","Input")}"
        number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal","Input")}"
        min="${Object(dist.number)("min",0)}"
        max="${Object(dist.number)("max",100)}"
        step="${Object(dist.number)("step",1)}"
        prefix-text="${Object(dist.text)("prefix-text","","Input")}"
        suffix-text="${Object(dist.text)("suffix-text","","Input")}"
        ${Object(helpers.a)("loading",!1)}
        ${Object(helpers.a)("autofocus",!1)}
        ${Object(helpers.a)("required",!1)}
        value="${Object(dist.text)("value","","Input")}"
        placeholder="${Object(dist.text)("placeholder","Placeholder text","Input")}"
      >
      </calcite-input>
      <calcite-input-message
        ${Object(helpers.a)("active",!0)}
        ${Object(helpers.a)("icon",!1)}
        icon="${Object(dist.select)("icon",helpers.c,"","Input Message")}"
        >${Object(dist.text)("input message text","My great input message","Input Message")}</calcite-input-message
      >
    </calcite-label>
  </div>
`};WithLabelAndInputMessage.storyName="With Label and Input Message";var WithoutLabel=function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle")}"
      type="${Object(dist.select)("type",["text","textarea","email","password","tel","number","search","file","time","date"],"text")}"
      status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
      alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
      number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal")}"
      min="${Object(dist.number)("min",0)}"
      max="${Object(dist.number)("max",100)}"
      step="${Object(dist.number)("step",1)}"
      prefix-text="${Object(dist.text)("prefix-text","")}"
      suffix-text="${Object(dist.text)("suffix-text","")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("clearable",!1)}
      ${Object(helpers.a)("disabled",!1)}
      value="${Object(dist.text)("value","")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
    >
    </calcite-input>
  </div>
`},WithSlottedAction=function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-label
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      for="input-with-slotted-action"
    >
      ${Object(dist.text)("label text","My great label")}
      <calcite-input
        id="input-with-slotted-action"
        type="${Object(dist.select)("type",["text","textarea","email","password","tel","number","search","file","time","date"],"text")}"
        status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
        alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
        number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal")}"
        min="${Object(dist.number)("min",0)}"
        max="${Object(dist.number)("max",100)}"
        step="${Object(dist.number)("step",1)}"
        prefix-text="${Object(dist.text)("prefix-text","")}"
        suffix-text="${Object(dist.text)("suffix-text","")}"
        ${Object(helpers.a)("loading",!1)}
        ${Object(helpers.a)("clearable",!1)}
        ${Object(helpers.a)("disabled",!1)}
        value="${Object(dist.text)("value","")}"
        placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
      >
        <calcite-button slot="action">${Object(dist.text)("action button text","Go")}</calcite-button>
      </calcite-input>
      <calcite-input-message
        ${Object(helpers.a)("input-message-active",!1)}
        status="${Object(dist.select)("input message status",["idle","valid","invalid"],"idle")}"
        >${Object(dist.text)("input message text","My great input message")}</calcite-input-message
      >
    </calcite-label>
  </div>
`},Textarea=function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-label status="${Object(dist.select)("status",["idle","valid","invalid"],"idle")}" for="input-with-text-area">
      ${Object(dist.text)("label text","My great label")}
      <calcite-input
        id="input-with-text-area"
        type="textarea"
        ${Object(helpers.a)("loading",!1)}
        ${Object(helpers.a)("clearable",!1)}
        ${Object(helpers.a)("disabled",!1)}
        value="${Object(dist.text)("value","")}"
        placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
      >
      </calcite-input>
      <calcite-input-message
        ${Object(helpers.a)("input-message-active",!1)}
        status="${Object(dist.select)("input message status",["idle","valid","invalid"],"idle")}"
        >${Object(dist.text)("input message text","My great input message")}</calcite-input-message
      >
    </calcite-label>
  </div>
`},SimpleDarkMode=function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-label
      class="calcite-theme-dark"
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle")}"
      for="input-dark-theme"
    >
      ${Object(dist.text)("label text","My great label")}
      <calcite-input
        id="input-dark-theme"
        type="${Object(dist.select)("type",["text","textarea","email","password","tel","number","search","file","time","date"],"text")}"
        status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
        alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
        number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal")}"
        min="${Object(dist.number)("min",0)}"
        max="${Object(dist.number)("max",100)}"
        step="${Object(dist.number)("step",1)}"
        prefix-text="${Object(dist.text)("prefix-text","")}"
        suffix-text="${Object(dist.text)("suffix-text","")}"
        ${Object(helpers.a)("loading",!1)}
        ${Object(helpers.a)("clearable",!1)}
        ${Object(helpers.a)("disabled",!1)}
        value="${Object(dist.text)("value","")}"
        placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
      >
      </calcite-input>
      <calcite-input-message
        ${Object(helpers.a)("calcite-input-message-active",!1)}
        status="${Object(dist.select)("input message status",["idle","valid","invalid"],"idle")}"
        >${Object(dist.text)("input message text","My great input message")}</calcite-input-message
      >
    </calcite-label>
  </div>
`};SimpleDarkMode.storyName="Simple - Dark mode",SimpleDarkMode.parameters={themes:utils.f};var WithLabelAndInputMessageRTL=function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;text-align:center;" dir="rtl">
    <calcite-label
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle","Label")}"
      alignment="${Object(dist.select)("alignment",["start","center","end"],"start","Label")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m","Label")}"
      layout="${Object(dist.select)("layout",["default","inline","inline-space-between"],"default","Label")}"
      for="input-with-label-and-input-message-rtl"
    >
      ${Object(dist.text)("label text","My great label","Label")}
      <calcite-input
        id="input-with-label-and-input-message-rtl"
        type="${Object(dist.select)("type",["text","textarea","email","password","tel","number","search","file","time","date"],"text","Input")}"
        status="${Object(dist.select)("status",["idle","invalid","valid"],"idle","Input")}"
        alignment="${Object(dist.select)("alignment",["start","end"],"start","Input")}"
        number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal","Input")}"
        min="${Object(dist.number)("min",0)}"
        max="${Object(dist.number)("max",100)}"
        step="${Object(dist.number)("step",1)}"
        prefix-text="${Object(dist.text)("prefix-text","","Input")}"
        suffix-text="${Object(dist.text)("suffix-text","","Input")}"
        ${Object(helpers.a)("loading",!1)}
        ${Object(helpers.a)("autofocus",!1)}
        ${Object(helpers.a)("required",!1)}
        value="${Object(dist.text)("value","","Input")}"
        placeholder="${Object(dist.text)("placeholder","Placeholder text","Input")}"
      >
      </calcite-input>
      <calcite-input-message
        ${Object(helpers.a)("active",!0)}
        ${Object(helpers.a)("icon",!1)}
        icon="${Object(dist.select)("icon",helpers.c,"","Input Message")}"
        >${Object(dist.text)("input message text","My great input message","Input Message")}</calcite-input-message
      >
    </calcite-label>
  </div>
`};WithLabel.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-label\n      status="${select("status", ["idle", "valid", "invalid"], "idle")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      for="input-with-label"\n    >\n      ${text("label text", "My great label")}\n      <calcite-input\n        id="input-with-label"\n        type="${select(\n          "type",\n          ["text", "textarea", "email", "password", "tel", "number", "search", "file", "time", "date"],\n          "text"\n        )}"\n        status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n        alignment="${select("alignment", ["start", "end"], "start")}"\n        number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal")}"\n        min="${number("min", 0)}"\n        max="${number("max", 100)}"\n        step="${number("step", 1)}"\n        prefix-text="${text("prefix-text", "")}"\n        suffix-text="${text("suffix-text", "")}"\n        ${boolean("loading", false)}\n        ${boolean("clearable", false)}\n        ${boolean("disabled", false)}\n        value="${text("value", "")}"\n        placeholder="${text("placeholder", "Placeholder text")}"\n      >\n      </calcite-input>\n      <calcite-input-message\n        ${boolean("input-message-active", false)}\n        status="${select("input message status", ["idle", "valid", "invalid"], "idle")}"\n        >${text("input message text", "My great input message")}</calcite-input-message\n      >\n    </calcite-label>\n  </div>\n`'}},WithLabel.parameters),WithLabelAndInputMessage.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-label\n      status="${select("status", ["idle", "valid", "invalid"], "idle", "Label")}"\n      alignment="${select("alignment", ["start", "center", "end"], "start", "Label")}"\n      scale="${select("scale", ["s", "m", "l"], "m", "Label")}"\n      layout="${select("layout", ["default", "inline", "inline-space-between"], "default", "Label")}"\n      for="input-with-label-and-input-message"\n    >\n      ${text("label text", "My great label", "Label")}\n      <calcite-input\n        id="input-with-label-and-input-message"\n        type="${select(\n          "type",\n          ["text", "textarea", "email", "password", "tel", "number", "search", "file", "time", "date"],\n          "text",\n          "Input"\n        )}"\n        status="${select("status", ["idle", "invalid", "valid"], "idle", "Input")}"\n        alignment="${select("alignment", ["start", "end"], "start", "Input")}"\n        number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal", "Input")}"\n        min="${number("min", 0)}"\n        max="${number("max", 100)}"\n        step="${number("step", 1)}"\n        prefix-text="${text("prefix-text", "", "Input")}"\n        suffix-text="${text("suffix-text", "", "Input")}"\n        ${boolean("loading", false)}\n        ${boolean("autofocus", false)}\n        ${boolean("required", false)}\n        value="${text("value", "", "Input")}"\n        placeholder="${text("placeholder", "Placeholder text", "Input")}"\n      >\n      </calcite-input>\n      <calcite-input-message\n        ${boolean("active", true)}\n        ${boolean("icon", false)}\n        icon="${select("icon", iconNames, "", "Input Message")}"\n        >${text("input message text", "My great input message", "Input Message")}</calcite-input-message\n      >\n    </calcite-label>\n  </div>\n`'}},WithLabelAndInputMessage.parameters),WithoutLabel.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      status="${select("status", ["idle", "valid", "invalid"], "idle")}"\n      type="${select(\n        "type",\n        ["text", "textarea", "email", "password", "tel", "number", "search", "file", "time", "date"],\n        "text"\n      )}"\n      status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n      alignment="${select("alignment", ["start", "end"], "start")}"\n      number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal")}"\n      min="${number("min", 0)}"\n      max="${number("max", 100)}"\n      step="${number("step", 1)}"\n      prefix-text="${text("prefix-text", "")}"\n      suffix-text="${text("suffix-text", "")}"\n      ${boolean("loading", false)}\n      ${boolean("clearable", false)}\n      ${boolean("disabled", false)}\n      value="${text("value", "")}"\n      placeholder="${text("placeholder", "Placeholder text")}"\n    >\n    </calcite-input>\n  </div>\n`'}},WithoutLabel.parameters),WithSlottedAction.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-label\n      status="${select("status", ["idle", "valid", "invalid"], "idle")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      for="input-with-slotted-action"\n    >\n      ${text("label text", "My great label")}\n      <calcite-input\n        id="input-with-slotted-action"\n        type="${select(\n          "type",\n          ["text", "textarea", "email", "password", "tel", "number", "search", "file", "time", "date"],\n          "text"\n        )}"\n        status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n        alignment="${select("alignment", ["start", "end"], "start")}"\n        number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal")}"\n        min="${number("min", 0)}"\n        max="${number("max", 100)}"\n        step="${number("step", 1)}"\n        prefix-text="${text("prefix-text", "")}"\n        suffix-text="${text("suffix-text", "")}"\n        ${boolean("loading", false)}\n        ${boolean("clearable", false)}\n        ${boolean("disabled", false)}\n        value="${text("value", "")}"\n        placeholder="${text("placeholder", "Placeholder text")}"\n      >\n        <calcite-button slot="action">${text("action button text", "Go")}</calcite-button>\n      </calcite-input>\n      <calcite-input-message\n        ${boolean("input-message-active", false)}\n        status="${select("input message status", ["idle", "valid", "invalid"], "idle")}"\n        >${text("input message text", "My great input message")}</calcite-input-message\n      >\n    </calcite-label>\n  </div>\n`'}},WithSlottedAction.parameters),Textarea.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-label status="${select("status", ["idle", "valid", "invalid"], "idle")}" for="input-with-text-area">\n      ${text("label text", "My great label")}\n      <calcite-input\n        id="input-with-text-area"\n        type="textarea"\n        ${boolean("loading", false)}\n        ${boolean("clearable", false)}\n        ${boolean("disabled", false)}\n        value="${text("value", "")}"\n        placeholder="${text("placeholder", "Placeholder text")}"\n      >\n      </calcite-input>\n      <calcite-input-message\n        ${boolean("input-message-active", false)}\n        status="${select("input message status", ["idle", "valid", "invalid"], "idle")}"\n        >${text("input message text", "My great input message")}</calcite-input-message\n      >\n    </calcite-label>\n  </div>\n`'}},Textarea.parameters),SimpleDarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-label\n      class="calcite-theme-dark"\n      status="${select("status", ["idle", "valid", "invalid"], "idle")}"\n      for="input-dark-theme"\n    >\n      ${text("label text", "My great label")}\n      <calcite-input\n        id="input-dark-theme"\n        type="${select(\n          "type",\n          ["text", "textarea", "email", "password", "tel", "number", "search", "file", "time", "date"],\n          "text"\n        )}"\n        status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n        alignment="${select("alignment", ["start", "end"], "start")}"\n        number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal")}"\n        min="${number("min", 0)}"\n        max="${number("max", 100)}"\n        step="${number("step", 1)}"\n        prefix-text="${text("prefix-text", "")}"\n        suffix-text="${text("suffix-text", "")}"\n        ${boolean("loading", false)}\n        ${boolean("clearable", false)}\n        ${boolean("disabled", false)}\n        value="${text("value", "")}"\n        placeholder="${text("placeholder", "Placeholder text")}"\n      >\n      </calcite-input>\n      <calcite-input-message\n        ${boolean("calcite-input-message-active", false)}\n        status="${select("input message status", ["idle", "valid", "invalid"], "idle")}"\n        >${text("input message text", "My great input message")}</calcite-input-message\n      >\n    </calcite-label>\n  </div>\n`'}},SimpleDarkMode.parameters),WithLabelAndInputMessageRTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;" dir="rtl">\n    <calcite-label\n      status="${select("status", ["idle", "valid", "invalid"], "idle", "Label")}"\n      alignment="${select("alignment", ["start", "center", "end"], "start", "Label")}"\n      scale="${select("scale", ["s", "m", "l"], "m", "Label")}"\n      layout="${select("layout", ["default", "inline", "inline-space-between"], "default", "Label")}"\n      for="input-with-label-and-input-message-rtl"\n    >\n      ${text("label text", "My great label", "Label")}\n      <calcite-input\n        id="input-with-label-and-input-message-rtl"\n        type="${select(\n          "type",\n          ["text", "textarea", "email", "password", "tel", "number", "search", "file", "time", "date"],\n          "text",\n          "Input"\n        )}"\n        status="${select("status", ["idle", "invalid", "valid"], "idle", "Input")}"\n        alignment="${select("alignment", ["start", "end"], "start", "Input")}"\n        number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal", "Input")}"\n        min="${number("min", 0)}"\n        max="${number("max", 100)}"\n        step="${number("step", 1)}"\n        prefix-text="${text("prefix-text", "", "Input")}"\n        suffix-text="${text("suffix-text", "", "Input")}"\n        ${boolean("loading", false)}\n        ${boolean("autofocus", false)}\n        ${boolean("required", false)}\n        value="${text("value", "", "Input")}"\n        placeholder="${text("placeholder", "Placeholder text", "Input")}"\n      >\n      </calcite-input>\n      <calcite-input-message\n        ${boolean("active", true)}\n        ${boolean("icon", false)}\n        icon="${select("icon", iconNames, "", "Input Message")}"\n        >${text("input message text", "My great input message", "Input Message")}</calcite-input-message\n      >\n    </calcite-label>\n  </div>\n`'}},WithLabelAndInputMessageRTL.parameters)},"./src/components/label/label.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"WrappingComponentsOtherThanInput",(function(){return WrappingComponentsOtherThanInput})),__webpack_require__.d(__webpack_exports__,"DarkTheme",(function(){return DarkTheme})),__webpack_require__.d(__webpack_exports__,"WrappingComponentsOtherThanInputRTL",(function(){return WrappingComponentsOtherThanInputRTL})),__webpack_require__.d(__webpack_exports__,"toggleSwitchWithLabel",(function(){return toggleSwitchWithLabel}));var utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),WrappingComponentsOtherThanInput=(__webpack_exports__.default={title:"Components/Label",parameters:{notes:'# calcite-label\n\nRenders a `<label>` around its children and can be used with any [labelable native](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Form_labelable) or labelable calcite element.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nIt also allows consumers to set a `status` attribute for child `calcite-input` and `calcite-input-message` components to use to set their own properties.\n\n```html\n<calcite-label status="invalid">\n  Invalid input\n  <calcite-input type="search" placeholder="Filter your files" value="adfo2h2"></calcite-input>\n  <calcite-input-message active icon> Something doesn\'t look right </calcite-input-message>\n</calcite-label>\n```\n\n### Browser-caveat\n\nWhen using the `default`, `inline` or `inline-space-between` layout option with [browsers that do not support the CSS `gap` property when used with flexbox](https://caniuse.com/flexbox-gap), you will need to use the `disable-spacing` attribute and apply spacing manually to the label by wrapping it in a styled span like so:\n\n```html\n<calcite-label layout="inline" disable-spacing>\n  <span style="margin-right: 0.75rem">Text leading inline</span>\n  <calcite-checkbox></calcite-checkbox>\n</calcite-label>\n```\n\n## Properties\n\n| Property         | Attribute         | Description                                                                                                                                                         | Type                                              | Default     |\n| ---------------- | ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------- | ----------- |\n| `alignment`      | `alignment`       | specify the text alignment of the label                                                                                                                             | `"center" \\| "end" \\| "start"`                    | `"start"`   |\n| `disableSpacing` | `disable-spacing` | eliminates any space around the label                                                                                                                               | `boolean`                                         | `false`     |\n| `disabled`       | `disabled`        | is the label disabled                                                                                                                                               | `boolean`                                         | `false`     |\n| `for`            | `for`             | The id of the input associated with the label                                                                                                                       | `string`                                          | `undefined` |\n| `layout`         | `layout`          | is the wrapped element positioned inline with the label slotted text                                                                                                | `"default" \\| "inline" \\| "inline-space-between"` | `"default"` |\n| `scale`          | `scale`           | specify the scale of the label, defaults to m                                                                                                                       | `"l" \\| "m" \\| "s"`                               | `"m"`       |\n| `status`         | `status`          | <span style="color:red">**[DEPRECATED]**</span> set directly on child element instead<br/><br/>specify the status of the label and any child input / input messages | `"idle" \\| "invalid" \\| "valid"`                  | `"idle"`    |\n\n## Slots\n\n| Slot | Description                                                 |\n| ---- | ----------------------------------------------------------- |\n|      | A slot for adding text and a component that can be labeled. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-card](../card)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-card --\x3e calcite-label\n  style calcite-label fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-label>
      Default label wrapping a switch
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label>
      Default label wrapping a radio group
      <calcite-radio-group>
        <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>
        <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>
        <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>
      </calcite-radio-group>
    </calcite-label>
    <calcite-label layout="inline">
      Text leading inline
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-switch></calcite-switch>
      Text trailing inline
    </calcite-label>
    <calcite-label layout="inline">
      Off
      <calcite-switch></calcite-switch>
      On
    </calcite-label>
    <calcite-label layout="inline">
      Text leading inline
      <calcite-checkbox></calcite-checkbox>
    </calcite-label>
    <calcite-label>
      Focus slider test
      <calcite-slider></calcite-slider>
    </calcite-label>
    <calcite-label>
      Focus slider test
      <calcite-slider min-value="10" max-value="80"></calcite-slider>
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-checkbox></calcite-checkbox>
      Text trailing inline
    </calcite-label>
    <calcite-label layout="inline-space-between">
      Text leading inline-space-between
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label layout="inline-space-between">
      <calcite-switch></calcite-switch>
      Text trailing inline-space-between
    </calcite-label>
    <calcite-label layout="inline-space-between">
      Text leading inline-space-between
      <calcite-checkbox></calcite-checkbox>
    </calcite-label>
    <calcite-label layout="inline-space-between">
      <calcite-checkbox></calcite-checkbox>
      Text trailing inline-space-between
    </calcite-label>
    <calcite-label>
      Default label wrapping a select
      <calcite-select>
        <calcite-option>a</calcite-option>
        <calcite-option>b</calcite-option>
        <calcite-option>c</calcite-option>
      </calcite-select>
    </calcite-label>
  </div>
`});WrappingComponentsOtherThanInput.storyName="Wrapping components other than input";var DarkTheme=function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;text-align:center;" class="calcite-theme-dark">
    <calcite-label class="calcite-theme-dark">
      Default label wrapping a switch
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label class="calcite-theme-dark">
      Default label wrapping a radio group
      <calcite-radio-group>
        <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>
        <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>
        <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>
      </calcite-radio-group>
    </calcite-label>
    <calcite-label class="calcite-theme-dark" layout="inline">
      Text leading inline
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label class="calcite-theme-dark" layout="inline">
      <calcite-switch></calcite-switch>
      Text trailing inline
    </calcite-label>
    <calcite-label class="calcite-theme-dark" layout="inline">
      Off
      <calcite-switch></calcite-switch>
      On
    </calcite-label>
    <calcite-label class="calcite-theme-dark" layout="inline">
      Text leading inline
      <calcite-checkbox></calcite-checkbox>
    </calcite-label>
    <calcite-label class="calcite-theme-dark">
      Focus slider test
      <calcite-slider></calcite-slider>
    </calcite-label>
    <calcite-label class="calcite-theme-dark">
      Focus slider test
      <calcite-slider min-value="10" max-value="80"></calcite-slider>
    </calcite-label>
    <calcite-label class="calcite-theme-dark" layout="inline">
      <calcite-checkbox></calcite-checkbox>
      Text trailing inline
    </calcite-label>
    <calcite-label class="calcite-theme-dark" layout="inline-space-between">
      Text leading inline-space-between
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label class="calcite-theme-dark" layout="inline-space-between">
      <calcite-switch></calcite-switch>
      Text trailing inline-space-between
    </calcite-label>
    <calcite-label class="calcite-theme-dark" layout="inline-space-between">
      Text leading inline-space-between
      <calcite-checkbox></calcite-checkbox>
    </calcite-label>
    <calcite-label class="calcite-theme-dark" layout="inline-space-between">
      <calcite-checkbox></calcite-checkbox>
      Text trailing inline-space-between
    </calcite-label>
  </div>
`};DarkTheme.parameters={themes:utils.f};var WrappingComponentsOtherThanInputRTL=function(){return tests_utils.a`
  <div style="width:300px;max-width:100%;text-align:center;" dir="rtl">
    <calcite-label>
      Default label wrapping a switch
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label>
      Default label wrapping a radio group
      <calcite-radio-group>
        <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>
        <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>
        <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>
      </calcite-radio-group>
    </calcite-label>
    <calcite-label layout="inline">
      Text leading inline
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-switch></calcite-switch>
      Text trailing inline
    </calcite-label>
    <calcite-label layout="inline">
      Off
      <calcite-switch></calcite-switch>
      On
    </calcite-label>
    <calcite-label layout="inline">
      Text leading inline
      <calcite-checkbox></calcite-checkbox>
    </calcite-label>
    <calcite-label>
      Focus slider test
      <calcite-slider></calcite-slider>
    </calcite-label>
    <calcite-label>
      Focus slider test
      <calcite-slider min-value="10" max-value="80"></calcite-slider>
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-checkbox></calcite-checkbox>
      Text trailing inline
    </calcite-label>
    <calcite-label layout="inline-space-between">
      Text leading inline-space-between
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label layout="inline-space-between">
      <calcite-switch></calcite-switch>
      Text trailing inline-space-between
    </calcite-label>
    <calcite-label layout="inline-space-between">
      Text leading inline-space-between
      <calcite-checkbox></calcite-checkbox>
    </calcite-label>
    <calcite-label layout="inline-space-between">
      <calcite-checkbox></calcite-checkbox>
      Text trailing inline-space-between
    </calcite-label>
    <calcite-label>
      Default label wrapping a select
      <calcite-select>
        <calcite-option>a</calcite-option>
        <calcite-option>b</calcite-option>
        <calcite-option>c</calcite-option>
      </calcite-select>
    </calcite-label>
  </div>
`},toggleSwitchWithLabel=Object(helpers.f)((function(){return tests_utils.a`<calcite-label layout="inline">
    Toggle theme
    <calcite-switch id="theme-switch"></calcite-switch>
  </calcite-label>`}),Object(helpers.b)("calcite-label").click("calcite-label").snapshot("Toggle switch with label"));WrappingComponentsOtherThanInput.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-label>\n      Default label wrapping a switch\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label>\n      Default label wrapping a radio group\n      <calcite-radio-group>\n        <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>\n        <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>\n        <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>\n      </calcite-radio-group>\n    </calcite-label>\n    <calcite-label layout="inline">\n      Text leading inline\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-switch></calcite-switch>\n      Text trailing inline\n    </calcite-label>\n    <calcite-label layout="inline">\n      Off\n      <calcite-switch></calcite-switch>\n      On\n    </calcite-label>\n    <calcite-label layout="inline">\n      Text leading inline\n      <calcite-checkbox></calcite-checkbox>\n    </calcite-label>\n    <calcite-label>\n      Focus slider test\n      <calcite-slider></calcite-slider>\n    </calcite-label>\n    <calcite-label>\n      Focus slider test\n      <calcite-slider min-value="10" max-value="80"></calcite-slider>\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-checkbox></calcite-checkbox>\n      Text trailing inline\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      Text leading inline-space-between\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      <calcite-switch></calcite-switch>\n      Text trailing inline-space-between\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      Text leading inline-space-between\n      <calcite-checkbox></calcite-checkbox>\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      <calcite-checkbox></calcite-checkbox>\n      Text trailing inline-space-between\n    </calcite-label>\n    <calcite-label>\n      Default label wrapping a select\n      <calcite-select>\n        <calcite-option>a</calcite-option>\n        <calcite-option>b</calcite-option>\n        <calcite-option>c</calcite-option>\n      </calcite-select>\n    </calcite-label>\n  </div>\n`'}},WrappingComponentsOtherThanInput.parameters),DarkTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;" class="calcite-theme-dark">\n    <calcite-label class="calcite-theme-dark">\n      Default label wrapping a switch\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark">\n      Default label wrapping a radio group\n      <calcite-radio-group>\n        <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>\n        <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>\n        <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>\n      </calcite-radio-group>\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark" layout="inline">\n      Text leading inline\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark" layout="inline">\n      <calcite-switch></calcite-switch>\n      Text trailing inline\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark" layout="inline">\n      Off\n      <calcite-switch></calcite-switch>\n      On\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark" layout="inline">\n      Text leading inline\n      <calcite-checkbox></calcite-checkbox>\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark">\n      Focus slider test\n      <calcite-slider></calcite-slider>\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark">\n      Focus slider test\n      <calcite-slider min-value="10" max-value="80"></calcite-slider>\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark" layout="inline">\n      <calcite-checkbox></calcite-checkbox>\n      Text trailing inline\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark" layout="inline-space-between">\n      Text leading inline-space-between\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark" layout="inline-space-between">\n      <calcite-switch></calcite-switch>\n      Text trailing inline-space-between\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark" layout="inline-space-between">\n      Text leading inline-space-between\n      <calcite-checkbox></calcite-checkbox>\n    </calcite-label>\n    <calcite-label class="calcite-theme-dark" layout="inline-space-between">\n      <calcite-checkbox></calcite-checkbox>\n      Text trailing inline-space-between\n    </calcite-label>\n  </div>\n`'}},DarkTheme.parameters),WrappingComponentsOtherThanInputRTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;" dir="rtl">\n    <calcite-label>\n      Default label wrapping a switch\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label>\n      Default label wrapping a radio group\n      <calcite-radio-group>\n        <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>\n        <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>\n        <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>\n      </calcite-radio-group>\n    </calcite-label>\n    <calcite-label layout="inline">\n      Text leading inline\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-switch></calcite-switch>\n      Text trailing inline\n    </calcite-label>\n    <calcite-label layout="inline">\n      Off\n      <calcite-switch></calcite-switch>\n      On\n    </calcite-label>\n    <calcite-label layout="inline">\n      Text leading inline\n      <calcite-checkbox></calcite-checkbox>\n    </calcite-label>\n    <calcite-label>\n      Focus slider test\n      <calcite-slider></calcite-slider>\n    </calcite-label>\n    <calcite-label>\n      Focus slider test\n      <calcite-slider min-value="10" max-value="80"></calcite-slider>\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-checkbox></calcite-checkbox>\n      Text trailing inline\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      Text leading inline-space-between\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      <calcite-switch></calcite-switch>\n      Text trailing inline-space-between\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      Text leading inline-space-between\n      <calcite-checkbox></calcite-checkbox>\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      <calcite-checkbox></calcite-checkbox>\n      Text trailing inline-space-between\n    </calcite-label>\n    <calcite-label>\n      Default label wrapping a select\n      <calcite-select>\n        <calcite-option>a</calcite-option>\n        <calcite-option>b</calcite-option>\n        <calcite-option>c</calcite-option>\n      </calcite-select>\n    </calcite-label>\n  </div>\n`'}},WrappingComponentsOtherThanInputRTL.parameters),toggleSwitchWithLabel.parameters=Object.assign({storySource:{source:'stepStory(\n  (): string => html`<calcite-label layout="inline">\n    Toggle theme\n    <calcite-switch id="theme-switch"></calcite-switch>\n  </calcite-label>`,\n  createSteps("calcite-label").click("calcite-label").snapshot("Toggle switch with label")\n)'}},toggleSwitchWithLabel.parameters)},"./src/components/link/link.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"WithIconStart",(function(){return WithIconStart})),__webpack_require__.d(__webpack_exports__,"WithIconEnd",(function(){return WithIconEnd})),__webpack_require__.d(__webpack_exports__,"WithIconStartAndIconEnd",(function(){return WithIconStartAndIconEnd})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"WithIconStartAndIconEndRTL",(function(){return WithIconStartAndIconEndRTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),calcite_ui_icons=__webpack_require__("./node_modules/@esri/calcite-ui-icons/index.js"),tests_utils=__webpack_require__("./src/tests/utils.ts"),iconNames=Object.keys(calcite_ui_icons).filter((function(iconName){return iconName.endsWith("16")})).map((function(iconName){return iconName.replace("16","")})),Simple=(__webpack_exports__.default={title:"Components/Link",parameters:{notes:'# calcite-link\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<div style="font-size: 16px; font-weight: 400;">\n  Some wrapping text\n  <calcite-link href="#">link text here</calcite-link>\n  around the link\n</div>\n```\n\n### Focusing\n\nYou can programmatically focus a `calcite-link` with the `setFocus()` method:\n\n```html\n<div onclick=document.querySelector(\'#my-link\').setFocus()>Focus!</div>\n```\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                                                                                                                                                                             | Type                         | Default     |\n| ------------- | --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `disabled`    | `disabled`      | is the link disabled                                                                                                                                                                                                                                    | `boolean`                    | `false`     |\n| `download`    | `download`      | Prompts the user to save the linked URL instead of navigating to it. Can be used with or without a value: Without a value, the browser will suggest a filename/extension See: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download | `boolean \\| string`          | `false`     |\n| `href`        | `href`          | optionally pass a href - used to determine if the component should render as a link or an anchor                                                                                                                                                        | `string`                     | `undefined` |\n| `iconEnd`     | `icon-end`      | optionally pass an icon to display at the end of a button - accepts calcite ui icon names                                                                                                                                                               | `string`                     | `undefined` |\n| `iconFlipRtl` | `icon-flip-rtl` | flip the icon(s) in rtl                                                                                                                                                                                                                                 | `"both" \\| "end" \\| "start"` | `undefined` |\n| `iconStart`   | `icon-start`    | optionally pass an icon to display at the start of a button - accepts calcite ui icon names                                                                                                                                                             | `string`                     | `undefined` |\n| `rel`         | `rel`           | The rel attribute to apply to the hyperlink                                                                                                                                                                                                             | `string`                     | `undefined` |\n| `target`      | `target`        | The target attribute to apply to the hyperlink                                                                                                                                                                                                          | `string`                     | `undefined` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description             |\n| ---- | ----------------------- |\n|      | A slot for adding text. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-tile](../tile)\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-link --\x3e calcite-icon\n  calcite-tile --\x3e calcite-link\n  style calcite-link fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <div
    style="font-size: ${Object(dist.select)("containing font size",["12","14","16","18","20","24","32"],"16")}px; font-weight: ${Object(dist.select)("containing font weight",["300","400","500","700"],"400")};"
  >
    Some wrapping text
    <calcite-link href="${Object(dist.text)("href","")}" ${Object(helpers.a)("disabled",!1)}>
      ${Object(dist.text)("text","link text here")}</calcite-link
    >
    around the link
  </div>
`}),WithIconStart=function(){return tests_utils.a`
  <div
    style="font-size: ${Object(dist.select)("containing font size",["12","14","16","18","20","24","32"],"16")}px; font-weight: ${Object(dist.select)("containing font weight",["300","400","500","700"],"400")};"
  >
    Some wrapping text
    <calcite-link
      href="${Object(dist.text)("href","")}"
      ${Object(helpers.a)("disabled",!1)}
      icon-start="${Object(dist.select)("icon-start",iconNames,iconNames[0])}"
    >
      ${Object(dist.text)("text","link text here")}</calcite-link
    >
    around the link
  </div>
`};WithIconStart.storyName="With icon-start";var WithIconEnd=function(){return tests_utils.a`
  <div
    style="font-size: ${Object(dist.select)("containing font size",["12","14","16","18","20","24","32"],"16")}px; font-weight: ${Object(dist.select)("containing font weight",["300","400","500","700"],"400")};"
  >
    Some wrapping text
    <calcite-link
      href="${Object(dist.text)("href","")}"
      ${Object(helpers.a)("disabled",!1)}
      icon-end="${Object(dist.select)("icon-end",iconNames,iconNames[0])}"
    >
      ${Object(dist.text)("text","link text here")}</calcite-link
    >
    around the link
  </div>
`};WithIconEnd.storyName="With icon-end";var WithIconStartAndIconEnd=function(){return tests_utils.a`
  <div
    style="font-size: ${Object(dist.select)("containing font size",["12","14","16","18","20","24","32"],"16")}px; font-weight: ${Object(dist.select)("containing font weight",["300","400","500","700"],"400")};"
  >
    Some wrapping text
    <calcite-link
      href="${Object(dist.text)("href","")}"
      ${Object(helpers.a)("disabled",!1)}
      icon-start="${Object(dist.select)("icon-start",iconNames,iconNames[0])}"
      icon-end="${Object(dist.select)("icon-end",iconNames,iconNames[0])}"
    >
      ${Object(dist.text)("text","link text here")}</calcite-link
    >
    around the link
  </div>
`};WithIconStartAndIconEnd.storyName="With icon-start and icon-end";var DarkMode=function(){return tests_utils.a`
  <div
    class="calcite-theme-dark"
    style="color: white; font-size: ${Object(dist.select)("containing font size",["12","14","16","18","20","24","32"],"16")}px; font-weight: ${Object(dist.select)("containing font weight",["300","400","500","700"],"400")};"
  >
    Some wrapping text
    <calcite-link class="calcite-theme-dark" href="${Object(dist.text)("href","")}" ${Object(helpers.a)("disabled",!1)}
      >${Object(dist.text)("text","link text here")}</calcite-link
    >
    around the link
  </div>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f};var WithIconStartAndIconEndRTL=function(){return tests_utils.a`
  <div
    style="font-size: ${Object(dist.select)("containing font size",["12","14","16","18","20","24","32"],"16")}px; font-weight: ${Object(dist.select)("containing font weight",["300","400","500","700"],"400")};"
  >
    Some wrapping text
    <calcite-link
      dir="rtl"
      href="${Object(dist.text)("href","")}"
      ${Object(helpers.a)("disabled",!1)}
      icon-start="${Object(dist.select)("icon-start",iconNames,iconNames[0])}"
      icon-end="${Object(dist.select)("icon-end",iconNames,iconNames[1])}"
    >
      ${Object(dist.text)("text","link text here")}</calcite-link
    >
    around the link
  </div>
`};Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div\n    style="font-size: ${select(\n      "containing font size",\n      ["12", "14", "16", "18", "20", "24", "32"],\n      "16"\n    )}px; font-weight: ${select("containing font weight", ["300", "400", "500", "700"], "400")};"\n  >\n    Some wrapping text\n    <calcite-link href="${text("href", "")}" ${boolean("disabled", false)}>\n      ${text("text", "link text here")}</calcite-link\n    >\n    around the link\n  </div>\n`'}},Simple.parameters),WithIconStart.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div\n    style="font-size: ${select(\n      "containing font size",\n      ["12", "14", "16", "18", "20", "24", "32"],\n      "16"\n    )}px; font-weight: ${select("containing font weight", ["300", "400", "500", "700"], "400")};"\n  >\n    Some wrapping text\n    <calcite-link\n      href="${text("href", "")}"\n      ${boolean("disabled", false)}\n      icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    >\n      ${text("text", "link text here")}</calcite-link\n    >\n    around the link\n  </div>\n`'}},WithIconStart.parameters),WithIconEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div\n    style="font-size: ${select(\n      "containing font size",\n      ["12", "14", "16", "18", "20", "24", "32"],\n      "16"\n    )}px; font-weight: ${select("containing font weight", ["300", "400", "500", "700"], "400")};"\n  >\n    Some wrapping text\n    <calcite-link\n      href="${text("href", "")}"\n      ${boolean("disabled", false)}\n      icon-end="${select("icon-end", iconNames, iconNames[0])}"\n    >\n      ${text("text", "link text here")}</calcite-link\n    >\n    around the link\n  </div>\n`'}},WithIconEnd.parameters),WithIconStartAndIconEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div\n    style="font-size: ${select(\n      "containing font size",\n      ["12", "14", "16", "18", "20", "24", "32"],\n      "16"\n    )}px; font-weight: ${select("containing font weight", ["300", "400", "500", "700"], "400")};"\n  >\n    Some wrapping text\n    <calcite-link\n      href="${text("href", "")}"\n      ${boolean("disabled", false)}\n      icon-start="${select("icon-start", iconNames, iconNames[0])}"\n      icon-end="${select("icon-end", iconNames, iconNames[0])}"\n    >\n      ${text("text", "link text here")}</calcite-link\n    >\n    around the link\n  </div>\n`'}},WithIconStartAndIconEnd.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div\n    class="calcite-theme-dark"\n    style="color: white; font-size: ${select(\n      "containing font size",\n      ["12", "14", "16", "18", "20", "24", "32"],\n      "16"\n    )}px; font-weight: ${select("containing font weight", ["300", "400", "500", "700"], "400")};"\n  >\n    Some wrapping text\n    <calcite-link class="calcite-theme-dark" href="${text("href", "")}" ${boolean("disabled", false)}\n      >${text("text", "link text here")}</calcite-link\n    >\n    around the link\n  </div>\n`'}},DarkMode.parameters),WithIconStartAndIconEndRTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div\n    style="font-size: ${select(\n      "containing font size",\n      ["12", "14", "16", "18", "20", "24", "32"],\n      "16"\n    )}px; font-weight: ${select("containing font weight", ["300", "400", "500", "700"], "400")};"\n  >\n    Some wrapping text\n    <calcite-link\n      dir="rtl"\n      href="${text("href", "")}"\n      ${boolean("disabled", false)}\n      icon-start="${select("icon-start", iconNames, iconNames[0])}"\n      icon-end="${select("icon-end", iconNames, iconNames[1])}"\n    >\n      ${text("text", "link text here")}</calcite-link\n    >\n    around the link\n  </div>\n`'}},WithIconStartAndIconEndRTL.parameters)},"./src/components/list/list.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"OnlyLabel",(function(){return OnlyLabel})),__webpack_require__.d(__webpack_exports__,"OnlyDescription",(function(){return OnlyDescription})),__webpack_require__.d(__webpack_exports__,"NestedListItems",(function(){return NestedListItems})),__webpack_require__.d(__webpack_exports__,"GroupedItems",(function(){return GroupedItems})),__webpack_require__.d(__webpack_exports__,"RichContent",(function(){return RichContent})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode}));var utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),thumbnailImage=(__webpack_exports__.default={title:"Components/List",parameters:{notes:['# calcite-list\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Advanced\n\n```html\n<calcite-list>\n  <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">\n    <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n    <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>\n    <calcite-avatar\n      scale="l"\n      slot="content-start"\n      thumbnail="https://slm-assets.secondlife.com/assets/19947929/view_large/Capture_du_2018-03-04_20-40-56.jpg?1520192584"\n    ></calcite-avatar>\n    <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n    <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n    <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n  </calcite-list-item>\n  <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">\n    <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n    <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>\n    <calcite-avatar\n      scale="l"\n      slot="content-start"\n      thumbnail="https://www.seekpng.com/png/detail/90-906849_89kib-1024x631-finn-finn-adventure-time-face.png"\n    ></calcite-avatar>\n    <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n    <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n    <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n  </calcite-list-item>\n  <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">\n    <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n    <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>\n    <calcite-avatar\n      scale="l"\n      slot="content-start"\n      thumbnail="https://static.wikia.nocookie.net/adventuretimewithfinnandjake/images/c/c9/603138_454321168018988_647044807_n.png/revision/latest/scale-to-width-down/250?cb=20140624024310"\n    ></calcite-avatar>\n    <calcite-icon\n      scale="s"\n      icon="exclamation-mark-triangle"\n      slot="content-end"\n      style="color: var(--calcite-ui-danger)"\n    ></calcite-icon>\n    <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n    <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n  </calcite-list-item>\n</calcite-list>\n```\n\n### Basic\n\n```html\n<calcite-list>\n  <calcite-list-item\n    label="Cras iaculis ultricies nulla."\n    description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n  ></calcite-list-item>\n  <calcite-list-item\n    label="Ut aliquam sollicitudin leo."\n    description="Aliquam tincidunt mauris eu risus."\n  ></calcite-list-item>\n  <calcite-list-item\n    label="Vestibulum commodo felis quis tortor.\n  "\n    description="Vestibulum auctor dapibus neque.\n  "\n  ></calcite-list-item>\n</calcite-list>\n```\n\n### Grouped\n\n```html\n<calcite-list>\n  <calcite-list-item-group heading="Digits">\n    <calcite-list-item\n      label="One"\n      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n    ></calcite-list-item>\n    <calcite-list-item label="Two" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>\n    <calcite-list-item label="Three" description="Vestibulum auctor dapibus neque."></calcite-list-item>\n  </calcite-list-item-group>\n  <calcite-list-item-group heading="Letters">\n    <calcite-list-item\n      label="A"\n      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n    ></calcite-list-item>\n    <calcite-list-item label="B" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>\n    <calcite-list-item\n      label="C"\n      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n    ></calcite-list-item>\n  </calcite-list-item-group>\n</calcite-list>\n```\n\n### Nested\n\n```html\n<calcite-list>\n  <calcite-list-item\n    label="Cras iaculis ultricies nulla."\n    description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n  >\n    <calcite-list-item label="Ut aliquam sollicitudin leo." description="Aliquam tincidunt mauris eu risus.">\n      <calcite-list-item\n        label="Vestibulum commodo felis quis tortor."\n        description="Vestibulum auctor dapibus neque."\n      ></calcite-list-item></calcite-list-item\n  ></calcite-list-item>\n</calcite-list>\n```\n\n## Properties\n\n| Property       | Attribute       | Description                                                       | Type                         | Default     |\n| -------------- | --------------- | ----------------------------------------------------------------- | ---------------------------- | ----------- |\n| `headingLevel` | `heading-level` | Number at which section headings should start for this component. | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6` | `undefined` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description                                     |\n| ---- | ----------------------------------------------- |\n|      | A slot for adding `calcite-list-item` elements. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n','# calcite-list-item\n\nA general purpose list that enables users to construct list items that conform to Calcite styling.\n\nIf you are looking for a list that handles more advanced usage like selection, see the documentation for \'calcite-pick-list\' or \'calcite-value-list\'.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property         | Attribute         | Description                                                                   | Type      | Default     |\n| ---------------- | ----------------- | ----------------------------------------------------------------------------- | --------- | ----------- |\n| `description`    | `description`     | An optional description for this item. This will appear below the label text. | `string`  | `undefined` |\n| `disabled`       | `disabled`        | When true, disabled prevents interaction.                                     | `boolean` | `false`     |\n| `label`          | `label`           | The label text of the list item. This will appear above the description text. | `string`  | `undefined` |\n| `nonInteractive` | `non-interactive` | When true, prevents the content of the list item from user interaction.       | `boolean` | `false`     |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot              | Description                                                                                  |\n| ----------------- | -------------------------------------------------------------------------------------------- |\n|                   | A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.                |\n| `"actions-end"`   | A slot for adding actionable `calcite-action` elements after the content of the list item.   |\n| `"actions-start"` | A slot for adding actionable `calcite-action` elements before the content of the list item.  |\n| `"content-end"`   | A slot for adding non-actionable elements after the label and description of the list item.  |\n| `"content-start"` | A slot for adding non-actionable elements before the label and description of the list item. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n',"# calcite-list-item-group\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property       | Attribute       | Description                                                       | Type                         | Default     |\n| -------------- | --------------- | ----------------------------------------------------------------- | ---------------------------- | ----------- |\n| `heading`      | `heading`       | The title used for all nested `calcite-list-item` rows.           | `string`                     | `undefined` |\n| `headingLevel` | `heading-level` | Number at which section headings should start for this component. | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6` | `undefined` |\n\n## Slots\n\n| Slot | Description                                                                   |\n| ---- | ----------------------------------------------------------------------------- |\n|      | A slot for adding `calcite-list-item` and `calcite-list-item-group` elements. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n"]}},Object(tests_utils.b)({width:44,height:44})),Simple=function(){return tests_utils.a`
  <calcite-list>
    <calcite-list-item
      label="Cras iaculis ultricies nulla."
      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
    ></calcite-list-item>
    <calcite-list-item
      label="Ut aliquam sollicitudin leo."
      description="Aliquam tincidunt mauris eu risus."
    ></calcite-list-item>
    <calcite-list-item
      label="Vestibulum commodo felis quis tortor.
    "
      description="Vestibulum auctor dapibus neque.
    "
    ></calcite-list-item>
  </calcite-list>
`},OnlyLabel=function(){return tests_utils.a`
  <calcite-list>
    <calcite-list-item label="This has no description."> </calcite-list-item>
  </calcite-list>
`},OnlyDescription=function(){return tests_utils.a`
  <calcite-list>
    <calcite-list-item description="This has no label."> </calcite-list-item>
  </calcite-list>
`},NestedListItems=function(){return tests_utils.a`
  <calcite-list>
    <calcite-list-item
      label="Cras iaculis ultricies nulla."
      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
    >
      <calcite-list-item label="Ut aliquam sollicitudin leo." description="Aliquam tincidunt mauris eu risus.">
        <calcite-list-item
          label="Vestibulum commodo felis quis tortor."
          description="Vestibulum auctor dapibus neque."
        ></calcite-list-item></calcite-list-item
    ></calcite-list-item>
  </calcite-list>
`},GroupedItems=function(){return tests_utils.a`
  <calcite-list>
    <calcite-list-item-group heading="Digits">
      <calcite-list-item
        label="One"
        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
      ></calcite-list-item>
      <calcite-list-item label="Two" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>
      <calcite-list-item label="Three" description="Vestibulum auctor dapibus neque."></calcite-list-item>
    </calcite-list-item-group>
    <calcite-list-item-group heading="Letters">
      <calcite-list-item
        label="A"
        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
      ></calcite-list-item>
      <calcite-list-item label="B" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>
      <calcite-list-item
        label="C"
        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
      ></calcite-list-item>
    </calcite-list-item-group>
  </calcite-list>
`},RichContent=function(){return tests_utils.a`
  <calcite-list>
    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon
        scale="s"
        icon="exclamation-mark-triangle"
        slot="content-end"
        style="color: var(--calcite-ui-danger)"
      ></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
  </calcite-list>
`},RTL=function(){return tests_utils.a`
  <calcite-list dir="rtl">
    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon
        scale="s"
        icon="exclamation-mark-triangle"
        slot="content-end"
        style="color: var(--calcite-ui-danger)"
      ></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
  </calcite-list>
`},DarkMode=function(){return tests_utils.a`
  <calcite-list class="calcite-theme-dark">
    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon
        scale="s"
        icon="exclamation-mark-triangle"
        slot="content-end"
        style="color: var(--calcite-ui-danger)"
      ></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
  </calcite-list>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f},Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list>\n    <calcite-list-item\n      label="Cras iaculis ultricies nulla."\n      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n    ></calcite-list-item>\n    <calcite-list-item\n      label="Ut aliquam sollicitudin leo."\n      description="Aliquam tincidunt mauris eu risus."\n    ></calcite-list-item>\n    <calcite-list-item\n      label="Vestibulum commodo felis quis tortor.\n    "\n      description="Vestibulum auctor dapibus neque.\n    "\n    ></calcite-list-item>\n  </calcite-list>\n`'}},Simple.parameters),OnlyLabel.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list>\n    <calcite-list-item label="This has no description."> </calcite-list-item>\n  </calcite-list>\n`'}},OnlyLabel.parameters),OnlyDescription.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list>\n    <calcite-list-item description="This has no label."> </calcite-list-item>\n  </calcite-list>\n`'}},OnlyDescription.parameters),NestedListItems.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list>\n    <calcite-list-item\n      label="Cras iaculis ultricies nulla."\n      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n    >\n      <calcite-list-item label="Ut aliquam sollicitudin leo." description="Aliquam tincidunt mauris eu risus.">\n        <calcite-list-item\n          label="Vestibulum commodo felis quis tortor."\n          description="Vestibulum auctor dapibus neque."\n        ></calcite-list-item></calcite-list-item\n    ></calcite-list-item>\n  </calcite-list>\n`'}},NestedListItems.parameters),GroupedItems.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list>\n    <calcite-list-item-group heading="Digits">\n      <calcite-list-item\n        label="One"\n        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n      ></calcite-list-item>\n      <calcite-list-item label="Two" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>\n      <calcite-list-item label="Three" description="Vestibulum auctor dapibus neque."></calcite-list-item>\n    </calcite-list-item-group>\n    <calcite-list-item-group heading="Letters">\n      <calcite-list-item\n        label="A"\n        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n      ></calcite-list-item>\n      <calcite-list-item label="B" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>\n      <calcite-list-item\n        label="C"\n        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n      ></calcite-list-item>\n    </calcite-list-item-group>\n  </calcite-list>\n`'}},GroupedItems.parameters),RichContent.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list>\n    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon\n        scale="s"\n        icon="exclamation-mark-triangle"\n        slot="content-end"\n        style="color: var(--calcite-ui-danger)"\n      ></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n  </calcite-list>\n`'}},RichContent.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list dir="rtl">\n    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon\n        scale="s"\n        icon="exclamation-mark-triangle"\n        slot="content-end"\n        style="color: var(--calcite-ui-danger)"\n      ></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n  </calcite-list>\n`'}},RTL.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list class="calcite-theme-dark">\n    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon\n        scale="s"\n        icon="exclamation-mark-triangle"\n        slot="content-end"\n        style="color: var(--calcite-ui-danger)"\n      ></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n  </calcite-list>\n`'}},DarkMode.parameters)},"./src/components/loader/loader.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"NoPadding",(function(){return NoPadding})),__webpack_require__.d(__webpack_exports__,"Inline",(function(){return Inline})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"CustomTheme",(function(){return CustomTheme}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Loader",parameters:{notes:'# calcite-loader\n\nThe `calcite-loader` component can act as a determinate or indeterminate loading indicator.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nYou can use the `active` attribute to toggle visibility:\n\n```html\n<calcite-loader text="Fetching data..." active></calcite-loader>\n```\n\n### Compact\n\nFor instances when you don\'t have room for the full loader, you can use the smaller `inline` version of the loader. The inline version is meant to sit to the left of text:\n\n```html\n<p><calcite-loader active inline></calcite-loader> Inline loader</p>\n```\n\n### Determinate\n\nIf you can calculate your progress, it\'s best to use the determinate version of the loader. Update the `value` of the element when progress is made. This will display a progress bar along the perimeter of the loader showing 32% complete:\n\n```html\n<calcite-loader type="determinate" value="32" active></calcite-loader>\n```\n\n## Properties\n\n| Property             | Attribute    | Description                                                        | Type                               | Default     |\n| -------------------- | ------------ | ------------------------------------------------------------------ | ---------------------------------- | ----------- |\n| `active`             | `active`     | Show the loader                                                    | `boolean`                          | `false`     |\n| `inline`             | `inline`     | Inline loaders are smaller and will appear to the left of the text | `boolean`                          | `false`     |\n| `label` _(required)_ | `label`      | Accessible name for the component                                  | `string`                           | `undefined` |\n| `noPadding`          | `no-padding` | Turn off spacing around the loader                                 | `boolean`                          | `false`     |\n| `scale`              | `scale`      | Speficy the scale of the loader. Defaults to "m"                   | `"l" \\| "m" \\| "s"`                | `"m"`       |\n| `text`               | `text`       | Text which should appear under the loading indicator (optional)    | `string`                           | `""`        |\n| `type`               | `type`       | Use indeterminate if finding actual progress value is impossible   | `"determinate" \\| "indeterminate"` | `undefined` |\n| `value`              | `value`      | Percent complete of 100, only valid for determinate indicators     | `number`                           | `0`         |\n\n## CSS Custom Properties\n\n| Name                           | Description                                                      |\n| ------------------------------ | ---------------------------------------------------------------- |\n| `--calcite-loader-font-size`   | when type is determinate, the font-size of the loader percentage |\n| `--calcite-loader-size`        | the width and height of a non-inline loader                      |\n| `--calcite-loader-size-inline` | the width and height of an inline loader                         |\n\n## Dependencies\n\n### Used by\n\n- [calcite-action](../action)\n- [calcite-block](../block)\n- [calcite-button](../button)\n- [calcite-card](../card)\n- [calcite-scrim](../scrim)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-action --\x3e calcite-loader\n  calcite-block --\x3e calcite-loader\n  calcite-button --\x3e calcite-loader\n  calcite-card --\x3e calcite-loader\n  calcite-scrim --\x3e calcite-loader\n  style calcite-loader fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-loader
    active
    type="${Object(dist.select)("type",["determinate","indeterminate"],"indeterminate")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("no-padding",!1)}
    value="${Object(dist.number)("value",0,{range:!0,min:0,max:100,step:1})}"
  />
`}),NoPadding=function(){return tests_utils.a`
  <div style="border: 1px solid rgb(192,192,192, 0.5); width: 100px">
    <calcite-loader
      active
      type="${Object(dist.select)("type",["determinate","indeterminate"],"indeterminate")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("no-padding",!0)}
      value="${Object(dist.number)("value",0,{range:!0,min:0,max:100,step:1})}"
    />
  </div>
`},Inline=function(){return tests_utils.a`
<div style="display: inline-flex;align-items: center;justify-content: center;width: 100%;">
<calcite-loader
  scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  inline
  active
/></calcite-loader><span style="margin:0 10px">Next to some text</span>
</div>
`},DarkMode=function(){return tests_utils.a`
  <calcite-loader
    class="calcite-theme-dark"
    type="${Object(dist.select)("type",["determinate","indeterminate"],"indeterminate")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("no-padding",!1)}
    value="${Object(dist.number)("value",0,{range:!0,min:0,max:100,step:1})}"
    active
    class="calcite-theme-dark"
  />
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f};var CustomTheme=function(){return tests_utils.a`
  <calcite-loader
    type="${Object(dist.select)("type",["determinate","indeterminate"],"indeterminate")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("no-padding",!1)}
    value="${Object(dist.number)("value",0,{range:!0,min:0,max:100,step:1})}"
    style="
    --calcite-ui-brand: ${Object(dist.color)("calcite-ui-blue-1","#50ba5f")};
    --calcite-ui-brand-hover: ${Object(dist.color)("calcite-ui-blue-2","#1a6324")};
    --calcite-ui-brand-press: ${Object(dist.color)("calcite-ui-blue-3","#338033")};"
    active
  />
`};CustomTheme.storyName="Custom theme",Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-loader\n    active\n    type="${select("type", ["determinate", "indeterminate"], "indeterminate")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("no-padding", false)}\n    value="${number("value", 0, { range: true, min: 0, max: 100, step: 1 })}"\n  />\n`'}},Simple.parameters),NoPadding.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="border: 1px solid rgb(192,192,192, 0.5); width: 100px">\n    <calcite-loader\n      active\n      type="${select("type", ["determinate", "indeterminate"], "indeterminate")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("no-padding", true)}\n      value="${number("value", 0, { range: true, min: 0, max: 100, step: 1 })}"\n    />\n  </div>\n`'}},NoPadding.parameters),Inline.parameters=Object.assign({storySource:{source:'(): string => html`\n<div style="display: inline-flex;align-items: center;justify-content: center;width: 100%;">\n<calcite-loader\n  scale="${select("scale", ["s", "m", "l"], "m")}"\n  inline\n  active\n/></calcite-loader><span style="margin:0 10px">Next to some text</span>\n</div>\n`'}},Inline.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-loader\n    class="calcite-theme-dark"\n    type="${select("type", ["determinate", "indeterminate"], "indeterminate")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("no-padding", false)}\n    value="${number("value", 0, { range: true, min: 0, max: 100, step: 1 })}"\n    active\n    class="calcite-theme-dark"\n  />\n`'}},DarkMode.parameters),CustomTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-loader\n    type="${select("type", ["determinate", "indeterminate"], "indeterminate")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("no-padding", false)}\n    value="${number("value", 0, { range: true, min: 0, max: 100, step: 1 })}"\n    style="\n    --calcite-ui-brand: ${color("calcite-ui-blue-1", "#50ba5f")};\n    --calcite-ui-brand-hover: ${color("calcite-ui-blue-2", "#1a6324")};\n    --calcite-ui-brand-press: ${color("calcite-ui-blue-3", "#338033")};"\n    active\n  />\n`'}},CustomTheme.parameters)},"./src/components/modal/modal.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"CustomSize",(function(){return CustomSize})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Modal",parameters:{notes:'# calcite-modal\n\n`calcite-modal` allows you to show a modal/dialog to your users. The modal handles fencing focus and animating in/out.\n\n<style>\n  html {\n      overflow:auto !important;\n  }\n</style>\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nCustomize the modal by passing your content into multiple named slots: `header` (title-area of the modal), `content` (main body of the modal), and up to three modal actions: primary, secondary, and back. Notice below we use the `aria-labelledby` attribute, relating it to the title of the modal. In order to ensure good accessibility, it\'s recommended that you use either an `aria-label` or `aria-labelledby` attribute so screen readers can infer what the subject matter of your modal is.\n\n```html\n<calcite-modal aria-labelledby="modal-title" active>\n  <h3 slot="header" id="modal-title">Title of the modal</h3>\n  <div slot="content">The actual content of the modal</div>\n  <calcite-button slot="back" color="neutral" appearance="outline" icon="chevron-left" width="full">\n    Back\n  </calcite-button>\n  <calcite-button slot="secondary" width="full" appearance="outline"> Cancel </calcite-button>\n  <calcite-button slot="primary" width="full"> Save </calcite-button>\n</calcite-modal>\n```\n\n### Open\n\nTo open a modal, add the `active` prop. Once the opening animation is complete, the `calciteModalOpen` event will be fired.\n\nTo close the modal, simply remove the attribute. This will run your before close method (if provided, see below) and fire the `calciteModalClose` event after the animation and teardown is complete.\n\n```html\n<calcite-modal active></calcite-modal>\n```\n\n### Reacting-before-close\n\nIf you\'d like to perform some actions prior to closing (ie. warning users they will lose their changes) you can pass a function to the `beforeClose` property. This method will be called prior to close and should return a [`Promise`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise):\n\n```js\nfunction beforeClose() {\n  return new Promise((resolve) => {\n    // do something async\n    resolve(); // this will trigger the close animation\n  });\n}\n\nconst modal = document.getElementById("my-modal");\nmodal.beforeClose = beforeClose;\n```\n\n## Properties\n\n| Property              | Attribute               | Description                                                                                                 | Type                                 | Default                   |\n| --------------------- | ----------------------- | ----------------------------------------------------------------------------------------------------------- | ------------------------------------ | ------------------------- |\n| `active`              | `active`                | Add the active attribute to open the modal                                                                  | `boolean`                            | `false`                   |\n| `backgroundColor`     | `background-color`      | Background color of modal content                                                                           | `"grey" \\| "white"`                  | `"white"`                 |\n| `beforeClose`         | --                      | Optionally pass a function to run before close                                                              | `(el: HTMLElement) => Promise<void>` | `() => Promise.resolve()` |\n| `color`               | `color`                 | Adds a color bar at the top for visual impact, Use color to add importance to destructive/workflow dialogs. | `"blue" \\| "red"`                    | `undefined`               |\n| `disableCloseButton`  | `disable-close-button`  | Disables the display a close button within the Modal                                                        | `boolean`                            | `false`                   |\n| `disableEscape`       | `disable-escape`        | Flag to disable the default close on escape behavior                                                        | `boolean`                            | `false`                   |\n| `disableOutsideClose` | `disable-outside-close` | Disables the closing of the Modal when clicked outside.                                                     | `boolean`                            | `false`                   |\n| `docked`              | `docked`                | Prevent the modal from taking up the entire screen on mobile                                                | `boolean`                            | `undefined`               |\n| `firstFocus`          | --                      | Specify an element to focus when the modal is first opened                                                  | `HTMLElement`                        | `undefined`               |\n| `fullscreen`          | `fullscreen`            | Set the modal to always be fullscreen (overrides width)                                                     | `boolean`                            | `undefined`               |\n| `intlClose`           | `intl-close`            | Aria label for the close button                                                                             | `string`                             | `TEXT.close`              |\n| `noPadding`           | `no-padding`            | Turn off spacing around the content area slot                                                               | `boolean`                            | `false`                   |\n| `scale`               | `scale`                 | specify the scale of modal, defaults to m                                                                   | `"l" \\| "m" \\| "s"`                  | `"m"`                     |\n| `width`               | `width`                 | Set the width of the modal. Can use stock sizes or pass a number (in pixels)                                | `"l" \\| "m" \\| "s" \\| number`        | `"m"`                     |\n\n## Events\n\n| Event               | Description                                       | Type               |\n| ------------------- | ------------------------------------------------- | ------------------ |\n| `calciteModalClose` | Fired when the modal finishes the close animation | `CustomEvent<any>` |\n| `calciteModalOpen`  | Fired when the modal finishes the open animation  | `CustomEvent<any>` |\n\n## Methods\n\n### `focusElement(el?: HTMLElement) => Promise<void>`\n\n<span style="color:red">**[DEPRECATED]**</span> use `setFocus` instead.<br/><br/>Focus first interactive element\n\n#### Returns\n\nType: `Promise<void>`\n\n### `scrollContent(top?: number, left?: number) => Promise<void>`\n\nSet the scroll top of the modal content\n\n#### Returns\n\nType: `Promise<void>`\n\n### `setFocus(focusId?: "close-button") => Promise<void>`\n\nSets focus on the component.\n\nBy default, will try to focus on any focusable content. If there is none, it will focus on the close button.\nIf you want to focus on the close button, you can use the `close-button` focus ID.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot          | Description                          |\n| ------------- | ------------------------------------ |\n| `"back"`      | a slot for adding a back button      |\n| `"content"`   | a slot for adding modal content      |\n| `"header"`    | a slot for adding a modal header     |\n| `"primary"`   | a slot for adding a primary button   |\n| `"secondary"` | a slot for adding a secondary button |\n\n## CSS Custom Properties\n\n| Name                            | Description                                        |\n| ------------------------------- | -------------------------------------------------- |\n| `--calcite-modal-content-text`  | the font-size of the modal content                 |\n| `--calcite-modal-padding`       | the top/bottom padding around items in the modal   |\n| `--calcite-modal-padding-large` | the left/right padding around items in the modal   |\n| `--calcite-modal-title-text`    | the font-size of the modal title                   |\n| `--calcite-scrim-background`    | the semi-transparent background color behind modal |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-scrim](../scrim)\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-modal --\x3e calcite-scrim\n  calcite-modal --\x3e calcite-icon\n  calcite-scrim --\x3e calcite-loader\n  style calcite-modal fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-modal
    ${Object(helpers.a)("active",!0)}
    color="${Object(dist.select)("color",{blue:"blue",red:"red",none:""},"")}"
    background-color="${Object(dist.select)("background-color",["white","grey"],"white")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"s")}"
    ${Object(helpers.a)("fullscreen",!1)}
    ${Object(helpers.a)("docked",!1)}
    ${Object(helpers.a)("disable-escape",!1)}
    ${Object(helpers.a)("no-padding",!1)}
    intl-close="${Object(dist.text)("intl-close","Close")}"
  >
    <h3 slot="header">Small Modal</h3>
    <div slot="content">
      <p>The small modal is perfect for short confirmation dialogs or very compact interfaces with few elements.</p>
    </div>
    <calcite-button slot="back" color="neutral" appearance="outline" icon="chevron-left" width="full"
      >Back</calcite-button
    >
    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>
    <calcite-button slot="primary" width="full">Save</calcite-button>
  </calcite-modal>
`}),CustomSize=function(){return tests_utils.a`
  <calcite-modal active width="${Object(dist.number)("width",500)}">
    <h3 slot="header">Custom Size</h3>
    <div slot="content">
      <p>
        By passing a number rather than "small", "medium", "large", or "fullscreen", you can set your own max width for
        the modal. Below this size, the modal will become fullscreen.
      </p>
    </div>
    <calcite-button slot="back" color="neutral" appearance="outline" icon="chevron-left" width="full"
      >Back</calcite-button
    >
    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>
    <calcite-button slot="primary" width="full">Save</calcite-button>
  </calcite-modal>
`},DarkMode=function(){return tests_utils.a`
  <calcite-modal
    class="calcite-theme-dark"
    ${Object(helpers.a)("active",!0)}
    color="${Object(dist.select)("color",{blue:"blue",red:"red",none:""},"")}"
    background-color="${Object(dist.select)("background-color",["white","grey"],"white")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"s")}"
    ${Object(helpers.a)("fullscreen",!1)}
    ${Object(helpers.a)("docked",!1)}
    ${Object(helpers.a)("disable-escape",!1)}
    ${Object(helpers.a)("no-padding",!1)}
    intl-close="${Object(dist.text)("intl-close","Close")}"
  >
    <h3 slot="header">Small Modal</h3>
    <div slot="content">
      <p>The small modal is perfect for short confirmation dialogs or very compact interfaces with few elements.</p>
    </div>
    <calcite-button slot="back" color="neutral" appearance="outline" icon="chevron-left" width="full"
      >Back</calcite-button
    >
    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>
    <calcite-button slot="primary" width="full">Save</calcite-button>
  </calcite-modal>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f};var RTL=function(){return tests_utils.a`
  <calcite-modal
    dir="rtl"
    ${Object(helpers.a)("active",!0)}
    color="${Object(dist.select)("color",{blue:"blue",red:"red",none:""},"")}"
    background-color="${Object(dist.select)("background-color",["white","grey"],"white")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"s")}"
    ${Object(helpers.a)("fullscreen",!1)}
    ${Object(helpers.a)("docked",!1)}
    ${Object(helpers.a)("disable-escape",!1)}
    ${Object(helpers.a)("no-padding",!1)}
    intl-close="${Object(dist.text)("intl-close","Close")}"
  >
    <h3 slot="header">Small Modal</h3>
    <div slot="content">
      <p>The small modal is perfect for short confirmation dialogs or very compact interfaces with few elements.</p>
    </div>
    <calcite-button slot="back" color="neutral" appearance="outline" icon="chevron-left" width="full"
      >Back</calcite-button
    >
    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>
    <calcite-button slot="primary" width="full">Save</calcite-button>
  </calcite-modal>
`};Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-modal\n    ${boolean("active", true)}\n    color="${select("color", { blue: "blue", red: "red", none: "" }, "")}"\n    background-color="${select("background-color", ["white", "grey"], "white")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "s")}"\n    ${boolean("fullscreen", false)}\n    ${boolean("docked", false)}\n    ${boolean("disable-escape", false)}\n    ${boolean("no-padding", false)}\n    intl-close="${text("intl-close", "Close")}"\n  >\n    <h3 slot="header">Small Modal</h3>\n    <div slot="content">\n      <p>The small modal is perfect for short confirmation dialogs or very compact interfaces with few elements.</p>\n    </div>\n    <calcite-button slot="back" color="neutral" appearance="outline" icon="chevron-left" width="full"\n      >Back</calcite-button\n    >\n    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>\n    <calcite-button slot="primary" width="full">Save</calcite-button>\n  </calcite-modal>\n`'}},Simple.parameters),CustomSize.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-modal active width="${number("width", 500)}">\n    <h3 slot="header">Custom Size</h3>\n    <div slot="content">\n      <p>\n        By passing a number rather than "small", "medium", "large", or "fullscreen", you can set your own max width for\n        the modal. Below this size, the modal will become fullscreen.\n      </p>\n    </div>\n    <calcite-button slot="back" color="neutral" appearance="outline" icon="chevron-left" width="full"\n      >Back</calcite-button\n    >\n    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>\n    <calcite-button slot="primary" width="full">Save</calcite-button>\n  </calcite-modal>\n`'}},CustomSize.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-modal\n    class="calcite-theme-dark"\n    ${boolean("active", true)}\n    color="${select("color", { blue: "blue", red: "red", none: "" }, "")}"\n    background-color="${select("background-color", ["white", "grey"], "white")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "s")}"\n    ${boolean("fullscreen", false)}\n    ${boolean("docked", false)}\n    ${boolean("disable-escape", false)}\n    ${boolean("no-padding", false)}\n    intl-close="${text("intl-close", "Close")}"\n  >\n    <h3 slot="header">Small Modal</h3>\n    <div slot="content">\n      <p>The small modal is perfect for short confirmation dialogs or very compact interfaces with few elements.</p>\n    </div>\n    <calcite-button slot="back" color="neutral" appearance="outline" icon="chevron-left" width="full"\n      >Back</calcite-button\n    >\n    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>\n    <calcite-button slot="primary" width="full">Save</calcite-button>\n  </calcite-modal>\n`'}},DarkMode.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-modal\n    dir="rtl"\n    ${boolean("active", true)}\n    color="${select("color", { blue: "blue", red: "red", none: "" }, "")}"\n    background-color="${select("background-color", ["white", "grey"], "white")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "s")}"\n    ${boolean("fullscreen", false)}\n    ${boolean("docked", false)}\n    ${boolean("disable-escape", false)}\n    ${boolean("no-padding", false)}\n    intl-close="${text("intl-close", "Close")}"\n  >\n    <h3 slot="header">Small Modal</h3>\n    <div slot="content">\n      <p>The small modal is perfect for short confirmation dialogs or very compact interfaces with few elements.</p>\n    </div>\n    <calcite-button slot="back" color="neutral" appearance="outline" icon="chevron-left" width="full"\n      >Back</calcite-button\n    >\n    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>\n    <calcite-button slot="primary" width="full">Save</calcite-button>\n  </calcite-modal>\n`'}},RTL.parameters)},"./src/components/notice/notice.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"CustomIcon",(function(){return CustomIcon})),__webpack_require__.d(__webpack_exports__,"WithAction",(function(){return WithAction})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"Rtl",(function(){return Rtl}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Notice",parameters:{notes:'# calcite-notice\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-notice scale="l" width="half" active>\n  <div slot="title">Something failed</div>\n  <div slot="message">That thing you wanted to do didn\'t work as expected</div>\n  <calcite-link slot="link" href="/">View details</calcite-link>\n  <calcite-action id="retry-action" slot="actions-end" title="Retry" icon="reset"></calcite-action>\n</calcite-notice>\n```\n\n### Set-focus\n\nYou can programmatically focus the close button of a `dismissible` `calcite-notice` with the `setFocus()` method:\n\n```html\n<div onclick="document.querySelector(\'#my-notice\').setFocus();">Focus!</div>\n```\n\n## Properties\n\n| Property      | Attribute     | Description                                                                                                                                            | Type                                     | Default      |\n| ------------- | ------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------------------- | ------------ |\n| `active`      | `active`      | Is the notice currently active or not                                                                                                                  | `boolean`                                | `false`      |\n| `color`       | `color`       | Color for the notice (will apply to top border and icon)                                                                                               | `"blue" \\| "green" \\| "red" \\| "yellow"` | `"blue"`     |\n| `dismissible` | `dismissible` | Optionally show a button the user can click to dismiss the notice                                                                                      | `boolean`                                | `false`      |\n| `icon`        | `icon`        | when used as a boolean set to true, show a default recommended icon. You can also pass a calcite-ui-icon name to this prop to display a requested icon | `boolean \\| string`                      | `undefined`  |\n| `intlClose`   | `intl-close`  | String for the close button.                                                                                                                           | `string`                                 | `TEXT.close` |\n| `scale`       | `scale`       | specify the scale of the notice, defaults to m                                                                                                         | `"l" \\| "m" \\| "s"`                      | `"m"`        |\n| `width`       | `width`       | specify the width of the notice, defaults to auto                                                                                                      | `"auto" \\| "full" \\| "half"`             | `"auto"`     |\n\n## Events\n\n| Event                | Description                    | Type               |\n| -------------------- | ------------------------------ | ------------------ |\n| `calciteNoticeClose` | Fired when an notice is closed | `CustomEvent<any>` |\n| `calciteNoticeOpen`  | Fired when an Notice is opened | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot            | Description                                                                                            |\n| --------------- | ------------------------------------------------------------------------------------------------------ |\n| `"actions-end"` | Allows adding a `calcite-action` at the end of the notice. It is recommended to use 2 or less actions. |\n| `"link"`        | Optional action to take from the notice (undo, try again, link to page, etc.)                          |\n| `"message"`     | Main text of the notice                                                                                |\n| `"title"`       | Title of the notice (optional)                                                                         |\n\n## CSS Custom Properties\n\n| Name                     | Description             |\n| ------------------------ | ----------------------- |\n| `--calcite-notice-width` | the width of the notice |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-notice --\x3e calcite-icon\n  style calcite-notice fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <div style="width:600px;max-width:100%;text-align:center;">
    <calcite-notice
      ${Object(helpers.a)("icon",!0)}
      ${Object(helpers.a)("active",!0)}
      ${Object(helpers.a)("dismissible",!0)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      color="${Object(dist.select)("color",["green","red","yellow","blue"],"blue")}"
    >
      <div slot="title">Your settings area has changed</div>
      <div slot="message">Look around and let us know what you think</div>
      <calcite-link slot="link" title="my action">Learn more</calcite-link>
    </calcite-notice>
  </div>
`}),CustomIcon=function(){return tests_utils.a`
  <div style="width:600px;max-width:100%;text-align:center;">
    <calcite-notice
      icon="${Object(dist.select)("icon",helpers.c,helpers.c[0])}"
      ${Object(helpers.a)("active",!0)}
      ${Object(helpers.a)("dismissible",!0)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      color="${Object(dist.select)("color",["green","red","yellow","blue"],"blue")}"
    >
      <div slot="title">Your settings area has changed</div>
      <div slot="message">Look around and let us know what you think</div>
      <calcite-link slot="link" title="my action">Learn more</calcite-link>
    </calcite-notice>
  </div>
`};CustomIcon.storyName="Custom icon";var WithAction=function(){return tests_utils.a`
  <div style="width:600px;max-width:100%;text-align:center;">
    <calcite-notice
      ${Object(helpers.a)("icon",!0)}
      ${Object(helpers.a)("active",!0)}
      ${Object(helpers.a)("dismissible",!1)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      color="${Object(dist.select)("color",["green","red","yellow","blue"],"red")}"
    >
      <div slot="title">Notice with action</div>
      <div slot="message">This shows a notice with a custom action</div>
      <calcite-action
        label="Retry"
        icon="reset"
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        slot="actions-end"
      ></calcite-action>
    </calcite-notice>
  </div>
`},DarkMode=function(){return tests_utils.a`
  <div style="width:600px;max-width:100%;text-align:center;">
    <calcite-notice
      class="calcite-theme-dark"
      ${Object(helpers.a)("icon",!0)}
      ${Object(helpers.a)("active",!0)}
      ${Object(helpers.a)("dismissible",!1)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      color="${Object(dist.select)("color",["green","red","yellow","blue"],"red")}"
    >
      <div slot="title">This is a destructive action</div>
      <div slot="message">Be sure you know what you are doin, folks.</div>
    </calcite-notice>
  </div>
`};DarkMode.parameters={themes:utils.f};var Rtl=function(){return tests_utils.a`
  <div dir="rtl" style="width:600px;max-width:100%;text-align:center;">
    <calcite-notice
      ${Object(helpers.a)("icon",!0)}
      ${Object(helpers.a)("active",!0)}
      ${Object(helpers.a)("dismissible",!0)}
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      color="${Object(dist.select)("color",["green","red","yellow","blue"],"blue")}"
    >
      <div slot="title">Your settings area has changed</div>
      <div slot="message">Look around and let us know what you think</div>
      <calcite-link slot="link" title="my action">Learn more</calcite-link>
    </calcite-notice>
  </div>
`};Rtl.storyName="RTL",Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:600px;max-width:100%;text-align:center;">\n    <calcite-notice\n      ${boolean("icon", true)}\n      ${boolean("active", true)}\n      ${boolean("dismissible", true)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      color="${select("color", ["green", "red", "yellow", "blue"], "blue")}"\n    >\n      <div slot="title">Your settings area has changed</div>\n      <div slot="message">Look around and let us know what you think</div>\n      <calcite-link slot="link" title="my action">Learn more</calcite-link>\n    </calcite-notice>\n  </div>\n`'}},Simple.parameters),CustomIcon.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:600px;max-width:100%;text-align:center;">\n    <calcite-notice\n      icon="${select("icon", iconNames, iconNames[0])}"\n      ${boolean("active", true)}\n      ${boolean("dismissible", true)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      color="${select("color", ["green", "red", "yellow", "blue"], "blue")}"\n    >\n      <div slot="title">Your settings area has changed</div>\n      <div slot="message">Look around and let us know what you think</div>\n      <calcite-link slot="link" title="my action">Learn more</calcite-link>\n    </calcite-notice>\n  </div>\n`'}},CustomIcon.parameters),WithAction.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:600px;max-width:100%;text-align:center;">\n    <calcite-notice\n      ${boolean("icon", true)}\n      ${boolean("active", true)}\n      ${boolean("dismissible", false)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      color="${select("color", ["green", "red", "yellow", "blue"], "red")}"\n    >\n      <div slot="title">Notice with action</div>\n      <div slot="message">This shows a notice with a custom action</div>\n      <calcite-action\n        label="Retry"\n        icon="reset"\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        slot="actions-end"\n      ></calcite-action>\n    </calcite-notice>\n  </div>\n`'}},WithAction.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:600px;max-width:100%;text-align:center;">\n    <calcite-notice\n      class="calcite-theme-dark"\n      ${boolean("icon", true)}\n      ${boolean("active", true)}\n      ${boolean("dismissible", false)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      color="${select("color", ["green", "red", "yellow", "blue"], "red")}"\n    >\n      <div slot="title">This is a destructive action</div>\n      <div slot="message">Be sure you know what you are doin, folks.</div>\n    </calcite-notice>\n  </div>\n`'}},DarkMode.parameters),Rtl.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div dir="rtl" style="width:600px;max-width:100%;text-align:center;">\n    <calcite-notice\n      ${boolean("icon", true)}\n      ${boolean("active", true)}\n      ${boolean("dismissible", true)}\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      color="${select("color", ["green", "red", "yellow", "blue"], "blue")}"\n    >\n      <div slot="title">Your settings area has changed</div>\n      <div slot="message">Look around and let us know what you think</div>\n      <calcite-link slot="link" title="my action">Learn more</calcite-link>\n    </calcite-notice>\n  </div>\n`'}},Rtl.parameters)},"./src/components/pagination/pagination.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Pagination",parameters:{notes:'# calcite-pagination\n\n`calcite-pagination` allows users to select a page from a paginated API.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nThe component is meant to interface with responses from ArcGIS REST services, so the props share names with [response properties](https://developers.arcgis.com/rest/users-groups-and-items/search.htm) from various search endpoints.\n\nFor example, after querying the search API, you\'ll get back a response similar to JSON below. The response can be passed straight to the `calcite-pagination` component.\n\n```JSON\n{\n  "total": 2021,\n  "start": 1,\n  "num": 100,\n  "results": []\n}\n```\n\n```html\n<calcite-pagination start="1" num="100" total="2021"></calcite-pagination>\n```\n\n## Properties\n\n| Property            | Attribute             | Description                                                     | Type                | Default              |\n| ------------------- | --------------------- | --------------------------------------------------------------- | ------------------- | -------------------- |\n| `num`               | `num`                 | number of items per page                                        | `number`            | `20`                 |\n| `scale`             | `scale`               | The scale of the pagination                                     | `"l" \\| "m" \\| "s"` | `"m"`                |\n| `start`             | `start`               | index of item that should begin the page                        | `number`            | `1`                  |\n| `textLabelNext`     | `text-label-next`     | Used as an accessible label (aria-label) for the next button    | `string`            | `TEXT.nextLabel`     |\n| `textLabelPrevious` | `text-label-previous` | Used as an accessible label (aria-label) of the previous button | `string`            | `TEXT.previousLabel` |\n| `total`             | `total`               | total number of items                                           | `number`            | `0`                  |\n\n## Events\n\n| Event                     | Description                                                                                                                              | Type                            |\n| ------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------- |\n| `calcitePaginationChange` | Emitted whenever the selected page changes.                                                                                              | `CustomEvent<PaginationDetail>` |\n| `calcitePaginationUpdate` | <span style="color:red">**[DEPRECATED]**</span> use calcitePaginationChange instead<br/><br/>Emitted whenever the selected page changes. | `CustomEvent<PaginationDetail>` |\n\n## Methods\n\n### `nextPage() => Promise<void>`\n\nGo to the next page of results\n\n#### Returns\n\nType: `Promise<void>`\n\n### `previousPage() => Promise<void>`\n\nGo to the previous page of results\n\n#### Returns\n\nType: `Promise<void>`\n\n## CSS Custom Properties\n\n| Name                           | Description                                       |\n| ------------------------------ | ------------------------------------------------- |\n| `--calcite-pagination-spacing` | the amount of padding around each pagination item |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-pagination --\x3e calcite-icon\n  style calcite-pagination fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-pagination
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    start="${Object(dist.number)("start",1)}"
    total="${Object(dist.number)("total",128)}"
    num="${Object(dist.number)("num",20)}"
    dir="${Object(dist.select)("dir",["ltr","rtl"],"ltr")}"
  >
  </calcite-pagination>
`}),DarkMode=function(){return tests_utils.a`
  <calcite-pagination
    class="calcite-theme-dark"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    start="${Object(dist.number)("start",1)}"
    total="${Object(dist.number)("total",128)}"
    num="${Object(dist.number)("num",20)}"
    dir="${Object(dist.select)("dir",["ltr","rtl"],"ltr")}"
    class="calcite-theme-dark"
  >
  </calcite-pagination>
`};DarkMode.parameters={themes:utils.f};var RTL=function(){return tests_utils.a`
  <calcite-pagination
    dir="rtl"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    start="${Object(dist.number)("start",1)}"
    total="${Object(dist.number)("total",128)}"
    num="${Object(dist.number)("num",20)}"
    dir="${Object(dist.select)("dir",["ltr","rtl"],"ltr")}"
  >
  </calcite-pagination>
`};Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-pagination\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    start="${number("start", 1)}"\n    total="${number("total", 128)}"\n    num="${number("num", 20)}"\n    dir="${select("dir", ["ltr", "rtl"], "ltr")}"\n  >\n  </calcite-pagination>\n`'}},Simple.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-pagination\n    class="calcite-theme-dark"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    start="${number("start", 1)}"\n    total="${number("total", 128)}"\n    num="${number("num", 20)}"\n    dir="${select("dir", ["ltr", "rtl"], "ltr")}"\n    class="calcite-theme-dark"\n  >\n  </calcite-pagination>\n`'}},DarkMode.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-pagination\n    dir="rtl"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    start="${number("start", 1)}"\n    total="${number("total", 128)}"\n    num="${number("num", 20)}"\n    dir="${select("dir", ["ltr", "rtl"], "ltr")}"\n  >\n  </calcite-pagination>\n`'}},RTL.parameters)},"./src/components/panel/panel.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"withButton",(function(){return withButton})),__webpack_require__.d(__webpack_exports__,"onlyProps",(function(){return onlyProps})),__webpack_require__.d(__webpack_exports__,"withStyledSlot",(function(){return withStyledSlot})),__webpack_require__.d(__webpack_exports__,"darkThemeRTL",(function(){return darkThemeRTL}));var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),_storybook_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/utils.tsx"),_storybook_resources__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./.storybook/resources.ts"),_readme_md__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/panel/readme.md"),_resources__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/panel/resources.ts"),_tests_utils__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/tests/utils.ts");__webpack_exports__.default={title:"Components/Panel",parameters:{notes:_readme_md__WEBPACK_IMPORTED_MODULE_3__.a}};var createAttributes=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,scale=_storybook_resources__WEBPACK_IMPORTED_MODULE_2__.a.scale;return Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_1__.b)([{name:"dismissed",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("dismissed",!1),delete this.build,this}},{name:"disabled",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("disabled",!1),delete this.build,this}},{name:"dismissible",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("dismissible",!1),delete this.build,this}},{name:"height-scale",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.select)("heightScale",scale.values,scale.defaultValue),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("loading",!1),delete this.build,this}},{name:"intl-close",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("intlClose",_resources__WEBPACK_IMPORTED_MODULE_4__.b.close),delete this.build,this}}],exceptions)},headerHTML=`<h3 class="heading" slot="${_resources__WEBPACK_IMPORTED_MODULE_4__.a.headerContent}">Heading</h3>`,contentHTML=_tests_utils__WEBPACK_IMPORTED_MODULE_5__.a`
  <p>
    Enim nascetur erat faucibus ornare varius arcu fames bibendum habitant felis elit ante. Nibh morbi massa curae; leo
    semper diam aenean congue taciti eu porta. Varius faucibus ridiculus donec. Montes sit ligula purus porta ante lacus
    habitasse libero cubilia purus! In quis congue arcu maecenas felis cursus pellentesque nascetur porta donec non.
    Quisque, rutrum ligula pharetra justo habitasse facilisis rutrum neque. Magnis nostra nec nulla dictumst taciti
    consectetur. Non porttitor tempor orci dictumst magna porta vitae.
  </p>
  <p>
    Ipsum nostra tempus etiam augue ullamcorper scelerisque sapien potenti erat nisi gravida. Vehicula sem tristique
    sed. Nullam, sociis imperdiet ullamcorper? Dapibus fames primis ridiculus vulputate, habitant inceptos! Nunc
    torquent lorem urna vehicula volutpat donec nec. Orci massa eu nec donec enim fames, faucibus quam aenean. Laoreet
    tellus tempor quisque ornare lobortis praesent erat senectus natoque consectetur donec imperdiet. Quis sem cum
    gravida dictumst a pretium purus aptent amet id. Orci habitasse, praesent facilisis condimentum. Nec elit turpis
    leo.
  </p>
  <p>
    Tempus per volutpat diam tempor mauris parturient vulputate leo id libero quisque. Mattis aliquam dictum venenatis
    fringilla. Taciti venenatis, ultrices sollicitudin consequat. Sapien fusce est iaculis potenti ut auctor potenti.
    Nisi malesuada feugiat vulputate vitae porttitor. Nullam nullam nullam accumsan quis magna in. Elementum, nascetur
    gravida cras scelerisque inceptos aenean inceptos potenti. Lobortis condimentum accumsan posuere curabitur fermentum
    diam, natoque quisque. Eget placerat sed aptent orci urna fusce magnis. Vel lacus magnis nunc.
  </p>
`,footerHTML=_tests_utils__WEBPACK_IMPORTED_MODULE_5__.a`
  <calcite-button slot="${_resources__WEBPACK_IMPORTED_MODULE_4__.a.footer}" width="half" appearance="clear">Naw.</calcite-button>
  <calcite-button slot="${_resources__WEBPACK_IMPORTED_MODULE_4__.a.footer}" width="half">Yeah!</calcite-button>
`,panelContent=`${headerHTML}\n  <calcite-action text="Action" label="Action" slot="${_resources__WEBPACK_IMPORTED_MODULE_4__.a.headerActionsStart}" icon="bluetooth"></calcite-action>\n  <calcite-action text="Action" label="Action" slot="${_resources__WEBPACK_IMPORTED_MODULE_4__.a.headerActionsEnd}" icon="attachment"></calcite-action>\n  ${contentHTML}\n  ${footerHTML}`,basic=function(){return Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_1__.a)("calcite-panel",createAttributes(),panelContent)},withButton=function(){return Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_1__.a)("calcite-panel",createAttributes(),_tests_utils__WEBPACK_IMPORTED_MODULE_5__.a`
      ${headerHTML}
      <calcite-action text="Action" label="Action" slot="${_resources__WEBPACK_IMPORTED_MODULE_4__.a.headerActionsStart}" icon="bluetooth"></calcite-action>
      <calcite-action text="Action" label="Action" slot="${_resources__WEBPACK_IMPORTED_MODULE_4__.a.headerActionsEnd}" icon="attachment"></calcite-action>
      ${contentHTML}
      <calcite-fab slot="fab"></calcite-fab>
      ${footerHTML}
    `)},onlyProps=function(){return _tests_utils__WEBPACK_IMPORTED_MODULE_5__.a`
  <div style="width: 300px;">
    <calcite-panel
      height-scale="s"
      heading="Panel title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"
      summary="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    />
  </div>
`},withStyledSlot=function(){return _tests_utils__WEBPACK_IMPORTED_MODULE_5__.a`
  <calcite-panel style="height: 100%;" heading="Heading">
    <div id="content" style="height: 100%;">${contentHTML}</div>
  </calcite-panel>
`},darkThemeRTL=function(){return Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_1__.a)("calcite-panel",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-theme-dark"}]),panelContent)};darkThemeRTL.parameters={themes:_storybook_utils__WEBPACK_IMPORTED_MODULE_1__.f},basic.parameters=Object.assign({storySource:{source:'(): string => create("calcite-panel", createAttributes(), panelContent)'}},basic.parameters),withButton.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-panel",\n    createAttributes(),\n    html`\n      ${headerHTML}\n      <calcite-action text="Action" label="Action" slot="${SLOTS.headerActionsStart}" icon="bluetooth"></calcite-action>\n      <calcite-action text="Action" label="Action" slot="${SLOTS.headerActionsEnd}" icon="attachment"></calcite-action>\n      ${contentHTML}\n      <calcite-fab slot="fab"></calcite-fab>\n      ${footerHTML}\n    `\n  )'}},withButton.parameters),onlyProps.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 300px;">\n    <calcite-panel\n      height-scale="s"\n      heading="Panel title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"\n      summary="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    />\n  </div>\n`'}},onlyProps.parameters),withStyledSlot.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-panel style="height: 100%;" heading="Heading">\n    <div id="content" style="height: 100%;">${contentHTML}</div>\n  </calcite-panel>\n`'}},withStyledSlot.parameters),darkThemeRTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-panel",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-theme-dark"\n      }\n    ]),\n    panelContent\n  )'}},darkThemeRTL.parameters)},"./src/components/panel/readme.md":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.a='# calcite-panel\n\nThe `calcite-panel` component is a container for a header, content and optional footer. The header will have centered content as well as optional leading and trailing content. The panel can also be setup to be dismissible which allows it to be closed by a user.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nRenders a basic panel with a header.\n\n```html\n<calcite-panel>\n  <div slot="header-content">Header!</div>\n  <p>Slotted content!</p>\n</calcite-panel>\n```\n\n### Dismissible\n\nRenders a panel that is dismissible with a click of the "x".\n\n```html\n<calcite-panel dismissible id="dismissible-panel">\n  <div slot="header-content">Dismissible Header</div>\n  <p>Click the X and I go away!</p>\n</calcite-panel>\n```\n\n### Header-with-actions\n\nRenders a panel with leading and trailing `calcite-action`s.\n\n```html\n<calcite-panel>\n  <calcite-action\n    label="Performs my custom action"\n    text="Perform Action!"\n    text-enabled\n    icon="home"\n    slot="header-actions-start"\n  ></calcite-action>\n  <div slot="header-content">Header!</div>\n  <calcite-action\n    label="Performs another custom action"\n    text="Perform Another Action!"\n    text-enabled\n    icon="blog"\n    slot="header-actions-end"\n  ></calcite-action>\n  <p>Actions are in the top left and right.</p>\n</calcite-panel>\n```\n\n### With-footer\n\nRenders a panel with a header and a footer.\n\n```html\n<calcite-panel>\n  <div slot="header-content">Header!</div>\n  <p>I have a footer.</p>\n  <div slot="footer">Footer!</div>\n</calcite-panel>\n```\n\n## Properties\n\n| Property         | Attribute          | Description                                                                                               | Type                         | Default     |\n| ---------------- | ------------------ | --------------------------------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `beforeBack`     | --                 | When provided, this method will be called before it is removed from the parent flow.                      | `() => Promise<void>`        | `undefined` |\n| `disabled`       | `disabled`         | When true, disabled prevents interaction. This state shows items with lower opacity/grayed.               | `boolean`                    | `false`     |\n| `dismissed`      | `dismissed`        | Hides the panel.                                                                                          | `boolean`                    | `false`     |\n| `dismissible`    | `dismissible`      | Displays a close button in the trailing side of the header.                                               | `boolean`                    | `false`     |\n| `heading`        | `heading`          | Heading text.                                                                                             | `string`                     | `undefined` |\n| `headingLevel`   | `heading-level`    | Number at which section headings should start for this component.                                         | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6` | `undefined` |\n| `heightScale`    | `height-scale`     | Specifies the maximum height of the panel.                                                                | `"l" \\| "m" \\| "s"`          | `undefined` |\n| `intlBack`       | `intl-back`        | \'Back\' text string.                                                                                       | `string`                     | `undefined` |\n| `intlClose`      | `intl-close`       | \'Close\' text string for the close button. The close button will only be shown when \'dismissible\' is true. | `string`                     | `undefined` |\n| `intlOptions`    | `intl-options`     | \'Options\' text string for the actions menu.                                                               | `string`                     | `undefined` |\n| `loading`        | `loading`          | When true, content is waiting to be loaded. This state shows a busy indicator.                            | `boolean`                    | `false`     |\n| `menuOpen`       | `menu-open`        | Opens the action menu.                                                                                    | `boolean`                    | `false`     |\n| `showBackButton` | `show-back-button` | Shows a back button in the header.                                                                        | `boolean`                    | `false`     |\n| `summary`        | `summary`          | Summary text. A description displayed underneath the heading.                                             | `string`                     | `undefined` |\n| `widthScale`     | `width-scale`      | This sets width of the panel.                                                                             | `"l" \\| "m" \\| "s"`          | `undefined` |\n\n## Events\n\n| Event                         | Description                                     | Type               |\n| ----------------------------- | ----------------------------------------------- | ------------------ |\n| `calcitePanelBackClick`       | Emitted when the back button has been clicked.  | `CustomEvent<any>` |\n| `calcitePanelDismissedChange` | Emitted when the close button has been clicked. | `CustomEvent<any>` |\n| `calcitePanelScroll`          | Emitted when the content has been scrolled.     | `CustomEvent<any>` |\n\n## Methods\n\n### `scrollContentTo(options?: ScrollToOptions) => Promise<void>`\n\nScrolls panel content to a particular set of coordinates.\n\n```\n myCalcitePanel.scrollContentTo({\n   left: 0, // Specifies the number of pixels along the X axis to scroll the window or element.\n   top: 0, // Specifies the number of pixels along the Y axis to scroll the window or element\n   behavior: "auto" // Specifies whether the scrolling should animate smoothly (smooth), or happen instantly in a single jump (auto, the default value).\n });\n```\n\n#### Returns\n\nType: `Promise<void>`\n\n### `setFocus(focusId?: "dismiss-button" | "back-button") => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot                     | Description                                                                      |\n| ------------------------ | -------------------------------------------------------------------------------- |\n|                          | A slot for adding custom content.                                                |\n| `"fab"`                  | A slot for adding a `calcite-fab` (floating action button) to perform an action. |\n| `"footer"`               | A slot for adding custom content to the footer.                                  |\n| `"footer-actions"`       | A slot for adding buttons to the footer.                                         |\n| `"header-actions-end"`   | A slot for adding actions or content to the end side of the panel header.        |\n| `"header-actions-start"` | A slot for adding actions or content to the start side of the panel header.      |\n| `"header-content"`       | A slot for adding custom content to the header.                                  |\n| `"header-menu-actions"`  | A slot for adding an overflow menu with actions inside a dropdown.               |\n\n## CSS Custom Properties\n\n| Name                         | Description                     |\n| ---------------------------- | ------------------------------- |\n| `--calcite-panel-max-height` | the maximum height of the panel |\n| `--calcite-panel-max-width`  | the maximum width of the panel  |\n| `--calcite-panel-min-width`  | the minimum width of the panel  |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-action](../action)\n- [calcite-action-menu](../action-menu)\n- [calcite-scrim](../scrim)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-panel --\x3e calcite-action\n  calcite-panel --\x3e calcite-action-menu\n  calcite-panel --\x3e calcite-scrim\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-tooltip-manager\n  calcite-action-menu --\x3e calcite-popover\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  calcite-scrim --\x3e calcite-loader\n  style calcite-panel fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'},"./src/components/panel/resources.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return SLOTS})),__webpack_require__.d(__webpack_exports__,"b",(function(){return TEXT}));var SLOTS={headerActionsStart:"header-actions-start",headerActionsEnd:"header-actions-end",headerMenuActions:"header-menu-actions",headerContent:"header-content",fab:"fab",footer:"footer",footerActions:"footer-actions"},TEXT={back:"Back",close:"Close",open:"Open",options:"Options"}},"./src/components/pick-list/pick-list.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"darkThemeRTL",(function(){return darkThemeRTL})),__webpack_require__.d(__webpack_exports__,"grouped",(function(){return grouped})),__webpack_require__.d(__webpack_exports__,"nested",(function(){return nested}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),createAttributes=(__webpack_exports__.default={title:"Components/Pick List",parameters:{notes:['# calcite-pick-list\n\n`calcite-pick-list` lives in a panel and contains `calcite-pick-list-item`s. Each item is able to be be selected via radio button or checkboxes (which have a multiselect and shift-click capability). There is also an option for a filter at the top of the list for searching.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nRenders a basic pick list with radio buttons on the left and actions on the right side.\n\n```html\n<calcite-pick-list>\n  <calcite-pick-list-item label="T. Rex" description="Arm strength impaired" value="trex">\n    <calcite-action slot="actions-end" icon="circle"></calcite-action>\n  </calcite-pick-list-item>\n  <calcite-pick-list-item label="Triceratops" description="3 horn" value="triceratops" selected>\n    <calcite-action slot="actions-end" icon="circle"></calcite-action>\n  </calcite-pick-list-item>\n  <calcite-pick-list-item label="Velociraptor" description="Swift seizer" value="velociraptor">\n    <calcite-action slot="actions-end" icon="circle"></calcite-action>\n  </calcite-pick-list-item>\n</calcite-pick-list>\n```\n\n### Multi-select-and-filter-enabled\n\nRenders a pick list with a sticky filter and checkboxes for multiple selection of items.\n\n```html\n<calcite-pick-list multiple filter-enabled>\n  <calcite-pick-list-item label="Chocolate" value="chocolate">\n    <calcite-action slot="actions-end" icon="ellipsis-circle"></calcite-action>\n  </calcite-pick-list-item>\n  <calcite-pick-list-item label="Vanilla" description="Oldie but goodie" value="vanilla">\n    <calcite-action slot="actions-end" icon="ellipsis-circle"></calcite-action>\n  </calcite-pick-list-item>\n  <calcite-pick-list-item label="Strawberry" description="no metadata on this one" value="strawberry">\n    <calcite-action slot="actions-end" icon="ellipsis-circle"></calcite-action>\n  </calcite-pick-list-item>\n</calcite-pick-list>\n```\n\n### Sub-groups\n\nRenders groups of pick list items that are visually separated.\n\n```html\n<calcite-pick-list>\n  <calcite-pick-list-group group-title="numbers">\n    <calcite-pick-list-item label="one" description="fish" value="one" icon="grip">\n      <calcite-action slot="actions-end" icon="ellipsis"></calcite-action>\n    </calcite-pick-list-item>\n    <calcite-pick-list-item label="two" description="fish" value="two" icon="grip">\n      <calcite-action slot="actions-end" icon="ellipsis"></calcite-action>\n    </calcite-pick-list-item>\n  </calcite-pick-list-group>\n  <calcite-pick-list-group group-title="colors">\n    <calcite-pick-list-item label="red" description="fish" value="red" icon="grip">\n      <calcite-action slot="actions-end" icon="ellipsis"></calcite-action>\n    </calcite-pick-list-item>\n    <calcite-pick-list-item label="blue" description="fish" value="blue" icon="grip">\n      <calcite-action slot="actions-end" icon="ellipsis"></calcite-action>\n    </calcite-pick-list-item>\n  </calcite-pick-list-group>\n</calcite-pick-list>\n```\n\n## Properties\n\n| Property                | Attribute                 | Description                                                                                                                                                                                                                                       | Type                         | Default     |\n| ----------------------- | ------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `disabled`              | `disabled`                | When true, disabled prevents interaction. This state shows items with lower opacity/grayed.                                                                                                                                                       | `boolean`                    | `false`     |\n| `filterEnabled`         | `filter-enabled`          | When true, an input appears at the top of the list that can be used by end users to filter items in the list.                                                                                                                                     | `boolean`                    | `false`     |\n| `filterPlaceholder`     | `filter-placeholder`      | Placeholder text for the filter input field.                                                                                                                                                                                                      | `string`                     | `undefined` |\n| `headingLevel`          | `heading-level`           | Number at which section headings should start for this component.                                                                                                                                                                                 | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6` | `undefined` |\n| `loading`               | `loading`                 | When true, content is waiting to be loaded. This state shows a busy indicator.                                                                                                                                                                    | `boolean`                    | `false`     |\n| `multiple`              | `multiple`                | Multiple works similar to standard radio buttons and checkboxes. When true, a user can select multiple items at a time. When false, only a single item can be selected at a time and selecting a new item will deselect any other selected items. | `boolean`                    | `false`     |\n| `selectionFollowsFocus` | `selection-follows-focus` | When true and single-selection is enabled, the selection will change when navigating items via the keyboard.                                                                                                                                      | `boolean`                    | `false`     |\n\n## Events\n\n| Event               | Description                                           | Type                            |\n| ------------------- | ----------------------------------------------------- | ------------------------------- |\n| `calciteListChange` | Emitted when any of the item selections have changed. | `CustomEvent<Map<string, any>>` |\n\n## Methods\n\n### `getSelectedItems() => Promise<Map<string, HTMLCalcitePickListItemElement>>`\n\nReturns the currently selected items\n\n#### Returns\n\nType: `Promise<Map<string, any>>`\n\n### `setFocus(focusId?: ListFocusId) => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot             | Description                                                                                                                        |\n| ---------------- | ---------------------------------------------------------------------------------------------------------------------------------- |\n|                  | A slot for adding `calcite-pick-list-item` elements or `calcite-pick-list-group` elements. Items are displayed as a vertical list. |\n| `"menu-actions"` | A slot for adding a button + menu combo for performing actions like sorting.                                                       |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-filter](../filter)\n- [calcite-scrim](../scrim)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-pick-list --\x3e calcite-filter\n  calcite-pick-list --\x3e calcite-scrim\n  calcite-filter --\x3e calcite-scrim\n  calcite-filter --\x3e calcite-input\n  calcite-filter --\x3e calcite-icon\n  calcite-scrim --\x3e calcite-loader\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  style calcite-pick-list fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n','# calcite-pick-list-item\n\n`calcite-pick-list-item`s are cards contained in a `calcite-pick-list`. They each can have a label and description, an icon, and be set to compact. The developer can disable or preselect each list item and give it a value.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property             | Attribute          | Description                                                                                                  | Type                                                        | Default       |\n| -------------------- | ------------------ | ------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------- | ------------- |\n| `description`        | `description`      | An optional description for this item. This will appear below the label text.                                | `string`                                                    | `undefined`   |\n| `disableDeselect`    | `disable-deselect` | When false, the item cannot be deselected by user interaction.                                               | `boolean`                                                   | `false`       |\n| `disabled`           | `disabled`         | When true, the item cannot be clicked and is visually muted.                                                 | `boolean`                                                   | `false`       |\n| `icon`               | `icon`             | Determines the icon SVG symbol that will be shown. Options are circle, square, grip or null.                 | `ICON_TYPES.circle \\| ICON_TYPES.grip \\| ICON_TYPES.square` | `null`        |\n| `intlRemove`         | `intl-remove`      | Used as an accessible label (aria-label) for the "remove item" action. Only applicable if removable is true. | `string`                                                    | `TEXT.remove` |\n| `label`              | `label`            | The main label for this item. This will appear next to the icon.                                             | `string`                                                    | `undefined`   |\n| `metadata`           | --                 | Used to provide additional metadata to an item, primarily used when the parent list has a filter.            | `{ [x: string]: unknown; }`                                 | `undefined`   |\n| `removable`          | `removable`        | Set this to true to display a remove action that removes the item from the list.                             | `boolean`                                                   | `false`       |\n| `selected`           | `selected`         | Set this to true to pre-select an item. Toggles when an item is checked/unchecked.                           | `boolean`                                                   | `false`       |\n| `value` _(required)_ | `value`            | The item\'s associated value.                                                                                 | `any`                                                       | `undefined`   |\n\n## Events\n\n| Event                   | Description                                          | Type                                                                                |\n| ----------------------- | ---------------------------------------------------- | ----------------------------------------------------------------------------------- |\n| `calciteListItemChange` | Emitted whenever the item is selected or unselected. | `CustomEvent<{ item: any; value: any; selected: boolean; shiftPressed: boolean; }>` |\n| `calciteListItemRemove` | Emitted whenever the remove button is pressed.       | `CustomEvent<void>`                                                                 |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n### `toggleSelected(coerce?: boolean) => Promise<void>`\n\nUsed to toggle the selection state. By default this won\'t trigger an event.\nThe first argument allows the value to be coerced, rather than swapping values.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot              | Description                                                         |\n| ----------------- | ------------------------------------------------------------------- |\n| `"actions-end"`   | a slot for adding actions or content to the end side of the item.   |\n| `"actions-start"` | a slot for adding actions or content to the start side of the item. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-value-list-item](../value-list-item)\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-action](../action)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-pick-list-item --\x3e calcite-icon\n  calcite-pick-list-item --\x3e calcite-action\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-value-list-item --\x3e calcite-pick-list-item\n  style calcite-pick-list-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n',"# calcite-pick-list-group\n\n`calcite-pick-list-group` is a wrapper for multiple `calcite-pick-list-item`s and lives in `calcite-pick-list`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property       | Attribute       | Description                                                       | Type                         | Default     |\n| -------------- | --------------- | ----------------------------------------------------------------- | ---------------------------- | ----------- |\n| `groupTitle`   | `group-title`   | The title used for all nested `calcite-pick-list` rows.           | `string`                     | `undefined` |\n| `headingLevel` | `heading-level` | Number at which section headings should start for this component. | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6` | `undefined` |\n\n## Slots\n\n| Slot | Description                                          |\n| ---- | ---------------------------------------------------- |\n|      | A slot for adding `calcite-pick-list-item` elements. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n"]}},function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1),delete this.build,this}},{name:"filter-enabled",commit:function(){return this.value=Object(dist.boolean)("filterEnabled",!1),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1),delete this.build,this}},{name:"multiple",commit:function(){return this.value=Object(dist.boolean)("multiple",!1),delete this.build,this}},{name:"selection-follows-focus",commit:function(){return this.value=Object(dist.boolean)("selection-follows-focus",!1),delete this.build,this}}],exceptions)}),action=tests_utils.a`
  <calcite-action
    slot="actions-end"
    label="click-me"
    onClick="console.log('clicked');"
    appearance="clear"
    scale="s"
    icon="information"
  ></calcite-action>
`,basic=function(){return Object(utils.a)("calcite-pick-list",createAttributes(),tests_utils.a`
      <calcite-pick-list-item label="T. Rex" description="arm strength impaired" value="trex">
        ${action}
      </calcite-pick-list-item>
      <calcite-pick-list-item label="Triceratops" description="3 horn" value="triceratops" selected>
        ${action}
      </calcite-pick-list-item>
      <calcite-pick-list-item label="hi" description="there" value="helloWorld"> ${action} </calcite-pick-list-item>
    `)},darkThemeRTL=function(){return Object(utils.a)("calcite-pick-list",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-theme-dark"}]),tests_utils.a`
      <calcite-pick-list-item label="T. Rex" description="arm strength impaired" value="trex">
        ${action}
      </calcite-pick-list-item>
      <calcite-pick-list-item label="Triceratops" description="3 horn" value="triceratops" selected>
        ${action}
      </calcite-pick-list-item>
      <calcite-pick-list-item label="hi" description="there" value="helloWorld"> ${action} </calcite-pick-list-item>
    `)};darkThemeRTL.parameters={themes:utils.f};var grouped=function(){return Object(utils.a)("calcite-pick-list",createAttributes(),tests_utils.a`
      <calcite-pick-list-group group-title="numbers">
        <calcite-pick-list-item label="one" description="fish" value="one" icon="grip">
          ${action}
        </calcite-pick-list-item>
        <calcite-pick-list-item label="two" description="fish" value="two" icon="grip">
          ${action}
        </calcite-pick-list-item>
      </calcite-pick-list-group>
      <calcite-pick-list-group group-title="colors">
        <calcite-pick-list-item label="red" description="fish" value="red" icon="grip">
          ${action}
        </calcite-pick-list-item>
        <calcite-pick-list-item label="blue" description="fish" value="blue" icon="grip">
          ${action}
        </calcite-pick-list-item>
      </calcite-pick-list-group>
    `)},nested=function(){return Object(utils.a)("calcite-pick-list",createAttributes(),tests_utils.a`
      <calcite-pick-list-group>
        <calcite-pick-list-item label="All the dogs" value="all-dogs" slot="parent-item">
          ${action}
        </calcite-pick-list-item>
        <calcite-pick-list-item label="Husky" value="husky"> ${action} </calcite-pick-list-item>
        <calcite-pick-list-item label="Pomeranian" value="pom"> ${action} </calcite-pick-list-item>
        <calcite-pick-list-item label="Xoloitzcuintle" value="xolo"> ${action} </calcite-pick-list-item>
      </calcite-pick-list-group>
      <calcite-pick-list-group>
        <calcite-pick-list-item label="All the cats" value="all-cats" slot="parent-item">
          ${action}
        </calcite-pick-list-item>
        <calcite-pick-list-item label="Himalayan" value="himalayan"> ${action} </calcite-pick-list-item>
        <calcite-pick-list-item label="Persian" value="persian"> ${action} </calcite-pick-list-item>
        <calcite-pick-list-item label="Spynx" value="spynx"> ${action} </calcite-pick-list-item>
      </calcite-pick-list-group>
    `)};basic.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-pick-list",\n    createAttributes(),\n    html`\n      <calcite-pick-list-item label="T. Rex" description="arm strength impaired" value="trex">\n        ${action}\n      </calcite-pick-list-item>\n      <calcite-pick-list-item label="Triceratops" description="3 horn" value="triceratops" selected>\n        ${action}\n      </calcite-pick-list-item>\n      <calcite-pick-list-item label="hi" description="there" value="helloWorld"> ${action} </calcite-pick-list-item>\n    `\n  )'}},basic.parameters),darkThemeRTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-pick-list",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-theme-dark"\n      }\n    ]),\n    html`\n      <calcite-pick-list-item label="T. Rex" description="arm strength impaired" value="trex">\n        ${action}\n      </calcite-pick-list-item>\n      <calcite-pick-list-item label="Triceratops" description="3 horn" value="triceratops" selected>\n        ${action}\n      </calcite-pick-list-item>\n      <calcite-pick-list-item label="hi" description="there" value="helloWorld"> ${action} </calcite-pick-list-item>\n    `\n  )'}},darkThemeRTL.parameters),grouped.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-pick-list",\n    createAttributes(),\n    html`\n      <calcite-pick-list-group group-title="numbers">\n        <calcite-pick-list-item label="one" description="fish" value="one" icon="grip">\n          ${action}\n        </calcite-pick-list-item>\n        <calcite-pick-list-item label="two" description="fish" value="two" icon="grip">\n          ${action}\n        </calcite-pick-list-item>\n      </calcite-pick-list-group>\n      <calcite-pick-list-group group-title="colors">\n        <calcite-pick-list-item label="red" description="fish" value="red" icon="grip">\n          ${action}\n        </calcite-pick-list-item>\n        <calcite-pick-list-item label="blue" description="fish" value="blue" icon="grip">\n          ${action}\n        </calcite-pick-list-item>\n      </calcite-pick-list-group>\n    `\n  )'}},grouped.parameters),nested.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-pick-list",\n    createAttributes(),\n    html`\n      <calcite-pick-list-group>\n        <calcite-pick-list-item label="All the dogs" value="all-dogs" slot="parent-item">\n          ${action}\n        </calcite-pick-list-item>\n        <calcite-pick-list-item label="Husky" value="husky"> ${action} </calcite-pick-list-item>\n        <calcite-pick-list-item label="Pomeranian" value="pom"> ${action} </calcite-pick-list-item>\n        <calcite-pick-list-item label="Xoloitzcuintle" value="xolo"> ${action} </calcite-pick-list-item>\n      </calcite-pick-list-group>\n      <calcite-pick-list-group>\n        <calcite-pick-list-item label="All the cats" value="all-cats" slot="parent-item">\n          ${action}\n        </calcite-pick-list-item>\n        <calcite-pick-list-item label="Himalayan" value="himalayan"> ${action} </calcite-pick-list-item>\n        <calcite-pick-list-item label="Persian" value="persian"> ${action} </calcite-pick-list-item>\n        <calcite-pick-list-item label="Spynx" value="spynx"> ${action} </calcite-pick-list-item>\n      </calcite-pick-list-group>\n    `\n  )'}},nested.parameters)},"./src/components/popover/popover.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"Nested",(function(){return Nested}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./src/tests/utils.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),calcite_placements=["auto","auto-start","auto-end","top-start","top-end","bottom-start","bottom-end","right-start","right-end","left-start","left-end"].concat(["leading-start","leading","leading-end","trailing-end","trailing","trailing-start","leading-leading","leading-trailing","trailing-leading","trailing-trailing","top-leading","top-trailing","bottom-leading","bottom-trailing","right-leading","right-trailing","left-leading","left-trailing"]),contentHTML='\n<div style="width: 300px; padding:12px 16px;">\n  <b>I am a title!</b> <br>\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n  <calcite-link>I am an inline link</calcite-link>\n</div>\n',referenceElementHTML='Ut enim ad minim veniam, quis <calcite-button title="Reference Element" id="reference-element">nostrud exercitation</calcite-button> ullamco laboris nisi ut aliquip ex ea commodo consequat.',Simple=(__webpack_exports__.default={title:"Components/Popover",parameters:{notes:['# calcite-popover\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Manager\n\n```html\n<calcite-popover reference-element="popover-button">Hello! I am some popover content!</calcite-popover>\n\n<calcite-popover-manager\n  ><calcite-button id="popover-button">Clickable popover</calcite-button></calcite-popover-manager\n>\n```\n\n## Properties\n\n| Property                        | Attribute             | Description                                                                                                                                                                                                                                                                                                     | Type                                        | Default                 |\n| ------------------------------- | --------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------- | ----------------------- |\n| `closeButton`                   | `close-button`        | <span style="color:red">**[DEPRECATED]**</span> use dismissible instead.<br/><br/>Display a close button within the Popover.                                                                                                                                                                                    | `boolean`                                   | `false`                 |\n| `disableFlip`                   | `disable-flip`        | Prevents flipping the popover\'s placement when it starts to overlap its reference element.                                                                                                                                                                                                                      | `boolean`                                   | `false`                 |\n| `disablePointer`                | `disable-pointer`     | Removes the caret pointer.                                                                                                                                                                                                                                                                                      | `boolean`                                   | `false`                 |\n| `dismissible`                   | `dismissible`         | Display a close button within the Popover.                                                                                                                                                                                                                                                                      | `boolean`                                   | `false`                 |\n| `flipPlacements`                | --                    | Defines the available placements that can be used when a flip occurs.                                                                                                                                                                                                                                           | `Placement[]`                               | `undefined`             |\n| `heading`                       | `heading`             | Heading text.                                                                                                                                                                                                                                                                                                   | `string`                                    | `undefined`             |\n| `headingLevel`                  | `heading-level`       | Number at which section headings should start for this component.                                                                                                                                                                                                                                               | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`                | `undefined`             |\n| `intlClose`                     | `intl-close`          | Text for close button.                                                                                                                                                                                                                                                                                          | `string`                                    | `TEXT.close`            |\n| `label` _(required)_            | `label`               | Accessible name for the component                                                                                                                                                                                                                                                                               | `string`                                    | `undefined`             |\n| `offsetDistance`                | `offset-distance`     | Offset the position of the popover away from the reference element.                                                                                                                                                                                                                                             | `number`                                    | `defaultOffsetDistance` |\n| `offsetSkidding`                | `offset-skidding`     | Offset the position of the popover along the reference element.                                                                                                                                                                                                                                                 | `number`                                    | `0`                     |\n| `open`                          | `open`                | Display and position the component.                                                                                                                                                                                                                                                                             | `boolean`                                   | `false`                 |\n| `overlayPositioning`            | `overlay-positioning` | Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the \'fixed\' value.                                                                                                                                                                              | `"absolute" \\| "fixed"`                     | `"absolute"`            |\n| `placement`                     | `placement`           | Determines where the component will be positioned relative to the referenceElement.                                                                                                                                                                                                                             | `Placement \\| PlacementRtl \\| VariationRtl` | `"auto"`                |\n| `referenceElement` _(required)_ | `reference-element`   | Reference HTMLElement used to position this component according to the placement property. As a convenience, a string ID of the reference element can be used. However, setting this property to use an HTMLElement is preferred so that the component does not need to query the DOM for the referenceElement. | `HTMLElement \\| string`                     | `undefined`             |\n\n## Events\n\n| Event                 | Description                      | Type               |\n| --------------------- | -------------------------------- | ------------------ |\n| `calcitePopoverClose` | Fired when the popover is closed | `CustomEvent<any>` |\n| `calcitePopoverOpen`  | Fired when the popover is opened | `CustomEvent<any>` |\n\n## Methods\n\n### `reposition() => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n### `setFocus(focusId?: "close-button") => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n### `toggle(value?: boolean) => Promise<void>`\n\nToggles the popover\'s open property.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding custom content. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-action-menu](../action-menu)\n- [calcite-input-time-picker](../input-time-picker)\n\n### Depends on\n\n- [calcite-action](../action)\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-action-menu --\x3e calcite-popover\n  calcite-input-time-picker --\x3e calcite-popover\n  style calcite-popover fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n',"# calcite-popover-manager\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property    | Attribute    | Description                                                                                                                                              | Type      | Default                  |\n| ----------- | ------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ------------------------ |\n| `autoClose` | `auto-close` | Automatically closes any currently open popovers when clicking outside of a popover.                                                                     | `boolean` | `false`                  |\n| `selector`  | `selector`   | CSS Selector to match reference elements for popovers. Reference elements will be identified by this selector in order to open their associated popover. | `string`  | `[${POPOVER_REFERENCE}]` |\n\n## Slots\n\n| Slot | Description                                                                               |\n| ---- | ----------------------------------------------------------------------------------------- |\n|      | A slot for adding elements that reference a 'calcite-popover' by the 'selector' property. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n"]}},Object(helpers.f)((function(){return utils.a`
    <div style="width: 400px;">
      <calcite-popover-manager>${referenceElementHTML}</calcite-popover-manager>
      <calcite-popover
        ${Object(helpers.a)("dismissible",!1)}
        ${Object(helpers.a)("disable-flip",!1)}
        ${Object(helpers.a)("disable-pointer",!1)}
        reference-element="reference-element"
        placement="${Object(dist.select)("placement",calcite_placements,"auto")}"
        offset-distance="${Object(dist.number)("offset-distance",6)}"
        offset-skidding="${Object(dist.number)("offset-skidding",0)}"
        ${Object(helpers.a)("open",!1)}
        text-close="${Object(dist.text)("text-close","Close")}"
      >
        ${contentHTML}
      </calcite-popover>
    </div>
  `}),Object(helpers.b)("calcite-popover").snapshot("Default").click("#reference-element").snapshot("Open").executeScript(Object(helpers.d)({story:"components-popover--simple",knobs:[{name:"dismissible",value:"true"}]})).click("#reference-element").snapshot("dismissible").rtl().snapshot("Rtl").ltr().executeScript(Object(helpers.e)("dark")).snapshot("Dark theme"))),Nested=Object(helpers.f)((function(){return utils.a`
    <div style="width: 400px;">
      <calcite-popover-manager>
        ${referenceElementHTML}
        <calcite-popover
          ${Object(helpers.a)("dismissible",!0)}
          reference-element="reference-element"
          placement="${Object(dist.select)("placement",calcite_placements,"auto")}"
          ${Object(helpers.a)("open",!1)}
        >
          <div style="width: 300px; padding:12px 16px;">${'Ut enim ad minim veniam, quis <calcite-button title="Nested Reference Element" id="reference-element-nested">nostrud exercitation</calcite-button> ullamco laboris nisi ut aliquip ex ea commodo consequat.'}</div>
          <calcite-popover
            ${Object(helpers.a)("dismissible",!0)}
            reference-element="reference-element-nested"
            placement="${Object(dist.select)("placement",calcite_placements,"auto")}"
            ${Object(helpers.a)("open",!1)}
          >
            ${contentHTML}
          </calcite-popover>
        </calcite-popover>
      </calcite-popover-manager>
    </div>
  `}),Object(helpers.b)("calcite-popover").click("#reference-element").snapshot("Single popover open").click("#reference-element-nested").snapshot("Multiple popovers open"));Simple.parameters=Object.assign({storySource:{source:'stepStory(\n  (): string => html`\n    <div style="width: 400px;">\n      <calcite-popover-manager>${referenceElementHTML}</calcite-popover-manager>\n      <calcite-popover\n        ${boolean("dismissible", false)}\n        ${boolean("disable-flip", false)}\n        ${boolean("disable-pointer", false)}\n        reference-element="reference-element"\n        placement="${select("placement", calcite_placements, "auto")}"\n        offset-distance="${number("offset-distance", 6)}"\n        offset-skidding="${number("offset-skidding", 0)}"\n        ${boolean("open", false)}\n        text-close="${text("text-close", "Close")}"\n      >\n        ${contentHTML}\n      </calcite-popover>\n    </div>\n  `,\n  createSteps("calcite-popover")\n    .snapshot("Default")\n    .click("#reference-element")\n    .snapshot("Open")\n    .executeScript(setKnobs({ story: "components-popover--simple", knobs: [{ name: "dismissible", value: "true" }] }))\n    .click("#reference-element")\n    .snapshot("dismissible")\n    .rtl()\n    .snapshot("Rtl")\n    .ltr()\n    .executeScript(setTheme("dark"))\n    .snapshot("Dark theme")\n)'}},Simple.parameters),Nested.parameters=Object.assign({storySource:{source:'stepStory(\n  (): string => html`\n    <div style="width: 400px;">\n      <calcite-popover-manager>\n        ${referenceElementHTML}\n        <calcite-popover\n          ${boolean("dismissible", true)}\n          reference-element="reference-element"\n          placement="${select("placement", calcite_placements, "auto")}"\n          ${boolean("open", false)}\n        >\n          <div style="width: 300px; padding:12px 16px;">${nestedReferenceElementHTML}</div>\n          <calcite-popover\n            ${boolean("dismissible", true)}\n            reference-element="reference-element-nested"\n            placement="${select("placement", calcite_placements, "auto")}"\n            ${boolean("open", false)}\n          >\n            ${contentHTML}\n          </calcite-popover>\n        </calcite-popover>\n      </calcite-popover-manager>\n    </div>\n  `,\n  createSteps("calcite-popover")\n    .click("#reference-element")\n    .snapshot("Single popover open")\n    .click("#reference-element-nested")\n    .snapshot("Multiple popovers open")\n)'}},Nested.parameters)},"./src/components/progress/progress.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Determinate",(function(){return Determinate})),__webpack_require__.d(__webpack_exports__,"Indeterminate",(function(){return Indeterminate})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Determinate=(__webpack_exports__.default={title:"Components/Progress",parameters:{notes:'# calcite-progress\n\nThe `calcite-progress` component is used to show progress on some async task to the user.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-progress type="indeterminate"></calcite-progress>\n```\n\n## Properties\n\n| Property   | Attribute  | Description                                                      | Type                               | Default         |\n| ---------- | ---------- | ---------------------------------------------------------------- | ---------------------------------- | --------------- |\n| `label`    | `label`    | Label for the progress indicator                                 | `string`                           | `undefined`     |\n| `reversed` | `reversed` | For indeterminate progress bars, reverse the animation direction | `boolean`                          | `false`         |\n| `text`     | `text`     | Text to display for the progress indicator                       | `string`                           | `undefined`     |\n| `type`     | `type`     | Use indeterminate if finding actual progress value is impossible | `"determinate" \\| "indeterminate"` | `"determinate"` |\n| `value`    | `value`    | Fraction completed, in the range of 0 - 1.0                      | `number`                           | `0`             |\n\n## Dependencies\n\n### Used by\n\n- [calcite-input](../input)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-input --\x3e calcite-progress\n  style calcite-progress fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-progress
    type="determinate"
    value="${Object(dist.number)("value",0,{range:!0,min:0,max:1,step:.01})}"
    text="${Object(dist.text)("text","")}"
  ></calcite-progress>
`}),Indeterminate=function(){return tests_utils.a`
  <calcite-progress
    reversed=${Object(dist.boolean)("reversed",!1)}
    type="indeterminate"
    text="${Object(dist.text)("text","")}"
  ></calcite-progress>
`},DarkMode=function(){return tests_utils.a`
  <calcite-progress
    class="calcite-theme-dark"
    type="${Object(dist.select)("type",{determinate:"determinate",indeterminate:"indeterminate"},"indeterminate")}"
    value="${Object(dist.number)("value",0,{range:!0,min:0,max:1,step:.01})}"
    text="${Object(dist.text)("text","")}"
  ></calcite-progress>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f},Determinate.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-progress\n    type="determinate"\n    value="${number("value", 0, { range: true, min: 0, max: 1, step: 0.01 })}"\n    text="${text("text", "")}"\n  ></calcite-progress>\n`'}},Determinate.parameters),Indeterminate.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-progress\n    reversed=${boolean("reversed", false)}\n    type="indeterminate"\n    text="${text("text", "")}"\n  ></calcite-progress>\n`'}},Indeterminate.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-progress\n    class="calcite-theme-dark"\n    type="${select("type", { determinate: "determinate", indeterminate: "indeterminate" }, "indeterminate")}"\n    value="${number("value", 0, { range: true, min: 0, max: 1, step: 0.01 })}"\n    text="${text("text", "")}"\n  ></calcite-progress>\n`'}},DarkMode.parameters)},"./src/components/radio-button-group/radio-button-group.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"LightTheme",(function(){return LightTheme})),__webpack_require__.d(__webpack_exports__,"DarkTheme",(function(){return DarkTheme})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),LightTheme=(__webpack_exports__.default={title:"Components/Controls/Radio/Radio Button Group",parameters:{notes:'# calcite-radio-button-group\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nRenders the radio button group with default horizontal layout\n\n```html\n<calcite-radio-button-group name="basic-group">\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Maps\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Layers\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Data\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Geography\n  </calcite-label>\n</calcite-radio-button-group>\n```\n\n### Disabled-checked\n\nRenders all radio button inputs disabled, first one checked\n\n```html\n<calcite-radio-button-group name="disabled-group" disabled>\n  <calcite-label layout="inline">\n    <calcite-radio-button checked></calcite-radio-button>\n    A\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    B\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    C\n  </calcite-label>\n</calcite-radio-button-group>\n```\n\n### With-vertical-layout\n\n```html\n<calcite-radio-button-group name="vertical-group" layout="vertical">\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Maps\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Layers\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Data\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Geography\n  </calcite-label>\n</calcite-radio-button-group>\n```\n\n## Properties\n\n| Property            | Attribute  | Description                                                                                                                 | Type                                   | Default        |\n| ------------------- | ---------- | --------------------------------------------------------------------------------------------------------------------------- | -------------------------------------- | -------------- |\n| `disabled`          | `disabled` | The disabled state of the radio button group.                                                                               | `boolean`                              | `false`        |\n| `hidden`            | `hidden`   | The radio button group\'s hidden status. When a radio button group is hidden none of its options are focusable or checkable. | `boolean`                              | `false`        |\n| `layout`            | `layout`   | The layout direction of the radio buttons in a group.                                                                       | `"grid" \\| "horizontal" \\| "vertical"` | `"horizontal"` |\n| `name` _(required)_ | `name`     | The name of the radio button group. `name` must be unique to other radio button group instances.                            | `string`                               | `undefined`    |\n| `required`          | `required` | Requires that a value is selected for the radio button group before the parent form will submit.                            | `boolean`                              | `false`        |\n| `scale`             | `scale`    | The scale (size) of the radio button group.                                                                                 | `"l" \\| "m" \\| "s"`                    | `"m"`          |\n\n## Events\n\n| Event                           | Description                                      | Type               |\n| ------------------------------- | ------------------------------------------------ | ------------------ |\n| `calciteRadioButtonGroupChange` | Emitted when the radio button group has changed. | `CustomEvent<any>` |\n\n## Slots\n\n| Slot | Description                                |\n| ---- | ------------------------------------------ |\n|      | A slot for adding `calcite-radio-button`s. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-radio-button-group
    name="simple"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    <calcite-label layout="inline">
      <calcite-radio-button value="react"></calcite-radio-button>
      React
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="ember"></calcite-radio-button>
      Ember
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="angular"></calcite-radio-button>
      Angular
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="vue"></calcite-radio-button>
      Vue
    </calcite-label>
  </calcite-radio-button-group>
`}),DarkTheme=function(){return tests_utils.a`
  <calcite-radio-button-group
    class="calcite-theme-dark"
    name="dark"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    <calcite-label layout="inline">
      <calcite-radio-button value="react"></calcite-radio-button>
      React
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="ember"></calcite-radio-button>
      Ember
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="angular"></calcite-radio-button>
      Angular
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="vue"></calcite-radio-button>
      Vue
    </calcite-label>
  </calcite-radio-button-group>
`};DarkTheme.parameters={themes:utils.f};var RTL=function(){return tests_utils.a`
  <calcite-radio-button-group
    dir="rtl"
    name="simple"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    <calcite-label layout="inline">
      <calcite-radio-button value="react"></calcite-radio-button>
      React
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="ember"></calcite-radio-button>
      Ember
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="angular"></calcite-radio-button>
      Angular
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="vue"></calcite-radio-button>
      Vue
    </calcite-label>
  </calcite-radio-button-group>
`};LightTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-radio-button-group\n    name="simple"\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    <calcite-label layout="inline">\n      <calcite-radio-button value="react"></calcite-radio-button>\n      React\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="ember"></calcite-radio-button>\n      Ember\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="angular"></calcite-radio-button>\n      Angular\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="vue"></calcite-radio-button>\n      Vue\n    </calcite-label>\n  </calcite-radio-button-group>\n`'}},LightTheme.parameters),DarkTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-radio-button-group\n    class="calcite-theme-dark"\n    name="dark"\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    <calcite-label layout="inline">\n      <calcite-radio-button value="react"></calcite-radio-button>\n      React\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="ember"></calcite-radio-button>\n      Ember\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="angular"></calcite-radio-button>\n      Angular\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="vue"></calcite-radio-button>\n      Vue\n    </calcite-label>\n  </calcite-radio-button-group>\n`'}},DarkTheme.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-radio-button-group\n    dir="rtl"\n    name="simple"\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    <calcite-label layout="inline">\n      <calcite-radio-button value="react"></calcite-radio-button>\n      React\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="ember"></calcite-radio-button>\n      Ember\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="angular"></calcite-radio-button>\n      Angular\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="vue"></calcite-radio-button>\n      Vue\n    </calcite-label>\n  </calcite-radio-button-group>\n`'}},RTL.parameters)},"./src/components/radio-button/radio-button.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"LightTheme",(function(){return LightTheme})),__webpack_require__.d(__webpack_exports__,"DarkTheme",(function(){return DarkTheme})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),LightTheme=(__webpack_exports__.default={title:"Components/Controls/Radio/Radio Button",parameters:{notes:'# calcite-radio-button\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-label for="item-a" layout="inline">\n  <calcite-radio-button id="item-a" name="preferred-feature" value="Maps" checked></calcite-radio-button>\n  Maps\n</calcite-label>\n```\n\n## Properties\n\n| Property             | Attribute  | Description                                                                                                            | Type                | Default     |\n| -------------------- | ---------- | ---------------------------------------------------------------------------------------------------------------------- | ------------------- | ----------- |\n| `checked`            | `checked`  | The checked state of the radio button.                                                                                 | `boolean`           | `false`     |\n| `disabled`           | `disabled` | The disabled state of the radio button.                                                                                | `boolean`           | `false`     |\n| `guid`               | `guid`     | The id attribute of the radio button. When omitted, a globally unique identifier is used.                              | `string`            | `undefined` |\n| `hidden`             | `hidden`   | The radio button\'s hidden status. When a radio button is hidden it is not focusable or checkable.                      | `boolean`           | `false`     |\n| `name`               | `name`     | The name of the radio button. `name` is passed as a property automatically from `calcite-radio-button-group`.          | `string`            | `undefined` |\n| `required`           | `required` | Requires that a value is selected for the radio button group before the parent form will submit.                       | `boolean`           | `false`     |\n| `scale`              | `scale`    | The scale (size) of the radio button. `scale` is passed as a property automatically from `calcite-radio-button-group`. | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `value` _(required)_ | `value`    | The value of the radio button.                                                                                         | `any`               | `undefined` |\n\n## Events\n\n| Event                      | Description                                                                                                                                                                                                                                                                                                                                                                                                                                             | Type               |\n| -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `calciteRadioButtonChange` | Fires only when the radio button is checked. This behavior is identical to the native HTML input element. Since this event does not fire when the radio button is unchecked, it\'s not recommended to attach a listener for this event directly on the element, but instead either attach it to a node that contains all of the radio buttons in the group or use the calciteRadioButtonGroupChange event if using this with calcite-radio-button-group. | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-label layout="inline">
    <calcite-radio-button
      ${Object(helpers.a)("checked",!1)}
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("hidden",!1)}
      ${Object(helpers.a)("focused",!1)}
      name="simple"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      value="value"
    ></calcite-radio-button>
    ${Object(dist.text)("label","Radio Button")}
  </calcite-label>
`}),DarkTheme=function(){return tests_utils.a`
  <calcite-label layout="inline" class="calcite-theme-dark">
    <calcite-radio-button
      ${Object(helpers.a)("checked",!1)}
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("hidden",!1)}
      ${Object(helpers.a)("focused",!1)}
      name="dark"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      value="value"
    >
    </calcite-radio-button>
    ${Object(dist.text)("label","Radio Button")}
  </calcite-label>
`};DarkTheme.parameters={themes:utils.f};var RTL=function(){return tests_utils.a`
  <calcite-label layout="inline" dir="rtl">
    <calcite-radio-button
      ${Object(helpers.a)("checked",!1)}
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("hidden",!1)}
      ${Object(helpers.a)("focused",!1)}
      name="simple"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      value="value"
    ></calcite-radio-button>
    ${Object(dist.text)("label","Radio Button")}
  </calcite-label>
`};LightTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label layout="inline">\n    <calcite-radio-button\n      ${boolean("checked", false)}\n      ${boolean("disabled", false)}\n      ${boolean("hidden", false)}\n      ${boolean("focused", false)}\n      name="simple"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      value="value"\n    ></calcite-radio-button>\n    ${text("label", "Radio Button")}\n  </calcite-label>\n`'}},LightTheme.parameters),DarkTheme.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label layout="inline" class="calcite-theme-dark">\n    <calcite-radio-button\n      ${boolean("checked", false)}\n      ${boolean("disabled", false)}\n      ${boolean("hidden", false)}\n      ${boolean("focused", false)}\n      name="dark"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      value="value"\n    >\n    </calcite-radio-button>\n    ${text("label", "Radio Button")}\n  </calcite-label>\n`'}},DarkTheme.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label layout="inline" dir="rtl">\n    <calcite-radio-button\n      ${boolean("checked", false)}\n      ${boolean("disabled", false)}\n      ${boolean("hidden", false)}\n      ${boolean("focused", false)}\n      name="simple"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      value="value"\n    ></calcite-radio-button>\n    ${text("label", "Radio Button")}\n  </calcite-label>\n`'}},RTL.parameters)},"./src/components/radio-group/radio-group.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"WrappingCalciteLabel",(function(){return WrappingCalciteLabel})),__webpack_require__.d(__webpack_exports__,"WithIcons",(function(){return WithIcons})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"FullWidth",(function(){return FullWidth})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Controls/Radio/Radio Group",parameters:{notes:['# calcite-radio-group\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-radio-group layout="horizontal" appearance="solid" scale="m" width="auto">\n  <calcite-radio-group-item value="apple" checked>Apple</calcite-radio-group-item>\n  <calcite-radio-group-item value="mango">Mango</calcite-radio-group-item>\n  <calcite-radio-group-item value="tomato">Tomato</calcite-radio-group-item>\n  <calcite-radio-group-item value="banana">Banana</calcite-radio-group-item>\n</calcite-radio-group>\n```\n\n## Properties\n\n| Property       | Attribute       | Description                                                         | Type                                   | Default        |\n| -------------- | --------------- | ------------------------------------------------------------------- | -------------------------------------- | -------------- |\n| `appearance`   | `appearance`    | specify the appearance style of the radio group, defaults to solid. | `"outline" \\| "solid"`                 | `"solid"`      |\n| `disabled`     | `disabled`      | is the radio group disabled                                         | `boolean`                              | `false`        |\n| `layout`       | `layout`        | specify the layout of the radio group, defaults to horizontal       | `"grid" \\| "horizontal" \\| "vertical"` | `"horizontal"` |\n| `name`         | `name`          | The group\'s name. Gets submitted with the form.                     | `string`                               | `undefined`    |\n| `scale`        | `scale`         | The scale of the radio group                                        | `"l" \\| "m" \\| "s"`                    | `"m"`          |\n| `selectedItem` | `selected-item` | The group\'s selected item.                                          | `any`                                  | `undefined`    |\n| `value`        | `value`         | The value of the selectedItem                                       | `string`                               | `null`         |\n| `width`        | `width`         | specify the width of the group, defaults to auto                    | `"auto" \\| "full"`                     | `"auto"`       |\n\n## Events\n\n| Event                     | Description                                                           | Type                  |\n| ------------------------- | --------------------------------------------------------------------- | --------------------- |\n| `calciteRadioGroupChange` | Fired when the selected option changes, event detail is the new value | `CustomEvent<string>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description                                    |\n| ---- | ---------------------------------------------- |\n|      | A slot for adding `calcite-radio-group-item`s. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n','# calcite-radio-group-item\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property       | Attribute       | Description                                                        | Type               | Default     |\n| -------------- | --------------- | ------------------------------------------------------------------ | ------------------ | ----------- |\n| `checked`      | `checked`       | Indicates whether the control is checked.                          | `boolean`          | `false`     |\n| `icon`         | `icon`          | optionally pass an icon to display - accepts Calcite UI icon names | `string`           | `undefined` |\n| `iconFlipRtl`  | `icon-flip-rtl` | flip the icon in rtl                                               | `boolean`          | `false`     |\n| `iconPosition` | `icon-position` | optionally used with icon, select where to position the icon       | `"end" \\| "start"` | `"start"`   |\n| `value`        | `value`         | The control\'s value.                                               | `any`              | `undefined` |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-radio-group-item --\x3e calcite-icon\n  style calcite-radio-group-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n']}},function(){return tests_utils.a`
  <calcite-radio-group
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    appearance="${Object(dist.select)("appearance",["solid","outline"],"solid")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["auto","full"],"auto")}"
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>
    <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>
    <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>
    <calcite-radio-group-item value="vue">Vue</calcite-radio-group-item>
  </calcite-radio-group>
`}),WrappingCalciteLabel=function(){return tests_utils.a`
  <calcite-label scale="${Object(dist.select)("scale",["s","m","l"],"m")}">
    My great radio group
    <calcite-radio-group
      layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
      appearance="${Object(dist.select)("appearance",["solid","outline"],"solid")}"
      width="${Object(dist.select)("width",["auto","full"],"auto")}"
      ${Object(helpers.a)("disabled",!1)}
    >
      <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>
      <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>
      <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>
      <calcite-radio-group-item value="vue">Vue</calcite-radio-group-item>
    </calcite-radio-group>
  </calcite-label>
`},WithIcons=function(){return tests_utils.a`
  <calcite-label scale="${Object(dist.select)("scale",["s","m","l"],"m")}">
    My great radio group
    <calcite-radio-group
      layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
      appearance="${Object(dist.select)("appearance",["solid","outline"],"solid")}"
      width="${Object(dist.select)("width",["auto","full"],"auto")}"
      ${Object(helpers.a)("disabled",!1)}
    >
      <calcite-radio-group-item icon="car" value="car" checked>Car</calcite-radio-group-item>
      <calcite-radio-group-item icon="plane" value="plane">Plane</calcite-radio-group-item>
      <calcite-radio-group-item icon="biking" value="bicycle">Bicycle</calcite-radio-group-item>
    </calcite-radio-group>
  </calcite-label>
`};WithIcons.storyName="With icons";var DarkMode=function(){return tests_utils.a`
  <calcite-radio-group
    class="calcite-theme-dark"
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    appearance="${Object(dist.select)("appearance",["solid","outline"],"solid")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["auto","full"],"auto")}"
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>
    <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>
    <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>
    <calcite-radio-group-item value="vue">Vue</calcite-radio-group-item>
  </calcite-radio-group>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f};var FullWidth=function(){return tests_utils.a`
  <div style="width:33vw;">
    <calcite-radio-group
      layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
      appearance="${Object(dist.select)("appearance",["solid","outline"],"solid")}"
      width="${Object(dist.select)("width",["auto","full"],"full")}"
      ${Object(helpers.a)("disabled",!1)}
    >
      <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>
      <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>
      <calcite-radio-group-item value="long-text-1">Longer text wraps.</calcite-radio-group-item>
      <calcite-radio-group-item value="long-text-2">Longer text wraps.</calcite-radio-group-item>
    </calcite-radio-group>
  </div>
`};FullWidth.storyName="Full width";var RTL=function(){return tests_utils.a`
  <calcite-radio-group
    dir="rtl"
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    appearance="${Object(dist.select)("appearance",["solid","outline"],"solid")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["auto","full"],"auto")}"
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>
    <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>
    <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>
    <calcite-radio-group-item value="vue">Vue</calcite-radio-group-item>
  </calcite-radio-group>
`};Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-radio-group\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    appearance="${select("appearance", ["solid", "outline"], "solid")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["auto", "full"], "auto")}"\n    ${boolean("disabled", false)}\n  >\n    <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>\n    <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>\n    <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>\n    <calcite-radio-group-item value="vue">Vue</calcite-radio-group-item>\n  </calcite-radio-group>\n`'}},Simple.parameters),WrappingCalciteLabel.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label scale="${select("scale", ["s", "m", "l"], "m")}">\n    My great radio group\n    <calcite-radio-group\n      layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n      appearance="${select("appearance", ["solid", "outline"], "solid")}"\n      width="${select("width", ["auto", "full"], "auto")}"\n      ${boolean("disabled", false)}\n    >\n      <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>\n      <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>\n      <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>\n      <calcite-radio-group-item value="vue">Vue</calcite-radio-group-item>\n    </calcite-radio-group>\n  </calcite-label>\n`'}},WrappingCalciteLabel.parameters),WithIcons.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label scale="${select("scale", ["s", "m", "l"], "m")}">\n    My great radio group\n    <calcite-radio-group\n      layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n      appearance="${select("appearance", ["solid", "outline"], "solid")}"\n      width="${select("width", ["auto", "full"], "auto")}"\n      ${boolean("disabled", false)}\n    >\n      <calcite-radio-group-item icon="car" value="car" checked>Car</calcite-radio-group-item>\n      <calcite-radio-group-item icon="plane" value="plane">Plane</calcite-radio-group-item>\n      <calcite-radio-group-item icon="biking" value="bicycle">Bicycle</calcite-radio-group-item>\n    </calcite-radio-group>\n  </calcite-label>\n`'}},WithIcons.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-radio-group\n    class="calcite-theme-dark"\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    appearance="${select("appearance", ["solid", "outline"], "solid")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["auto", "full"], "auto")}"\n    ${boolean("disabled", false)}\n  >\n    <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>\n    <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>\n    <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>\n    <calcite-radio-group-item value="vue">Vue</calcite-radio-group-item>\n  </calcite-radio-group>\n`'}},DarkMode.parameters),FullWidth.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:33vw;">\n    <calcite-radio-group\n      layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n      appearance="${select("appearance", ["solid", "outline"], "solid")}"\n      width="${select("width", ["auto", "full"], "full")}"\n      ${boolean("disabled", false)}\n    >\n      <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>\n      <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>\n      <calcite-radio-group-item value="long-text-1">Longer text wraps.</calcite-radio-group-item>\n      <calcite-radio-group-item value="long-text-2">Longer text wraps.</calcite-radio-group-item>\n    </calcite-radio-group>\n  </div>\n`'}},FullWidth.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-radio-group\n    dir="rtl"\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    appearance="${select("appearance", ["solid", "outline"], "solid")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["auto", "full"], "auto")}"\n    ${boolean("disabled", false)}\n  >\n    <calcite-radio-group-item value="react" checked>React</calcite-radio-group-item>\n    <calcite-radio-group-item value="ember">Ember</calcite-radio-group-item>\n    <calcite-radio-group-item value="angular">Angular</calcite-radio-group-item>\n    <calcite-radio-group-item value="vue">Vue</calcite-radio-group-item>\n  </calcite-radio-group>\n`'}},RTL.parameters)},"./src/components/rating/rating.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"WrappedInCalciteLabel",(function(){return WrappedInCalciteLabel})),__webpack_require__.d(__webpack_exports__,"Rtl",(function(){return Rtl}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Controls/Rating",parameters:{notes:'# calcite-rating\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-rating\n  show-chip\n  scale="m"\n  value="0"\n  average="4.4"\n  count="10"\n  intl-rating="Rating"\n  intl-stars="Rating"\n></calcite-rating>\n```\n\n## Properties\n\n| Property     | Attribute     | Description                                                                                     | Type                | Default       |\n| ------------ | ------------- | ----------------------------------------------------------------------------------------------- | ------------------- | ------------- |\n| `average`    | `average`     | optionally pass a cumulative average rating to display                                          | `number`            | `undefined`   |\n| `count`      | `count`       | optionally pass a number of previous ratings to display                                         | `number`            | `undefined`   |\n| `disabled`   | `disabled`    | is the rating component in a selectable mode                                                    | `boolean`           | `false`       |\n| `intlRating` | `intl-rating` | Localized string for "Rating" (used for aria label)                                             | `string`            | `TEXT.rating` |\n| `intlStars`  | `intl-stars`  | Localized string for labelling each star, `${num}` in the string will be replaced by the number | `string`            | `TEXT.stars`  |\n| `name`       | `name`        | The name of the rating                                                                          | `string`            | `undefined`   |\n| `readOnly`   | `read-only`   | is the rating component in a selectable mode                                                    | `boolean`           | `false`       |\n| `scale`      | `scale`       | specify the scale of the component, defaults to m                                               | `"l" \\| "m" \\| "s"` | `"m"`         |\n| `showChip`   | `show-chip`   | Show average and count data summary chip (if available)                                         | `boolean`           | `false`       |\n| `value`      | `value`       | the value of the rating component                                                               | `number`            | `0`           |\n\n## Events\n\n| Event                 | Description                              | Type                              |\n| --------------------- | ---------------------------------------- | --------------------------------- |\n| `calciteRatingChange` | Fires when the rating value has changed. | `CustomEvent<{ value: number; }>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## CSS Custom Properties\n\n| Name                            | Description                                              |\n| ------------------------------- | -------------------------------------------------------- |\n| `--calcite-rating-spacing-unit` | the amount of left/right margin between each rating star |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-chip](../chip)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-rating --\x3e calcite-icon\n  calcite-rating --\x3e calcite-chip\n  calcite-chip --\x3e calcite-icon\n  style calcite-rating fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-rating
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    value="${Object(dist.number)("value",0)}"
    ${Object(helpers.a)("show-chip",!0)}
    average="${Object(dist.number)("average",4.4)}"
    count="${Object(dist.number)("count",10)}"
    ${Object(helpers.a)("read-only",!1)}
    ${Object(helpers.a)("disabled",!1)}
    intl-rating="${Object(dist.text)("intl-rating","Rating")}"
    intl-stars="${Object(dist.text)("intl-rating","Stars: ${num}")}"
  ></calcite-rating>
`}),DarkMode=function(){return tests_utils.a`
  <calcite-rating
    class="calcite-theme-dark"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    value="${Object(dist.number)("value",0)}"
    ${Object(helpers.a)("show-chip",!0)}
    average="${Object(dist.number)("average",4.4)}"
    count="${Object(dist.number)("count",10)}"
    ${Object(helpers.a)("read-only",!1)}
    ${Object(helpers.a)("disabled",!1)}
    intl-rating="${Object(dist.text)("intl-rating","Rating")}"
    intl-stars="${Object(dist.text)("intl-rating","Stars: ${num}")}"
  ></calcite-rating>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f};var WrappedInCalciteLabel=function(){return tests_utils.a`
  <calcite-label layout="${Object(dist.select)("input layout",["default","inline","inline-space-between"],"default")}">
    Rate this!
    <calcite-rating
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      value="${Object(dist.number)("value",0)}"
      ${Object(helpers.a)("show-chip",!1)}
      average="${Object(dist.number)("average",0)}"
      count="${Object(dist.number)("count",0)}"
      ${Object(helpers.a)("read-only",!1)}
      ${Object(helpers.a)("disabled",!1)}
      intl-rating="${Object(dist.text)("intl-rating","Rating")}"
      intl-stars="${Object(dist.text)("intl-rating","Stars: ${num}")}"
    ></calcite-rating>
  </calcite-label>
`};WrappedInCalciteLabel.storyName="Wrapped in calcite-label";var Rtl=function(){return tests_utils.a`
  <div dir="rtl">
    <calcite-rating
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      value="${Object(dist.number)("value",0)}"
      ${Object(helpers.a)("show-chip",!0)}
      average="${Object(dist.number)("average",4.4)}"
      count="${Object(dist.number)("count",10)}"
      ${Object(helpers.a)("read-only",!1)}
      ${Object(helpers.a)("disabled",!1)}
      intl-rating="${Object(dist.text)("intl-rating","Rating")}"
      intl-stars="${Object(dist.text)("intl-rating","Stars: ${num}")}"
    ></calcite-rating>
  </div>
`};Rtl.storyName="RTL",Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-rating\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    value="${number("value", 0)}"\n    ${boolean("show-chip", true)}\n    average="${number("average", 4.4)}"\n    count="${number("count", 10)}"\n    ${boolean("read-only", false)}\n    ${boolean("disabled", false)}\n    intl-rating="${text("intl-rating", "Rating")}"\n    intl-stars="${text("intl-rating", "Stars: ${num}")}"\n  ></calcite-rating>\n`'}},Simple.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-rating\n    class="calcite-theme-dark"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    value="${number("value", 0)}"\n    ${boolean("show-chip", true)}\n    average="${number("average", 4.4)}"\n    count="${number("count", 10)}"\n    ${boolean("read-only", false)}\n    ${boolean("disabled", false)}\n    intl-rating="${text("intl-rating", "Rating")}"\n    intl-stars="${text("intl-rating", "Stars: ${num}")}"\n  ></calcite-rating>\n`'}},DarkMode.parameters),WrappedInCalciteLabel.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label layout="${select("input layout", ["default", "inline", "inline-space-between"], "default")}">\n    Rate this!\n    <calcite-rating\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      value="${number("value", 0)}"\n      ${boolean("show-chip", false)}\n      average="${number("average", 0)}"\n      count="${number("count", 0)}"\n      ${boolean("read-only", false)}\n      ${boolean("disabled", false)}\n      intl-rating="${text("intl-rating", "Rating")}"\n      intl-stars="${text("intl-rating", "Stars: ${num}")}"\n    ></calcite-rating>\n  </calcite-label>\n`'}},WrappedInCalciteLabel.parameters),Rtl.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div dir="rtl">\n    <calcite-rating\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      value="${number("value", 0)}"\n      ${boolean("show-chip", true)}\n      average="${number("average", 4.4)}"\n      count="${number("count", 10)}"\n      ${boolean("read-only", false)}\n      ${boolean("disabled", false)}\n      intl-rating="${text("intl-rating", "Rating")}"\n      intl-stars="${text("intl-rating", "Stars: ${num}")}"\n    ></calcite-rating>\n  </div>\n`'}},Rtl.parameters)},"./src/components/scrim/scrim.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode}));var helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Scrim",parameters:{notes:'# calcite-scrim\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<div style="position: relative; width: 200px; height: 200px; overflow: auto;">\n  <calcite-scrim>\n    <p>I\'m a panel that is not loading.</p>\n    <p>This content can have any zIndex and it will not be placed above</p>\n    <p>.</p>\n    <p>.</p>\n    <p>.</p>\n    <p>.</p>\n  </calcite-scrim>\n</div>\n```\n\n### Loading-scrim-panel\n\n```html\n<div style="position: relative; width: 200px; height: 200px; overflow: auto;">\n  <calcite-scrim loading>\n    <p>I\'m a panel that is not loading.</p>\n    <p>I have a loading spinner over my content.</p>\n    <p>.</p>\n    <p>.</p>\n    <p>.</p>\n    <p>.</p>\n  </calcite-scrim>\n</div>\n```\n\n## Properties\n\n| Property      | Attribute      | Description                                                                                             | Type      | Default        |\n| ------------- | -------------- | ------------------------------------------------------------------------------------------------------- | --------- | -------------- |\n| `intlLoading` | `intl-loading` | string to override English loading text                                                                 | `string`  | `TEXT.loading` |\n| `loading`     | `loading`      | Determines if the component will have the loader overlay. Otherwise, will render opaque disabled state. | `boolean` | `false`        |\n\n## Slots\n\n| Slot | Description                                                      |\n| ---- | ---------------------------------------------------------------- |\n|      | A slot for adding custom content, primarily loading information. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-block](../block)\n- [calcite-filter](../filter)\n- [calcite-modal](../modal)\n- [calcite-panel](../panel)\n- [calcite-pick-list](../pick-list)\n- [calcite-value-list](../value-list)\n\n### Depends on\n\n- [calcite-loader](../loader)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-scrim --\x3e calcite-loader\n  calcite-block --\x3e calcite-scrim\n  calcite-filter --\x3e calcite-scrim\n  calcite-modal --\x3e calcite-scrim\n  calcite-panel --\x3e calcite-scrim\n  calcite-pick-list --\x3e calcite-scrim\n  calcite-value-list --\x3e calcite-scrim\n  style calcite-scrim fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <div tabindex="0" style="position: relative; width: 400px; height: 400px">
    <calcite-scrim ${Object(helpers.a)("loading",!1)}></calcite-scrim>
    <div style="width: 400px; height: 400px; overflow: auto">
      <p>
        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor
        quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean
        ultricies mi vitae est. Mauris placerat eleifend leo.
      </p>
      <ul>
        <li>
          Morbi in sem quis dui placerat ornare. Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed
          arcu. Cras consequat.
        </li>
        <li>
          Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.
          Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus.
        </li>
        <li>
          Phasellus ultrices nulla quis nibh. Quisque a lectus. Donec consectetuer ligula vulputate sem tristique
          cursus. Nam nulla quam, gravida non, commodo a, sodales sit amet, nisi.
        </li>
        <li>
          Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.
        </li>
      </ul>
    </div>
  </div>
`}),DarkMode=function(){return tests_utils.a`
  <div tabindex="0" style="position: relative; width: 400px; height: 400px">
    <calcite-scrim class="calcite-theme-dark" ${Object(helpers.a)("loading",!1)}></calcite-scrim>
    <div style="width: 400px; height: 400px; overflow: auto">
      <p>
        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor
        quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean
        ultricies mi vitae est. Mauris placerat eleifend leo.
      </p>
      <ul>
        <li>
          Morbi in sem quis dui placerat ornare. Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed
          arcu. Cras consequat.
        </li>
        <li>
          Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.
          Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus.
        </li>
        <li>
          Phasellus ultrices nulla quis nibh. Quisque a lectus. Donec consectetuer ligula vulputate sem tristique
          cursus. Nam nulla quam, gravida non, commodo a, sodales sit amet, nisi.
        </li>
        <li>
          Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.
        </li>
      </ul>
    </div>
  </div>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f},Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div tabindex="0" style="position: relative; width: 400px; height: 400px">\n    <calcite-scrim ${boolean("loading", false)}></calcite-scrim>\n    <div style="width: 400px; height: 400px; overflow: auto">\n      <p>\n        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor\n        quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean\n        ultricies mi vitae est. Mauris placerat eleifend leo.\n      </p>\n      <ul>\n        <li>\n          Morbi in sem quis dui placerat ornare. Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed\n          arcu. Cras consequat.\n        </li>\n        <li>\n          Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.\n          Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus.\n        </li>\n        <li>\n          Phasellus ultrices nulla quis nibh. Quisque a lectus. Donec consectetuer ligula vulputate sem tristique\n          cursus. Nam nulla quam, gravida non, commodo a, sodales sit amet, nisi.\n        </li>\n        <li>\n          Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.\n        </li>\n      </ul>\n    </div>\n  </div>\n`'}},Simple.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div tabindex="0" style="position: relative; width: 400px; height: 400px">\n    <calcite-scrim class="calcite-theme-dark" ${boolean("loading", false)}></calcite-scrim>\n    <div style="width: 400px; height: 400px; overflow: auto">\n      <p>\n        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor\n        quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean\n        ultricies mi vitae est. Mauris placerat eleifend leo.\n      </p>\n      <ul>\n        <li>\n          Morbi in sem quis dui placerat ornare. Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed\n          arcu. Cras consequat.\n        </li>\n        <li>\n          Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.\n          Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus.\n        </li>\n        <li>\n          Phasellus ultrices nulla quis nibh. Quisque a lectus. Donec consectetuer ligula vulputate sem tristique\n          cursus. Nam nulla quam, gravida non, commodo a, sodales sit amet, nisi.\n        </li>\n        <li>\n          Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.\n        </li>\n      </ul>\n    </div>\n  </div>\n`'}},DarkMode.parameters)},"./src/components/select/select.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"grouped",(function(){return grouped})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var createSelectAttributes=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,group="select";return Object(utils.b)([{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1,group),delete this.build,this}}],exceptions)},createOptionAttributes=function(){return[{name:"disabled",value:Object(dist.boolean)("disabled",!1,"option")},{name:"label",value:Object(dist.text)("label","fancy label","option")},{name:"selected",value:Object(dist.boolean)("selected",!1,"option")},{name:"value",value:Object(dist.text)("value","value","option")}]},createOptionGroupAttributes=function(){return[{name:"label",value:Object(dist.text)("label","My fancy group label","option-group")}]},basic=(__webpack_exports__.default={title:"Components/Controls/Select",parameters:{notes:{select:'# calcite-select\n\nThis component represents a menu of options.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-select>\n  <calcite-option>high</calcite-option>\n  <calcite-option>medium</calcite-option>\n  <calcite-option>low</calcite-option>\n</calcite-select>\n```\n\n### Content\n\nSpecify the underlying value and content for each option.\n\n```html\n<calcite-select>\n  <calcite-option label="high">1</calcite-option>\n  <calcite-option label="medium">2</calcite-option>\n  <calcite-option label="low">3</calcite-option>\n</calcite-select>\n```\n\n### Disable\n\nDisable specific items or groups.\n\n```html\n<calcite-select>\n  <calcite-option-group label="letters">\n    <calcite-option>a</calcite-option>\n    <calcite-option>b</calcite-option>\n    <calcite-option>c</calcite-option>\n    <calcite-option disabled>d (disabled)</calcite-option>\n  </calcite-option-group>\n  <calcite-option-group label="numbers">\n    <calcite-option disabled>1 (disabled)</calcite-option>\n    <calcite-option>2</calcite-option>\n    <calcite-option selected>2</calcite-option>\n  </calcite-option-group>\n  <calcite-option-group label="non-selectable" disabled>\n    <calcite-option>You-Know-Who</calcite-option>\n    <calcite-option selected>Tom Marvolo Riddle</calcite-option>\n    <calcite-option>He-Who-Must-Not-Be-Named</calcite-option>\n    <calcite-option>Voldemort</calcite-option>\n  </calcite-option-group>\n</calcite-select>\n```\n\n### Grouped\n\nSeparate the options into groups.\n\n```html\n<calcite-select>\n  <calcite-option-group label="letters">\n    <calcite-option>a</calcite-option>\n    <calcite-option>b</calcite-option>\n    <calcite-option>c</calcite-option>\n  </calcite-option-group>\n  <calcite-option-group label="numbers">\n    <calcite-option>1</calcite-option>\n    <calcite-option selected>2</calcite-option>\n    <calcite-option>3</calcite-option>\n  </calcite-option-group>\n</calcite-select>\n```\n\n### Side-by-side\n\nSeparate the options side by side using a flex-box container.\n\n```html\n<div class="demo-side-by-side">\n  <calcite-select width="half" label="half width">\n    <calcite-option>☕️</calcite-option>\n    <calcite-option>🍵</calcite-option>\n    <calcite-option selected>🍻</calcite-option>\n  </calcite-select>\n  <calcite-select width="half" label="half width">\n    <calcite-option selected>🌮</calcite-option>\n    <calcite-option>🍔</calcite-option>\n    <calcite-option>🌯</calcite-option>\n  </calcite-select>\n</div>\n```\n\n### Value\n\nSpecify the underlying value for each option.\n\n```html\n<calcite-select>\n  <calcite-option value="high">😃</calcite-option>\n  <calcite-option value="medium">😶</calcite-option>\n  <calcite-option value="low">😭</calcite-option>\n</calcite-select>\n```\n\n## Properties\n\n| Property             | Attribute         | Description                                                         | Type                         | Default     |\n| -------------------- | ----------------- | ------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `disabled`           | `disabled`        | When true, it prevents the option from being selected.              | `boolean`                    | `false`     |\n| `label` _(required)_ | `label`           | The component\'s label. This is required for accessibility purposes. | `string`                     | `undefined` |\n| `name`               | `name`            | The select\'s name. Gets submitted with the form.                    | `string`                     | `undefined` |\n| `scale`              | `scale`           | The component scale.                                                | `"l" \\| "m" \\| "s"`          | `"m"`       |\n| `selectedOption`     | `selected-option` | The currently selected option.                                      | `any`                        | `undefined` |\n| `value`              | `value`           | The value of the selectedOption                                     | `string`                     | `null`      |\n| `width`              | `width`           | The component width.                                                | `"auto" \\| "full" \\| "half"` | `"auto"`    |\n\n## Events\n\n| Event                 | Description                                                | Type                |\n| --------------------- | ---------------------------------------------------------- | ------------------- |\n| `calciteSelectChange` | This event will fire whenever the selected option changes. | `CustomEvent<void>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description                          |\n| ---- | ------------------------------------ |\n|      | A slot for adding `calcite-option`s. |\n\n## CSS Custom Properties\n\n| Name                         | Description                                 |\n| ---------------------------- | ------------------------------------------- |\n| `--calcite-select-font-size` | the font-size of items in the select        |\n| `--calcite-select-spacing`   | the padding around the selected option text |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-select --\x3e calcite-icon\n  style calcite-select fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n',option:"# calcite-option\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property   | Attribute  | Description                                            | Type      | Default     |\n| ---------- | ---------- | ------------------------------------------------------ | --------- | ----------- |\n| `disabled` | `disabled` | When true, it prevents the option from being selected. | `boolean` | `false`     |\n| `label`    | `label`    | The option label.                                      | `string`  | `undefined` |\n| `selected` | `selected` | When true, this option is selected. Otherwise, false.  | `boolean` | `undefined` |\n| `value`    | `value`    | The value associated with this option.                 | `any`     | `undefined` |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n",optionGroup:"# calcite-option-group\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property             | Attribute  | Description                                                          | Type      | Default     |\n| -------------------- | ---------- | -------------------------------------------------------------------- | --------- | ----------- |\n| `disabled`           | `disabled` | When true, it prevents selection from any of its associated options. | `boolean` | `false`     |\n| `label` _(required)_ | `label`    | The group label. This property is required.                          | `string`  | `undefined` |\n\n## Slots\n\n| Slot | Description                          |\n| ---- | ------------------------------------ |\n|      | A slot for adding `calcite-option`s. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n"}}},function(){return tests_utils.a`<div style="width:260px">
    ${Object(utils.a)("calcite-select",createSelectAttributes(),tests_utils.a`
        ${Object(utils.a)("calcite-option",createOptionAttributes())}
        <calcite-option
          selected
          label="some fixed option with a very long label set on it to extend past the end"
          value="some-fixed-value"
        ></calcite-option>
        <calcite-option label="another fixed option" value="another-fixed-value"></calcite-option>
      `)}
  </div>`}),grouped=function(){return Object(utils.a)("calcite-select",createSelectAttributes(),tests_utils.a`
      ${Object(utils.a)("calcite-option-group",createOptionGroupAttributes(),tests_utils.a`
          ${Object(utils.a)("calcite-option",createOptionAttributes())}
          <calcite-option label="some fixed option (A)" value="some-fixed-value-a"></calcite-option>
          <calcite-option label="another fixed option (A)" value="another-fixed-value-a"></calcite-option>
        `)}
      <calcite-option-group label="group B (fixed)">
        <calcite-option label="some fixed option (B)" value="some-fixed-value-b"></calcite-option>
        <calcite-option label="another fixed option (B)" value="another-fixed-value-b"></calcite-option>
      </calcite-option-group>
    `)},RTL=function(){return Object(utils.a)("calcite-select",[].concat(_toConsumableArray(createSelectAttributes({exceptions:["dir"]})),[{name:"dir",value:"rtl"}]),tests_utils.a`
      ${Object(utils.a)("calcite-option-group",createOptionGroupAttributes(),tests_utils.a`
          ${Object(utils.a)("calcite-option",createOptionAttributes())}
          <calcite-option label="some fixed option (A)" value="some-fixed-value-a"></calcite-option>
          <calcite-option label="another fixed option (A)" value="another-fixed-value-a"></calcite-option>
        `)}
      <calcite-option-group label="group B (fixed)">
        <calcite-option label="some fixed option (B)" value="some-fixed-value-b"></calcite-option>
        <calcite-option label="another fixed option (B)" value="another-fixed-value-b"></calcite-option>
      </calcite-option-group>
    `)};basic.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width:260px">\n    ${create(\n      "calcite-select",\n      createSelectAttributes(),\n      html`\n        ${create("calcite-option", createOptionAttributes())}\n        <calcite-option\n          selected\n          label="some fixed option with a very long label set on it to extend past the end"\n          value="some-fixed-value"\n        ></calcite-option>\n        <calcite-option label="another fixed option" value="another-fixed-value"></calcite-option>\n      `\n    )}\n  </div>`'}},basic.parameters),grouped.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-select",\n    createSelectAttributes(),\n    html`\n      ${create(\n        "calcite-option-group",\n        createOptionGroupAttributes(),\n        html`\n          ${create("calcite-option", createOptionAttributes())}\n          <calcite-option label="some fixed option (A)" value="some-fixed-value-a"></calcite-option>\n          <calcite-option label="another fixed option (A)" value="another-fixed-value-a"></calcite-option>\n        `\n      )}\n      <calcite-option-group label="group B (fixed)">\n        <calcite-option label="some fixed option (B)" value="some-fixed-value-b"></calcite-option>\n        <calcite-option label="another fixed option (B)" value="another-fixed-value-b"></calcite-option>\n      </calcite-option-group>\n    `\n  )'}},grouped.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-select",\n    [\n      ...createSelectAttributes({ exceptions: ["dir"] }),\n      {\n        name: "dir",\n        value: "rtl"\n      }\n    ],\n    html`\n      ${create(\n        "calcite-option-group",\n        createOptionGroupAttributes(),\n        html`\n          ${create("calcite-option", createOptionAttributes())}\n          <calcite-option label="some fixed option (A)" value="some-fixed-value-a"></calcite-option>\n          <calcite-option label="another fixed option (A)" value="another-fixed-value-a"></calcite-option>\n        `\n      )}\n      <calcite-option-group label="group B (fixed)">\n        <calcite-option label="some fixed option (B)" value="some-fixed-value-b"></calcite-option>\n        <calcite-option label="another fixed option (B)" value="another-fixed-value-b"></calcite-option>\n      </calcite-option-group>\n    `\n  )'}},RTL.parameters)},"./src/components/shell/shell.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL})),__webpack_require__.d(__webpack_exports__,"advanced",(function(){return advanced})),__webpack_require__.d(__webpack_exports__,"advancedRTL",(function(){return advancedRTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),resources=__webpack_require__("./.storybook/resources.ts"),tests_utils=__webpack_require__("./src/tests/utils.ts"),createAttributes=(__webpack_exports__.default={title:"Components/Shell",parameters:{notes:['# calcite-shell\n\nThe `calcite-shell` component is used for application layout management. It is a container for the view as well as other calcite components like `calcite-shell-panel` and `calcite-tip-manager`.\n\n_note: calcite-shell supports tablet as the smallest screen size_\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Advanced\n\nRenders a shell with leading and trailing floating panels, action bar/pad, block, flow, tip manager, footer.\n\n```html\n<calcite-shell>\n  <calcite-shell-panel slot="primary-panel" position="start" detached>\n    <calcite-action-bar slot="action-bar">\n      <calcite-action-group>\n        <calcite-action text="Add" icon="plus"></calcite-action>\n        <calcite-action text="Save" disabled icon="save"></calcite-action>\n        <calcite-action text="Layers" active indicator icon="layers"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Add" icon="plus"></calcite-action>\n        <calcite-action text="Layers" indicator icon="layers"></calcite-action>\n      </calcite-action-group>\n    </calcite-action-bar>\n    <calcite-block collapsible  heading="Primary Content" summary="This is the primary.">\n      <calcite-block-content>\n        <calcite-action text="Puppies" text-enabled indicator icon="plus"></calcite-action>\n        <calcite-action text="Kittens" text-enabled icon="save"></calcite-action>\n        <calcite-action text="Birds?" text-enabled icon="banana"></calcite-action>\n      </calcite-block-content>\n    </calcite-block>\n    <calcite-block collapsible  heading="Additional Block" summary="Baby shark doo doo doo doo.">\n      <calcite-block-content>\n          <p>Cool thing.</p>\n      </calcite-block-content>\n    </calcite-block>\n  </calcite-shell-panel>\n\n   <calcite-shell-panel slot="contextual-panel" position="end" detached height-scale="l">\n      <calcite-action-bar slot="action-bar">\n        <calcite-action-group>\n          <calcite-action text="Add" active icon="plus"></calcite-action>\n          <calcite-action text="Save" disabled icon="save"></calcite-action>\n          <calcite-action text="Layers" icon="layers"></calcite-action>\n        </calcite-action-group>\n        <calcite-action-group>\n          <calcite-action text="Add" icon="plus"></calcite-action>\n          <calcite-action text="Save" disabled icon="save"></calcite-action>\n          <calcite-action text="Layers" icon="layers"></calcite-action>\n        </calcite-action-group>\n        <calcite-action slot="bottom-actions" text="Tips" icon="lightbulb"></calcite-action>\n      </calcite-action-bar>\n      <calcite-flow>\n        <calcite-panel heading="Layer settings">\n          <calcite-block collapsible open heading="Contextual Content" summary="Select goodness">\n            <calcite-value-list multiple filter-enabled>\n              <calcite-value-list-item label="2018 Population Density (Esri)" description="{POPDENS_CY}" value="POPDENS_CY">\n                <calcite-action slot="actions-end" icon="camera-flash-on"></calcite-action>\n              </calcite-value-list-item>\n              <calcite-value-list-item label="2018 Population Density [Updated]" description="{POPDENS_CY}" value="POPDENS_CY2">\n                <calcite-action slot="actions-end" icon="banana"></calcite-action>\n              </calcite-value-list-item>\n              <calcite-value-list-item label="2018 Total Households (Esri)" description="{TOTHH_CY}" value="TOTHH_CY">\n                <calcite-action slot="actions-end" icon="person2"></calcite-action>\n              </calcite-value-list-item>\n            </calcite-value-list>\n          </calcite-block>\n        </calcite-panel>\n      </calcite-flow>\n  </calcite-shell-panel>\n  <calcite-tip-manager slot="center-row">\n    <calcite-tip heading="The Red Rocks and Blue Water" thumbnail="https://placeimg.com/1000/600" text-thumbnail="This is an image of nature.">\n    <calcite-tip heading="The Long Trees" thumbnail="https://placeimg.com/1000/600" text-thumbnail="This is an image of trees.">\n  </calcite-tip-manager>\n  <footer slot="footer">Footer</footer>\n</calcite-shell>\n```\n\n### Basic\n\nRenders a basic shell with a header and a footer.\n\n```html\n<calcite-shell>\n  <div slot="header">\n    <header>\n      <h2>Shell Header: My App</h2>\n    </header>\n  </div>\n  <p>Shell Content</p>\n  \x3c!-- insert map or fillable content here --\x3e\n  <footer slot="footer">Footer</footer>\n</calcite-shell>\n```\n\n### With-panel-and-action-bar\n\nRenders a single panel with actions in an action bar.\n\n```html\n<calcite-shell>\n  <calcite-shell-panel slot="primary-panel" position="start">\n    <img src="https://via.placeholder.com/300x200" alt="placeholder" />\n    <calcite-action-bar slot="action-bar">\n      <calcite-action text="Add" active icon="plus"></calcite-action>\n      <calcite-action text="Save" disabled icon="save"></calcite-action>\n      <calcite-action text="Layers" icon="layers"></calcite-action>\n    </calcite-action-bar>\n  </calcite-shell-panel>\n</calcite-shell>\n```\n\n### With-panels\n\nRenders a shell with a header and panels on the left and right sides of the app.\n\n```html\n<calcite-shell>\n  <calcite-shell-panel slot="primary-panel" position="start">\n    Leading panel! (on the left side, since this is a LTR app)\n  </calcite-shell-panel>\n  <calcite-shell-panel slot="contextual-panel" position="end"> Trailing panel! (right side) </calcite-shell-panel>\n  <calcite-shell-center-row slot="center-row" position="end" height-scale="m">\n    Center Row! (center bottom)\n  </calcite-shell-center-row>\n  <div slot="header">\n    <header>\n      <h2>Shell Header: My App</h2>\n    </header>\n  </div>\n  <p>Shell Content</p>\n  \x3c!-- insert map or fillable content here --\x3e\n</calcite-shell>\n```\n\n## Properties\n\n| Property        | Attribute        | Description                                                   | Type      | Default |\n| --------------- | ---------------- | ------------------------------------------------------------- | --------- | ------- |\n| `contentBehind` | `content-behind` | Positions the center content behind any calcite-shell-panels. | `boolean` | `false` |\n\n## Slots\n\n| Slot                 | Description                                                                                                                              |\n| -------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- |\n|                      | A slot for adding content to the shell. This content will appear between any leading and trailing panels added to the shell. (eg. a map) |\n| `"center-row"`       | A slot for adding custom content in the center row.                                                                                      |\n| `"contextual-panel"` | A slot for adding the trailing `calcite-shell-panel`.                                                                                    |\n| `"footer"`           | A slot for adding footer content. This content will be positioned at the bottom of the shell.                                            |\n| `"header"`           | A slot for adding header content. This content will be positioned at the top of the shell.                                               |\n| `"primary-panel"`    | A slot for adding the leading `calcite-shell-panel`.                                                                                     |\n\n## CSS Custom Properties\n\n| Name                          | Description                                                               |\n| ----------------------------- | ------------------------------------------------------------------------- |\n| `--calcite-shell-tip-spacing` | the left/right positioning of the tip-manager when slotted within a shell |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n','# calcite-shell-panel\n\nThe `calcite-shell-panel` is a child component of `calcite-shell` used as a container to display other components like `calcite-block` and `calcite-flow`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nRenders a basic shell panel with text content.\n\n```html\n<calcite-shell-panel>\n  <p>Primary Content</p>\n</calcite-shell-panel>\n```\n\n### With-action-bar\n\nRenders a panel with an action bar.\n\n```html\n<calcite-shell-panel>\n  <calcite-action-bar slot="action-bar">\n    <calcite-action text="Add" icon="plus"></calcite-action>\n    <calcite-action text="Save" icon="save"></calcite-action>\n    <calcite-action text="Layers" icon="layers"></calcite-action>\n  </calcite-action-bar>\n</calcite-shell-panel>\n```\n\n### With-custom-element\n\nAdd `calcite-match-height` to a wrapping element to ensure proper height, scrolling, and sticky behavior (header, footer, fab). Note that multiple levels of nesting is not supported.\n\n```html\n<calcite-shell-panel>\n  <calcite-action-bar slot="action-bar">\n    <calcite-action text="Add" icon="plus"></calcite-action>\n    <calcite-action text="Save" icon="save"></calcite-action>\n    <calcite-action text="Layers" icon="layers"></calcite-action>\n  </calcite-action-bar>\n  <your-custom-element class="calcite-match-height">\n    <calcite-panel> ... </calcite-panel>\n  </your-custom-element>\n</calcite-shell-panel>\n```\n\n### With-flow\n\n```html\n<calcite-shell-panel>\n  <calcite-action-bar slot="action-bar">\n    <calcite-action text="Add" icon="plus"></calcite-action>\n    <calcite-action text="Save" icon="save"></calcite-action>\n    <calcite-action text="Layers" icon="layers"></calcite-action>\n  </calcite-action-bar>\n  <calcite-flow>\n    <calcite-panel> ... </calcite-panel>\n    <calcite-panel> ... </calcite-panel>\n  </calcite-flow>\n</calcite-shell-panel>\n```\n\n### With-panel\n\n```html\n<calcite-shell-panel>\n  <calcite-action-bar slot="action-bar">\n    <calcite-action text="Add" icon="plus"></calcite-action>\n    <calcite-action text="Save" icon="save"></calcite-action>\n    <calcite-action text="Layers" icon="layers"></calcite-action>\n  </calcite-action-bar>\n  <calcite-panel> ... </calcite-panel>\n</calcite-shell-panel>\n```\n\n## Properties\n\n| Property              | Attribute               | Description                                                                                  | Type                | Default       |\n| --------------------- | ----------------------- | -------------------------------------------------------------------------------------------- | ------------------- | ------------- |\n| `collapsed`           | `collapsed`             | Hide the content panel.                                                                      | `boolean`           | `false`       |\n| `detached`            | `detached`              | This property makes the content area appear like a "floating" panel.                         | `boolean`           | `false`       |\n| `detachedHeightScale` | `detached-height-scale` | Specifies the maximum height of the contents when detached.                                  | `"l" \\| "m" \\| "s"` | `"l"`         |\n| `intlResize`          | `intl-resize`           | Accessible label for resize separator.                                                       | `string`            | `TEXT.resize` |\n| `position`            | `position`              | Arranges the component depending on the elements \'dir\' property.                             | `"end" \\| "start"`  | `undefined`   |\n| `resizable`           | `resizable`             | This property makes the content area resizable if the calcite-shell-panel is not \'detached\'. | `boolean`           | `false`       |\n| `widthScale`          | `width-scale`           | This sets width of the content area.                                                         | `"l" \\| "m" \\| "s"` | `"m"`         |\n\n## Events\n\n| Event                     | Description                             | Type               |\n| ------------------------- | --------------------------------------- | ------------------ |\n| `calciteShellPanelToggle` | Emitted when collapse has been toggled. | `CustomEvent<any>` |\n\n## Slots\n\n| Slot           | Description                                            |\n| -------------- | ------------------------------------------------------ |\n|                | A slot for adding content to the shell panel.          |\n| `"action-bar"` | A slot for adding a `calcite-action-bar` to the panel. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n','# calcite-shell-center-row\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property      | Attribute      | Description                                                          | Type                | Default |\n| ------------- | -------------- | -------------------------------------------------------------------- | ------------------- | ------- |\n| `detached`    | `detached`     | This property makes the content area appear like a "floating" panel. | `boolean`           | `false` |\n| `heightScale` | `height-scale` | Specifies the maximum height of the row.                             | `"l" \\| "m" \\| "s"` | `"s"`   |\n| `position`    | `position`     | Arranges the component depending on the elements \'dir\' property.     | `"end" \\| "start"`  | `"end"` |\n\n## Slots\n\n| Slot           | Description                                            |\n| -------------- | ------------------------------------------------------ |\n|                | A slot for adding content to the shell panel.          |\n| `"action-bar"` | A slot for adding a `calcite-action-bar` to the panel. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n']}},function(group){var _ref=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([],exceptions)}),createShellPanelAttributes=function(group){var resizable=arguments.length>1&&void 0!==arguments[1]&&arguments[1],position=resources.a.position;return[{name:"slot",value:"Leading Panel"===group?"primary-panel":"contextual-panel"},{name:"collapsed",value:Object(dist.boolean)("collapsed",!1,group)},{name:"detached",value:Object(dist.boolean)("detached",!1,group)},{name:"position",value:Object(dist.select)("position",position.values,"Leading Panel"===group?position.values[0]:position.values[1],group)},{name:"resizable",value:Object(dist.boolean)("resizable",resizable,group)}]},createShellCenterRowAttributes=function(group){var position=resources.a.position,scale=resources.a.scale;return[{name:"detached",value:Object(dist.boolean)("detached",!1,group)},{name:"height-scale",value:Object(dist.select)("heightScale",scale.values,scale.values[0],group)},{name:"position",value:Object(dist.select)("position",position.values,position.values[1],group)},{name:"slot",value:"center-row"}]},actionBarPrimaryContentHTML=tests_utils.a`
  <calcite-action-group>
    <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>
    <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>
  </calcite-action-group>
  <calcite-action-group>
    <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>
  </calcite-action-group>
`,actionBarContextualContentHTML=tests_utils.a`
  <calcite-action-group>
    <calcite-action text="Idea" label="Add Item" icon="lightbulb"></calcite-action>
    <calcite-action text="Information" label="Save Item" icon="information"></calcite-action>
  </calcite-action-group>
  <calcite-action-group>
    <calcite-action text="Question" label="View Layers" icon="question"></calcite-action>
  </calcite-action-group>
`,actionBarPrimaryHTML=tests_utils.a`
  <calcite-action-bar class="calcite-theme-dark" slot="action-bar"> ${actionBarPrimaryContentHTML} </calcite-action-bar>
`,actionBarContextualHTML=tests_utils.a`
  <calcite-action-bar slot="action-bar"> ${actionBarContextualContentHTML} </calcite-action-bar>
`,leadingPanelHTML=tests_utils.a`
  ${actionBarPrimaryHTML}
  <p>My Leading Panel</p>
`,centerRowHTML=tests_utils.a`
  <div
    style="
    width:50vw;
    background-color: var(--calcite-app-background-content);
    padding: var(--calcite-app-cap-spacing) var(--calcite-app-side-spacing);
    "
  >
    <span>My Shell Center Row</span>
  </div>
`,trailingPanelHTML=tests_utils.a`
  ${actionBarContextualHTML}
  <p>My Trailing Panel</p>
`,headerHTML=tests_utils.a`
  <header slot="header">
    <h2>My Shell Header</h2>
  </header>
`,footerHTML='<footer slot="footer">My Shell Footer</footer>',contentHTML=tests_utils.a`
  <div
    style="
    width:100%;
    height:100%;
    background-image: linear-gradient(45deg, #ccc 25%, transparent 25%),
      linear-gradient(-45deg, #ccc 25%, transparent 25%),
      linear-gradient(45deg, transparent 75%, #ccc 75%),
      linear-gradient(-45deg, transparent 75%, #ccc 75%);
    background-size: 20px 20px;
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
  "
  ></div>
`,centerRowAdvancedHTML=tests_utils.a`
  <calcite-tip-manager slot="center-row">
    <calcite-tip-group group-title="Astronomy">
      <calcite-tip heading="The Red Rocks and Blue Water">
        <img slot="thumbnail" src="${Object(tests_utils.b)({width:1e3,height:600})}" alt="This is an image." />
        <p>
          This tip is how a tip should really look. It has a landscape or square image and a small amount of text
          content. This paragraph is in an "info" slot.
        </p>
        <p>
          This is another paragraph in a subsequent "info" slot. In publishing and graphic design, Lorem ipsum is a
          placeholder text commonly used to demonstrate the visual form of a document without relying on meaningful
          content (also called greeking). Replacing the actual content with placeholder text allows designers to design
          the form of the content before the content itself has been produced.
        </p>
        <a href="http://www.esri.com">This is the "link" slot.</a>
      </calcite-tip>
      <calcite-tip heading="The Long Trees">
        <img slot="thumbnail" src="${Object(tests_utils.b)({width:1e3,height:600})}" alt="This is an image." />
        <p>This tip has an image that is a pretty tall. And the text will run out before the end of the image.</p>
        <p>In astronomy, the terms object and body are often used interchangeably.</p>
        <a href="http://www.esri.com">View Esri</a>
      </calcite-tip>
    </calcite-tip-group>
    <calcite-tip heading="Square Nature">
      <img slot="thumbnail" src="${Object(tests_utils.b)({width:1e3,height:1e3})}" alt="This is an image." />
      <p>This tip has an image that is square. And the text will run out before the end of the image.</p>
      <p>In astronomy, the terms object and body are often used interchangeably.</p>
      <p>
        In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form
        of a document without relying on meaningful content (also called greeking). Replacing the actual content with
        placeholder text allows designers to design the form of the content before the content itself has been produced.
      </p>
      <a href="http://www.esri.com">View Esri</a>
    </calcite-tip>
    <calcite-tip heading="The lack of imagery">
      <p>This tip has no image. As such, the content area will take up the entire width of the tip.</p>
      <p>
        This is the next paragraph and should show how wide the content area is now. Of course, the width of the overall
        tip will affect things. In astronomy, the terms object and body are often used interchangeably.
      </p>
      <a href="http://www.esri.com">View Esri</a>
    </calcite-tip>
  </calcite-tip-manager>
`,basic=function(){return Object(utils.a)("calcite-shell",createAttributes("Shell"),tests_utils.a`
      ${headerHTML} ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Leading Panel"),leadingPanelHTML)}
      ${contentHTML} ${Object(utils.a)("calcite-shell-center-row",createShellCenterRowAttributes("Center Row"),centerRowHTML)}
      ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Trailing Panel"),trailingPanelHTML)} ${footerHTML}
    `)},RTL=function(){return Object(utils.a)("calcite-shell",createAttributes("Shell",{exceptions:["dir"]}).concat({name:"dir",value:"rtl"}),tests_utils.a`
      ${headerHTML} ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Leading Panel"),leadingPanelHTML)}
      ${contentHTML} ${Object(utils.a)("calcite-shell-center-row",createShellCenterRowAttributes("Center Row"),centerRowHTML)}
      ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Trailing Panel"),trailingPanelHTML)} ${footerHTML}
    `)},advancedLeadingPanelHTML=tests_utils.a`
  ${actionBarPrimaryHTML}
  <calcite-block collapsible open heading="Primary Content" summary="This is the primary.">
    <calcite-block-content>
      <calcite-action text="Play" text-enabled indicator icon="play"></calcite-action>
      <calcite-action text="Extent" text-enabled icon="extent"></calcite-action>
      <calcite-action text="Chart" text-enabled icon="arrow-up-right"></calcite-action>
    </calcite-block-content>
  </calcite-block>
  <calcite-block collapsible open heading="Another Block" summary="This is the primary.">
    <calcite-block-content>
      <div style="height: 300px;">
        <p>Cool thing.</p>
      </div>
    </calcite-block-content>
  </calcite-block>
  <calcite-block collapsible open heading="Additional Block" summary="This is the primary.">
    <calcite-block-content>
      <div style="height: 300px;">
        <p>Cool thing.</p>
      </div>
    </calcite-block-content>
  </calcite-block>
  <calcite-block collapsible open heading="More Block" summary="This is the primary.">
    <calcite-block-content>
      <div style="height: 300px;">
        <p>Cool thang.</p>
      </div>
    </calcite-block-content>
  </calcite-block>
`,advancedTrailingPanelHTMl=tests_utils.a`
  ${actionBarContextualHTML}
  <calcite-flow>
    <calcite-panel heading="Layer settings">
      <calcite-action slot="header-menu-actions" text="Cool thing" text-enabled></calcite-action>
      <calcite-action slot="header-menu-actions" text="Cool thing" text-enabled></calcite-action>
      <calcite-action slot="header-menu-actions" text="Cool thing" text-enabled></calcite-action>
      <calcite-block collapsible open heading="Contextual Content" summary="Select goodness">
        <calcite-block-content>
          <img alt="demo" src="${Object(tests_utils.b)({width:640,height:480})}" width="100%" />
          <calcite-block-section text="Cool things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
          <calcite-block-section text="Neat things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
        </calcite-block-content>
      </calcite-block>
      <calcite-button slot="footer-actions" width="half" appearance="clear">Cancel</calcite-button>
      <calcite-button slot="footer-actions" width="half">Save</calcite-button>
    </calcite-panel>
    <calcite-panel heading="Deeper flow item">
      <calcite-block collapsible open heading="Contextual Content" summary="Select goodness">
        <calcite-block-content>
          <calcite-block-section text="Cool things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
          <img alt="demo" src="${Object(tests_utils.b)({width:640,height:480})}" width="100%" />
          <calcite-block-section text="Neat things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
        </calcite-block-content>
      </calcite-block>
      <calcite-block collapsible open heading="Even more content" summary="Select goodness">
        <calcite-block-content>
          <calcite-block-section text="Cool things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
          <img alt="demo" src="${Object(tests_utils.b)({width:640,height:480})}" width="100%" />
          <calcite-block-section text="Neat things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
        </calcite-block-content>
      </calcite-block>
      <calcite-button slot="footer-actions" width="half" appearance="clear">Cancel</calcite-button>
      <calcite-button slot="footer-actions" width="half">Save</calcite-button>
    </calcite-panel>
  </calcite-flow>
`,advanced=function(){return Object(utils.a)("calcite-shell",createAttributes("Shell"),tests_utils.a`
      ${headerHTML}
      ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Leading Panel",!0),advancedLeadingPanelHTML)}
      ${contentHTML} ${centerRowAdvancedHTML}
      ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Trailing Panel",!0),advancedTrailingPanelHTMl)}
      ${footerHTML}
    `)},advancedRTL=function(){return Object(utils.a)("calcite-shell",createAttributes("Shell",{exceptions:["dir"]}).concat({name:"dir",value:"rtl"}),tests_utils.a`
      ${headerHTML}
      ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Leading Panel"),advancedLeadingPanelHTML)}
      ${contentHTML} ${centerRowAdvancedHTML}
      ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Trailing Panel"),advancedTrailingPanelHTMl)}
      ${footerHTML}
    `)};basic.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-shell",\n    createAttributes("Shell"),\n    html`\n      ${headerHTML} ${create("calcite-shell-panel", createShellPanelAttributes("Leading Panel"), leadingPanelHTML)}\n      ${contentHTML} ${create("calcite-shell-center-row", createShellCenterRowAttributes("Center Row"), centerRowHTML)}\n      ${create("calcite-shell-panel", createShellPanelAttributes("Trailing Panel"), trailingPanelHTML)} ${footerHTML}\n    `\n  )'}},basic.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-shell",\n    createAttributes("Shell", { exceptions: ["dir"] }).concat({ name: "dir", value: "rtl" }),\n    html`\n      ${headerHTML} ${create("calcite-shell-panel", createShellPanelAttributes("Leading Panel"), leadingPanelHTML)}\n      ${contentHTML} ${create("calcite-shell-center-row", createShellCenterRowAttributes("Center Row"), centerRowHTML)}\n      ${create("calcite-shell-panel", createShellPanelAttributes("Trailing Panel"), trailingPanelHTML)} ${footerHTML}\n    `\n  )'}},RTL.parameters),advanced.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-shell",\n    createAttributes("Shell"),\n    html`\n      ${headerHTML}\n      ${create("calcite-shell-panel", createShellPanelAttributes("Leading Panel", true), advancedLeadingPanelHTML)}\n      ${contentHTML} ${centerRowAdvancedHTML}\n      ${create("calcite-shell-panel", createShellPanelAttributes("Trailing Panel", true), advancedTrailingPanelHTMl)}\n      ${footerHTML}\n    `\n  )'}},advanced.parameters),advancedRTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-shell",\n    createAttributes("Shell", { exceptions: ["dir"] }).concat({ name: "dir", value: "rtl" }),\n    html`\n      ${headerHTML}\n      ${create("calcite-shell-panel", createShellPanelAttributes("Leading Panel"), advancedLeadingPanelHTML)}\n      ${contentHTML} ${centerRowAdvancedHTML}\n      ${create("calcite-shell-panel", createShellPanelAttributes("Trailing Panel"), advancedTrailingPanelHTMl)}\n      ${footerHTML}\n    `\n  )'}},advancedRTL.parameters)},"./src/components/slider/slider.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SingleValue",(function(){return SingleValue})),__webpack_require__.d(__webpack_exports__,"Range",(function(){return Range})),__webpack_require__.d(__webpack_exports__,"MirroredRangeDark",(function(){return MirroredRangeDark})),__webpack_require__.d(__webpack_exports__,"RangeLabeledTicks",(function(){return RangeLabeledTicks})),__webpack_require__.d(__webpack_exports__,"RangeLabeledTicksMirror",(function(){return RangeLabeledTicksMirror})),__webpack_require__.d(__webpack_exports__,"RangeLabeledTicksOverlappingAtMax",(function(){return RangeLabeledTicksOverlappingAtMax})),__webpack_require__.d(__webpack_exports__,"RangeLabeledTicksOverlappingAtMin",(function(){return RangeLabeledTicksOverlappingAtMin})),__webpack_require__.d(__webpack_exports__,"RangeLabeledTicksEdgePositioningAtMax",(function(){return RangeLabeledTicksEdgePositioningAtMax})),__webpack_require__.d(__webpack_exports__,"RangeLabeledTicksEdgePositioningAtMin",(function(){return RangeLabeledTicksEdgePositioningAtMin})),__webpack_require__.d(__webpack_exports__,"Histogram",(function(){return Histogram})),__webpack_require__.d(__webpack_exports__,"HistogramWithColors",(function(){return HistogramWithColors})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"HistogramDark",(function(){return HistogramDark}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),SingleValue=(__webpack_exports__.default={title:"Components/Controls/Slider",parameters:{notes:'# calcite-slider\n\nRange selection component for selecting single or multiple numeric values inside a given range.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-slider min="1" max="100" value="50" step="1"></calcite-slider>\n```\n\n### Two-handles\n\nIf you\'d like to allow an upper and lower value selection (two handles), you can set `min-value` and `max-value` rather than `value`. Note: these are mutually exclusive.\n\n```html\n<calcite-slider\n  min="1"\n  max="100"\n  min-value="50"\n  max-value="85"\n  step="1"\n  min-label="Temperature (lower)"\n  max-label="Temperature (upper)"\n></calcite-slider>\n```\n\n## Properties\n\n| Property         | Attribute       | Description                                                                                                                                 | Type                | Default     |\n| ---------------- | --------------- | ------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- | ----------- |\n| `disabled`       | `disabled`      | Disable and gray out the slider                                                                                                             | `boolean`           | `false`     |\n| `hasHistogram`   | `has-histogram` | Indicates if a histogram is present                                                                                                         | `boolean`           | `false`     |\n| `histogram`      | --              | List of x,y coordinates within the slider\'s min and max, displays above the slider track.                                                   | `Point[]`           | `undefined` |\n| `histogramStops` | --              | Array of values describing a single color stop, sorted by offset ascending.                                                                 | `ColorStop[]`       | `undefined` |\n| `labelHandles`   | `label-handles` | Label handles with their numeric value                                                                                                      | `boolean`           | `false`     |\n| `labelTicks`     | `label-ticks`   | Label tick marks with their numeric value.                                                                                                  | `boolean`           | `false`     |\n| `max`            | `max`           | Maximum selectable value                                                                                                                    | `number`            | `100`       |\n| `maxLabel`       | `max-label`     | Used as an accessible label (aria-label) for second handle if needed (ex. "Temperature, upper bound")                                       | `string`            | `undefined` |\n| `maxValue`       | `max-value`     | Currently selected upper number (if multi-select)                                                                                           | `number`            | `undefined` |\n| `min`            | `min`           | Minimum selectable value                                                                                                                    | `number`            | `0`         |\n| `minLabel`       | `min-label`     | Used as an accessible label (aria-label) for first (or only) handle (ex. "Temperature, lower bound")                                        | `string`            | `undefined` |\n| `minValue`       | `min-value`     | Currently selected lower number (if multi-select)                                                                                           | `number`            | `undefined` |\n| `mirrored`       | `mirrored`      | When true, the slider will display values from high to low. Note that this value will be ignored if the slider has an associated histogram. | `boolean`           | `false`     |\n| `name`           | `name`          | The name of the slider                                                                                                                      | `string`            | `undefined` |\n| `pageStep`       | `page-step`     | Interval to move on page up/page down keys                                                                                                  | `number`            | `undefined` |\n| `precise`        | `precise`       | Use finer point for handles                                                                                                                 | `boolean`           | `false`     |\n| `required`       | `required`      | When true, makes the component required for form-submission.                                                                                | `boolean`           | `false`     |\n| `scale`          | `scale`         | Specify the scale of the slider, defaults to m                                                                                              | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `snap`           | `snap`          | When true, enables snap selection along the step interval                                                                                   | `boolean`           | `false`     |\n| `step`           | `step`          | Interval to move on up/down keys                                                                                                            | `number`            | `1`         |\n| `ticks`          | `ticks`         | Show tick marks on the number line at provided interval                                                                                     | `number`            | `undefined` |\n| `value`          | `value`         | Currently selected number (if single select)                                                                                                | `number`            | `null`      |\n\n## Events\n\n| Event                 | Description                                                                                                                                                                                                                                                                                           | Type               |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `calciteSliderChange` | Fires on when the thumb is released on slider If you need to constantly listen to the drag event, please use calciteSliderInput instead                                                                                                                                                               | `CustomEvent<any>` |\n| `calciteSliderInput`  | Fires on all updates to the slider. :warning: Will be fired frequently during drag. If you are performing any expensive operations consider using a debounce or throttle to avoid locking up the main thread.                                                                                         | `CustomEvent<any>` |\n| `calciteSliderUpdate` | <span style="color:red">**[DEPRECATED]**</span> use calciteSliderInput instead<br/><br/>Fires on all updates to the slider. :warning: Will be fired frequently during drag. If you are performing any expensive operations consider using a debounce or throttle to avoid locking up the main thread. | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Dependencies\n\n### Depends on\n\n- [calcite-graph](../graph)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-slider --\x3e calcite-graph\n  style calcite-slider fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-slider
    min="${Object(dist.number)("min",0)}"
    max="${Object(dist.number)("max",100)}"
    value="${Object(dist.number)("value",50)}"
    step="${Object(dist.number)("step",1)}"
    label="${Object(dist.text)("label","Temperature")}"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("label-handles",!1)}
    ${Object(helpers.a)("label-ticks",!1)}
    ticks="${Object(dist.number)("ticks",0)}"
    page-step="${Object(dist.number)("page-step",5)}"
    ${Object(helpers.a)("precise",!1)}
    ${Object(helpers.a)("snap",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  ></calcite-slider>
`});SingleValue.storyName="Single value";var Range=function(){return tests_utils.a`
  <calcite-slider
    min="${Object(dist.number)("min",0)}"
    min-label="${Object(dist.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(dist.number)("min-value",25)}"
    max="${Object(dist.number)("max",100)}"
    max-label="${Object(dist.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(dist.number)("max-value",75)}"
    step="${Object(dist.number)("step",1)}"
    ${Object(helpers.a)("label-handles",!1)}
    ${Object(helpers.a)("label-ticks",!1)}
    ticks="${Object(dist.number)("ticks",20)}"
    ${Object(helpers.a)("precise",!1)}
    ${Object(helpers.a)("snap",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  ></calcite-slider>
`},MirroredRangeDark=function(){return tests_utils.a`
  <calcite-slider
    class="calcite-theme-dark"
    mirrored
    min="${Object(dist.number)("min",0)}"
    min-label="${Object(dist.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(dist.number)("min-value",25)}"
    max="${Object(dist.number)("max",100)}"
    max-label="${Object(dist.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(dist.number)("max-value",75)}"
    step="${Object(dist.number)("step",1)}"
    ${Object(helpers.a)("label-handles",!0)}
    ${Object(helpers.a)("label-ticks",!0)}
    ticks="${Object(dist.number)("ticks",20)}"
    ${Object(helpers.a)("precise",!0)}
    ${Object(helpers.a)("snap",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  ></calcite-slider>
`};MirroredRangeDark.story={parameters:{themes:utils.f}};var RangeLabeledTicks=function(){return tests_utils.a`
  <calcite-slider
    min="${Object(dist.number)("min",5)}"
    min-label="${Object(dist.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(dist.number)("min-value",95)}"
    max="${Object(dist.number)("max",100)}"
    max-label="${Object(dist.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(dist.number)("max-value",100)}"
    step="${Object(dist.number)("step",10)}"
    ${Object(helpers.a)("label-handles",!0)}
    ${Object(helpers.a)("label-ticks",!0)}
    ${Object(helpers.a)("precise",!1)}
    ${Object(helpers.a)("snap",!0)}
  ></calcite-slider>
`},RangeLabeledTicksMirror=function(){return tests_utils.a`
  <calcite-slider
    min="${Object(dist.number)("min",5)}"
    min-label="${Object(dist.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(dist.number)("min-value",95)}"
    max="${Object(dist.number)("max",100)}"
    max-label="${Object(dist.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(dist.number)("max-value",100)}"
    step="${Object(dist.number)("step",10)}"
    ${Object(helpers.a)("label-handles",!0)}
    ${Object(helpers.a)("label-ticks",!0)}
    ${Object(helpers.a)("precise",!1)}
    ${Object(helpers.a)("snap",!0)}
    ${Object(helpers.a)("mirrored",!0)}
  ></calcite-slider>
`},RangeLabeledTicksOverlappingAtMax=function(){return tests_utils.a`
  <calcite-slider
    min="${Object(dist.number)("min",5)}"
    min-label="${Object(dist.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(dist.number)("min-value",100)}"
    max="${Object(dist.number)("max",100)}"
    max-label="${Object(dist.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(dist.number)("max-value",100)}"
    step="${Object(dist.number)("step",10)}"
    ${Object(helpers.a)("label-handles",!0)}
    ${Object(helpers.a)("label-ticks",!0)}
    ${Object(helpers.a)("precise",!1)}
    ${Object(helpers.a)("snap",!0)}
  ></calcite-slider>
`},RangeLabeledTicksOverlappingAtMin=function(){return tests_utils.a`
  <calcite-slider
    min="${Object(dist.number)("min",5)}"
    min-label="${Object(dist.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(dist.number)("min-value",5)}"
    max="${Object(dist.number)("max",100)}"
    max-label="${Object(dist.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(dist.number)("max-value",5)}"
    step="${Object(dist.number)("step",10)}"
    ${Object(helpers.a)("label-handles",!0)}
    ${Object(helpers.a)("label-ticks",!0)}
    ${Object(helpers.a)("precise",!1)}
    ${Object(helpers.a)("snap",!0)}
  ></calcite-slider>
`},RangeLabeledTicksEdgePositioningAtMax=function(){return tests_utils.a`
  <calcite-slider
    min="${Object(dist.number)("min",5)}"
    min-label="${Object(dist.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(dist.number)("min-value",99.5)}"
    max="${Object(dist.number)("max",100)}"
    max-label="${Object(dist.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(dist.number)("max-value",100)}"
    step="${Object(dist.number)("step",10)}"
    ${Object(helpers.a)("label-handles",!0)}
    ${Object(helpers.a)("label-ticks",!0)}
    ${Object(helpers.a)("precise",!1)}
    ${Object(helpers.a)("snap",!0)}
  ></calcite-slider>
`},RangeLabeledTicksEdgePositioningAtMin=function(){return tests_utils.a`
  <calcite-slider
    min="${Object(dist.number)("min",5)}"
    min-label="${Object(dist.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(dist.number)("min-value",5)}"
    max="${Object(dist.number)("max",100)}"
    max-label="${Object(dist.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(dist.number)("max-value",5.5)}"
    step="${Object(dist.number)("step",10)}"
    ${Object(helpers.a)("label-handles",!0)}
    ${Object(helpers.a)("label-ticks",!0)}
    ${Object(helpers.a)("precise",!1)}
    ${Object(helpers.a)("snap",!0)}
  ></calcite-slider>
`},Histogram=function(){var slider=document.createElement("calcite-slider");return slider.min=Object(dist.number)("min",-100),slider.minValue=Object(dist.number)("min-value",-33.32),slider.max=Object(dist.number)("max",100),slider.maxValue=Object(dist.number)("max-value",30.87),slider.histogram=Object(dist.array)("histogram",[[-90,0],[-60,12],[-20,25],[20,55],[60,10],[90,0]],"  "),slider.labelHandles=Object(dist.boolean)("label-handles",!1),slider.labelTicks=Object(dist.boolean)("label-ticks",!1),slider.ticks=Object(dist.number)("ticks",10),slider.precise=Object(dist.boolean)("precise",!1),slider.snap=Object(dist.boolean)("snap",!1),slider.scale=Object(dist.select)("scale",["s","m","l"],"m"),slider.style.minWidth="60vw",slider},HistogramWithColors=function(){var slider=document.createElement("calcite-slider");slider.min=Object(dist.number)("min",0),slider.minValue=Object(dist.number)("min-value",35),slider.max=Object(dist.number)("max",100),slider.maxValue=Object(dist.number)("max-value",55),slider.histogram=Object(dist.array)("histogram",[[0,0],[20,12],[40,25],[60,55],[80,10],[100,0]],"  "),slider.style.minWidth="60vw";var colors=Object(dist.array)("histogram colors",["red","green","blue"]),offsets=Object(dist.array)("histogram color offsets",colors.map((function(_,i){return""+1/(colors.length-1)*i})));return slider.histogramStops=colors.map((function(color,i){return{offset:parseFloat(offsets[i]),color:color}})),slider.scale=Object(dist.select)("scale",["s","m","l"],"m"),slider},DarkMode=function(){return tests_utils.a`
  <calcite-slider
    class="calcite-theme-dark"
    min="${Object(dist.number)("min",0)}"
    max="${Object(dist.number)("max",100)}"
    value="${Object(dist.number)("value",50)}"
    step="${Object(dist.number)("step",1)}"
    label="${Object(dist.text)("label","Temperature")}"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("label-handles",!1)}
    ${Object(helpers.a)("label-ticks",!1)}
    ticks="${Object(dist.number)("ticks",0)}"
    page-step="${Object(dist.number)("page-step",5)}"
    ${Object(helpers.a)("precise",!1)}
    ${Object(helpers.a)("snap",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  ></calcite-slider>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f};var HistogramDark=function(){var slider=document.createElement("calcite-slider");return slider.min=Object(dist.number)("min",0),slider.minValue=Object(dist.number)("min-value",25),slider.max=Object(dist.number)("max",100),slider.maxValue=Object(dist.number)("max-value",75),slider.histogram=Object(dist.array)("histogram",[[0,0],[20,12],[40,25],[60,55],[80,10],[100,0]],"  "),slider.labelHandles=Object(dist.boolean)("label-handles",!1),slider.labelTicks=Object(dist.boolean)("label-ticks",!1),slider.ticks=Object(dist.number)("ticks",10),slider.precise=Object(dist.boolean)("precise",!1),slider.snap=Object(dist.boolean)("snap",!1),slider.scale=Object(dist.select)("scale",["s","m","l"],"m"),slider.style.minWidth="60vw",slider.className="calcite-theme-dark",slider};HistogramDark.storyName="Histogram Dark theme",HistogramDark.parameters={themes:utils.f},SingleValue.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 0)}"\n    max="${number("max", 100)}"\n    value="${number("value", 50)}"\n    step="${number("step", 1)}"\n    label="${text("label", "Temperature")}"\n    ${boolean("disabled", false)}\n    ${boolean("label-handles", false)}\n    ${boolean("label-ticks", false)}\n    ticks="${number("ticks", 0)}"\n    page-step="${number("page-step", 5)}"\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-slider>\n`'}},SingleValue.parameters),Range.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 0)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 25)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 75)}"\n    step="${number("step", 1)}"\n    ${boolean("label-handles", false)}\n    ${boolean("label-ticks", false)}\n    ticks="${number("ticks", 20)}"\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-slider>\n`'}},Range.parameters),MirroredRangeDark.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    class="calcite-theme-dark"\n    mirrored\n    min="${number("min", 0)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 25)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 75)}"\n    step="${number("step", 1)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ticks="${number("ticks", 20)}"\n    ${boolean("precise", true)}\n    ${boolean("snap", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-slider>\n`'}},MirroredRangeDark.parameters),RangeLabeledTicks.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 5)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 95)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 100)}"\n    step="${number("step", 10)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n  ></calcite-slider>\n`'}},RangeLabeledTicks.parameters),RangeLabeledTicksMirror.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 5)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 95)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 100)}"\n    step="${number("step", 10)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n    ${boolean("mirrored", true)}\n  ></calcite-slider>\n`'}},RangeLabeledTicksMirror.parameters),RangeLabeledTicksOverlappingAtMax.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 5)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 100)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 100)}"\n    step="${number("step", 10)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n  ></calcite-slider>\n`'}},RangeLabeledTicksOverlappingAtMax.parameters),RangeLabeledTicksOverlappingAtMin.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 5)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 5)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 5)}"\n    step="${number("step", 10)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n  ></calcite-slider>\n`'}},RangeLabeledTicksOverlappingAtMin.parameters),RangeLabeledTicksEdgePositioningAtMax.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 5)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 99.5)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 100)}"\n    step="${number("step", 10)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n  ></calcite-slider>\n`'}},RangeLabeledTicksEdgePositioningAtMax.parameters),RangeLabeledTicksEdgePositioningAtMin.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 5)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 5)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 5.5)}"\n    step="${number("step", 10)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n  ></calcite-slider>\n`'}},RangeLabeledTicksEdgePositioningAtMin.parameters),Histogram.parameters=Object.assign({storySource:{source:'(): HTMLCalciteSliderElement => {\n  const slider = document.createElement("calcite-slider");\n  slider.min = number("min", -100);\n  slider.minValue = number("min-value", -33.32);\n  slider.max = number("max", 100);\n  slider.maxValue = number("max-value", 30.87);\n  slider.histogram = array(\n    "histogram",\n    [\n      [-90, 0],\n      [-60, 12],\n      [-20, 25],\n      [20, 55],\n      [60, 10],\n      [90, 0]\n    ],\n    "  "\n  );\n  slider.labelHandles = booleanFn("label-handles", false);\n  slider.labelTicks = booleanFn("label-ticks", false);\n  slider.ticks = number("ticks", 10);\n  slider.precise = booleanFn("precise", false);\n  slider.snap = booleanFn("snap", false);\n  slider.scale = select("scale", ["s", "m", "l"], "m");\n  slider.style.minWidth = "60vw";\n  return slider;\n}'}},Histogram.parameters),HistogramWithColors.parameters=Object.assign({storySource:{source:'(): HTMLCalciteSliderElement => {\n  const slider = document.createElement("calcite-slider");\n  slider.min = number("min", 0);\n  slider.minValue = number("min-value", 35);\n  slider.max = number("max", 100);\n  slider.maxValue = number("max-value", 55);\n  slider.histogram = array(\n    "histogram",\n    [\n      [0, 0],\n      [20, 12],\n      [40, 25],\n      [60, 55],\n      [80, 10],\n      [100, 0]\n    ],\n    "  "\n  );\n  slider.style.minWidth = "60vw";\n  const colors = array("histogram colors", ["red", "green", "blue"]);\n  const offsets = array(\n    "histogram color offsets",\n    colors.map((_, i) => `${(1 / (colors.length - 1)) * i}`)\n  );\n  slider.histogramStops = colors.map((color, i) => ({ offset: parseFloat(offsets[i]), color }));\n  slider.scale = select("scale", ["s", "m", "l"], "m");\n  return slider;\n}'}},HistogramWithColors.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    class="calcite-theme-dark"\n    min="${number("min", 0)}"\n    max="${number("max", 100)}"\n    value="${number("value", 50)}"\n    step="${number("step", 1)}"\n    label="${text("label", "Temperature")}"\n    ${boolean("disabled", false)}\n    ${boolean("label-handles", false)}\n    ${boolean("label-ticks", false)}\n    ticks="${number("ticks", 0)}"\n    page-step="${number("page-step", 5)}"\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-slider>\n`'}},DarkMode.parameters),HistogramDark.parameters=Object.assign({storySource:{source:'(): HTMLCalciteSliderElement => {\n  const slider = document.createElement("calcite-slider");\n  slider.min = number("min", 0);\n  slider.minValue = number("min-value", 25);\n  slider.max = number("max", 100);\n  slider.maxValue = number("max-value", 75);\n  slider.histogram = array(\n    "histogram",\n    [\n      [0, 0],\n      [20, 12],\n      [40, 25],\n      [60, 55],\n      [80, 10],\n      [100, 0]\n    ],\n    "  "\n  );\n  slider.labelHandles = booleanFn("label-handles", false);\n  slider.labelTicks = booleanFn("label-ticks", false);\n  slider.ticks = number("ticks", 10);\n  slider.precise = booleanFn("precise", false);\n  slider.snap = booleanFn("snap", false);\n  slider.scale = select("scale", ["s", "m", "l"], "m");\n  slider.style.minWidth = "60vw";\n  slider.className = "calcite-theme-dark";\n  return slider;\n}'}},HistogramDark.parameters)},"./src/components/split-button/split-button.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"SimplePrimaryIconEnd",(function(){return SimplePrimaryIconEnd})),__webpack_require__.d(__webpack_exports__,"SimplePrimaryIconStartAndPrimaryIconEnd",(function(){return SimplePrimaryIconStartAndPrimaryIconEnd})),__webpack_require__.d(__webpack_exports__,"Rtl",(function(){return Rtl})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Buttons/Split Button",parameters:{notes:'# calcite-split-button\n\nThe calcite-split-button control is one that combines a button with a dropdown menu in order to provide a primary action along with one or more related secondary options / actions. It\'s useful for grouping related actions or options for users, while elevating a commonly-used or default action for easier access. Its inner content populates the control\'s dropdown menu, and is thus expected to be valid `calcite-dropdown` content.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-split-button primary-icon-start="save" primary-text="Primary Option">\n  <calcite-dropdown-group selection-mode="none">\n    <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n    <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n    <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n  </calcite-dropdown-group>\n</calcite-split-button>\n```\n\n## Properties\n\n| Property             | Attribute               | Description                                                                                                                | Type                                               | Default      |\n| -------------------- | ----------------------- | -------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------- | ------------ |\n| `appearance`         | `appearance`            | specify the appearance style of the button, defaults to solid.                                                             | `"clear" \\| "outline" \\| "solid" \\| "transparent"` | `"solid"`    |\n| `color`              | `color`                 | specify the color of the control, defaults to blue                                                                         | `"blue" \\| "inverse" \\| "neutral" \\| "red"`        | `"blue"`     |\n| `disabled`           | `disabled`              | is the control disabled                                                                                                    | `boolean`                                          | `false`      |\n| `dropdownIconType`   | `dropdown-icon-type`    | specify the icon used for the dropdown menu, defaults to chevron                                                           | `"caret" \\| "chevron" \\| "ellipsis" \\| "overflow"` | `"chevron"`  |\n| `dropdownLabel`      | `dropdown-label`        | aria label for overflow button                                                                                             | `string`                                           | `undefined`  |\n| `loading`            | `loading`               | optionally add a calcite-loader component to the control, disabling interaction. with the primary button                   | `boolean`                                          | `false`      |\n| `overlayPositioning` | `overlay-positioning`   | Describes the type of positioning to use for the dropdown. If your element is in a fixed container, use the \'fixed\' value. | `"absolute" \\| "fixed"`                            | `"absolute"` |\n| `primaryIconEnd`     | `primary-icon-end`      | optionally pass an icon to display at the end of the primary button - accepts Calcite UI icon names                        | `string`                                           | `undefined`  |\n| `primaryIconFlipRtl` | `primary-icon-flip-rtl` | flip the primary icon(s) in rtl                                                                                            | `"both" \\| "end" \\| "start"`                       | `undefined`  |\n| `primaryIconStart`   | `primary-icon-start`    | optionally pass an icon to display at the start of the primary button - accepts Calcite UI icon names                      | `string`                                           | `undefined`  |\n| `primaryLabel`       | `primary-label`         | optionally pass an aria-label for the primary button                                                                       | `string`                                           | `undefined`  |\n| `primaryText`        | `primary-text`          | text for primary action button                                                                                             | `string`                                           | `undefined`  |\n| `scale`              | `scale`                 | specify the scale of the control, defaults to m                                                                            | `"l" \\| "m" \\| "s"`                                | `"m"`        |\n| `width`              | `width`                 | specify the width of the button, defaults to auto                                                                          | `"auto" \\| "full" \\| "half"`                       | `"auto"`     |\n\n## Events\n\n| Event                              | Description                                | Type               |\n| ---------------------------------- | ------------------------------------------ | ------------------ |\n| `calciteSplitButtonPrimaryClick`   | fired when the primary button is clicked   | `CustomEvent<any>` |\n| `calciteSplitButtonSecondaryClick` | fired when the secondary button is clicked | `CustomEvent<any>` |\n\n## Slots\n\n| Slot | Description                                   |\n| ---- | --------------------------------------------- |\n|      | A slot for adding `calcite-dropdown` content. |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-button](../button)\n- [calcite-dropdown](../dropdown)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-split-button --\x3e calcite-button\n  calcite-split-button --\x3e calcite-dropdown\n  calcite-button --\x3e calcite-loader\n  calcite-button --\x3e calcite-icon\n  style calcite-split-button fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <div style="width:70vw;">
    <calcite-split-button
      active
      appearance="${Object(dist.select)("appearance",["solid","outline","clear","transparent"],"solid")}"
      color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
      scale="${Object(dist.select)("size",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("disabled",!1)}
      primary-icon-start="${Object(dist.select)("primary-icon-start",helpers.c,helpers.c[0])}"
      primary-text="${Object(dist.text)("primary-text","Primary Option")}"
      primary-label="${Object(dist.text)("primary-label","Primary Option")}"
      dropdown-label="${Object(dist.text)("dropdown-label","Additional Options")}"
      dropdown-icon-type="${Object(dist.select)("dropdown-icon-type",["chevron","caret","ellipsis","overflow"],"chevron")}"
    >
      <calcite-dropdown-group selection-mode="none">
        <calcite-dropdown-item>Option 2</calcite-dropdown-item>
        <calcite-dropdown-item>Option 3</calcite-dropdown-item>
        <calcite-dropdown-item>Option 4</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-split-button>
  </div>
`}),SimplePrimaryIconEnd=function(){return tests_utils.a`
  <div style="width:70vw;">
    <calcite-split-button
      color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
      scale="${Object(dist.select)("size",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("disabled",!1)}
      primary-icon-end="${Object(dist.select)("primary-icon-end",helpers.c,helpers.c[0])}"
      primary-text="${Object(dist.text)("primary-text","Primary Option")}"
      primary-label="${Object(dist.text)("primary-label","Primary Option")}"
      dropdown-label="${Object(dist.text)("dropdown-label","Additional Options")}"
      dropdown-icon-type="${Object(dist.select)("dropdown-icon-type",["chevron","caret","ellipsis","overflow"],"chevron")}"
    >
      <calcite-dropdown-group selection-mode="none">
        <calcite-dropdown-item>Option 2</calcite-dropdown-item>
        <calcite-dropdown-item>Option 3</calcite-dropdown-item>
        <calcite-dropdown-item>Option 4</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-split-button>
  </div>
`};SimplePrimaryIconEnd.storyName="Simple primary-icon-end";var SimplePrimaryIconStartAndPrimaryIconEnd=function(){return tests_utils.a`
  <div style="width:70vw;">
    <calcite-split-button
      color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
      scale="${Object(dist.select)("size",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("disabled",!1)}
      primary-icon-start="${Object(dist.select)("primary-icon-end",helpers.c,helpers.c[0])}"
      primary-icon-end="${Object(dist.select)("primary-icon-end",helpers.c,helpers.c[0])}"
      primary-text="${Object(dist.text)("primary-text","Primary Option")}"
      primary-label="${Object(dist.text)("primary-label","Primary Option")}"
      dropdown-label="${Object(dist.text)("dropdown-label","Additional Options")}"
      dropdown-icon-type="${Object(dist.select)("dropdown-icon-type",["chevron","caret","ellipsis","overflow"],"chevron")}"
    >
      <calcite-dropdown-group selection-mode="none">
        <calcite-dropdown-item>Option 2</calcite-dropdown-item>
        <calcite-dropdown-item>Option 3</calcite-dropdown-item>
        <calcite-dropdown-item>Option 4</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-split-button>
  </div>
`};SimplePrimaryIconStartAndPrimaryIconEnd.storyName="Simple primary-icon-start and primary-icon-end";var Rtl=function(){return tests_utils.a`
  <div dir="rtl" style="width:70vw;">
    <calcite-split-button
      appearance="${Object(dist.select)("appearance",["solid","outline","clear","transparent"],"solid")}"
      color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
      scale="${Object(dist.select)("size",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("disabled",!1)}
      primary-icon-start="${Object(dist.select)("primary-icon-start",helpers.c,helpers.c[0])}"
      primary-text="${Object(dist.text)("primary-text","Primary Option")}"
      dropdown-label="${Object(dist.text)("dropdown-label","Additional Options")}"
      dropdown-icon-type="${Object(dist.select)("dropdown-icon-type",["chevron","caret","ellipsis","overflow"],"chevron")}"
    >
      <calcite-dropdown-group selection-mode="none">
        <calcite-dropdown-item>Option 2</calcite-dropdown-item>
        <calcite-dropdown-item>Option 3</calcite-dropdown-item>
        <calcite-dropdown-item>Option 4</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-split-button>
  </div>
`};Rtl.storyName="RTL";var DarkMode=function(){return tests_utils.a`
  <div style="width:70vw;">
    <calcite-split-button
      appearance="${Object(dist.select)("appearance",["solid","outline","clear","transparent"],"solid")}"
      color="${Object(dist.select)("color",["blue","red","neutral","inverse"],"blue")}"
      scale="${Object(dist.select)("size",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("disabled",!1)}
      primary-icon-start="${Object(dist.select)("primary-icon-start",helpers.c,helpers.c[0])}"
      primary-text="${Object(dist.text)("primary-text","Primary Option")}"
      dropdown-label="${Object(dist.text)("dropdown-label","Additional Options")}"
      dropdown-icon-type="${Object(dist.select)("dropdown-icon-type",["chevron","caret","ellipsis","overflow"],"chevron")}"
      class="calcite-theme-dark"
    >
      <calcite-dropdown-group selection-mode="none">
        <calcite-dropdown-item>Option 2</calcite-dropdown-item>
        <calcite-dropdown-item>Option 3</calcite-dropdown-item>
        <calcite-dropdown-item>Option 4</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-split-button>
  </div>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f},Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:70vw;">\n    <calcite-split-button\n      active\n      appearance="${select("appearance", ["solid", "outline", "clear", "transparent"], "solid")}"\n      color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n      scale="${select("size", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      ${boolean("loading", false)}\n      ${boolean("disabled", false)}\n      primary-icon-start="${select("primary-icon-start", iconNames, iconNames[0])}"\n      primary-text="${text("primary-text", "Primary Option")}"\n      primary-label="${text("primary-label", "Primary Option")}"\n      dropdown-label="${text("dropdown-label", "Additional Options")}"\n      dropdown-icon-type="${select("dropdown-icon-type", ["chevron", "caret", "ellipsis", "overflow"], "chevron")}"\n    >\n      <calcite-dropdown-group selection-mode="none">\n        <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-split-button>\n  </div>\n`'}},Simple.parameters),SimplePrimaryIconEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:70vw;">\n    <calcite-split-button\n      color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n      scale="${select("size", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      ${boolean("loading", false)}\n      ${boolean("disabled", false)}\n      primary-icon-end="${select("primary-icon-end", iconNames, iconNames[0])}"\n      primary-text="${text("primary-text", "Primary Option")}"\n      primary-label="${text("primary-label", "Primary Option")}"\n      dropdown-label="${text("dropdown-label", "Additional Options")}"\n      dropdown-icon-type="${select("dropdown-icon-type", ["chevron", "caret", "ellipsis", "overflow"], "chevron")}"\n    >\n      <calcite-dropdown-group selection-mode="none">\n        <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-split-button>\n  </div>\n`'}},SimplePrimaryIconEnd.parameters),SimplePrimaryIconStartAndPrimaryIconEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:70vw;">\n    <calcite-split-button\n      color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n      scale="${select("size", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      ${boolean("loading", false)}\n      ${boolean("disabled", false)}\n      primary-icon-start="${select("primary-icon-end", iconNames, iconNames[0])}"\n      primary-icon-end="${select("primary-icon-end", iconNames, iconNames[0])}"\n      primary-text="${text("primary-text", "Primary Option")}"\n      primary-label="${text("primary-label", "Primary Option")}"\n      dropdown-label="${text("dropdown-label", "Additional Options")}"\n      dropdown-icon-type="${select("dropdown-icon-type", ["chevron", "caret", "ellipsis", "overflow"], "chevron")}"\n    >\n      <calcite-dropdown-group selection-mode="none">\n        <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-split-button>\n  </div>\n`'}},SimplePrimaryIconStartAndPrimaryIconEnd.parameters),Rtl.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div dir="rtl" style="width:70vw;">\n    <calcite-split-button\n      appearance="${select("appearance", ["solid", "outline", "clear", "transparent"], "solid")}"\n      color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n      scale="${select("size", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      ${boolean("loading", false)}\n      ${boolean("disabled", false)}\n      primary-icon-start="${select("primary-icon-start", iconNames, iconNames[0])}"\n      primary-text="${text("primary-text", "Primary Option")}"\n      dropdown-label="${text("dropdown-label", "Additional Options")}"\n      dropdown-icon-type="${select("dropdown-icon-type", ["chevron", "caret", "ellipsis", "overflow"], "chevron")}"\n    >\n      <calcite-dropdown-group selection-mode="none">\n        <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-split-button>\n  </div>\n`'}},Rtl.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:70vw;">\n    <calcite-split-button\n      appearance="${select("appearance", ["solid", "outline", "clear", "transparent"], "solid")}"\n      color="${select("color", ["blue", "red", "neutral", "inverse"], "blue")}"\n      scale="${select("size", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      ${boolean("loading", false)}\n      ${boolean("disabled", false)}\n      primary-icon-start="${select("primary-icon-start", iconNames, iconNames[0])}"\n      primary-text="${text("primary-text", "Primary Option")}"\n      dropdown-label="${text("dropdown-label", "Additional Options")}"\n      dropdown-icon-type="${select("dropdown-icon-type", ["chevron", "caret", "ellipsis", "overflow"], "chevron")}"\n      class="calcite-theme-dark"\n    >\n      <calcite-dropdown-group selection-mode="none">\n        <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-split-button>\n  </div>\n`'}},DarkMode.parameters)},"./src/components/stepper/stepper.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"NoContent",(function(){return NoContent})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"Rtl",(function(){return Rtl}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Stepper",parameters:{notes:['# calcite-stepper\n\nCalcite stepper can be used to present a stepper workflow to a user. It has configurable display options for layout (horizontal or vertical), and the ability to automatically render status icons, and step numbers.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-stepper icon numbered id="my-example-stepper">\n  <calcite-stepper-item item-title="Choose method" item-subtitle="Add members without sending invitations" complete>\n    Step 1 Content Goes Here\n  </calcite-stepper-item>\n  <calcite-stepper-item item-title="Compile member list" error> Step 2 Content Goes Here </calcite-stepper-item>\n  <calcite-stepper-item item-title="Set member properties" item-subtitle="Some subtext" active>\n    Step 3 Content Goes Here\n  </calcite-stepper-item>\n  <calcite-stepper-item item-title="Confirm and complete" item-subtitle="Disabled example" disabled>\n    Step 4 Content Goes Here\n  </calcite-stepper-item>\n</calcite-stepper>\n```\n\n## Properties\n\n| Property   | Attribute  | Description                                             | Type                                   | Default        |\n| ---------- | ---------- | ------------------------------------------------------- | -------------------------------------- | -------------- |\n| `icon`     | `icon`     | optionally display a status icon next to the step title | `boolean`                              | `false`        |\n| `layout`   | `layout`   | specify the layout of stepper, defaults to horizontal   | `"grid" \\| "horizontal" \\| "vertical"` | `"horizontal"` |\n| `numbered` | `numbered` | optionally display the number next to the step title    | `boolean`                              | `false`        |\n| `scale`    | `scale`    | specify the scale of stepper, defaults to m             | `"l" \\| "m" \\| "s"`                    | `"m"`          |\n\n## Methods\n\n### `endStep() => Promise<void>`\n\nset the last step as active\n\n#### Returns\n\nType: `Promise<void>`\n\n### `goToStep(num: number) => Promise<void>`\n\nset the requested step as active\n\n#### Returns\n\nType: `Promise<void>`\n\n### `nextStep() => Promise<void>`\n\nset the next step as active\n\n#### Returns\n\nType: `Promise<void>`\n\n### `prevStep() => Promise<void>`\n\nset the previous step as active\n\n#### Returns\n\nType: `Promise<void>`\n\n### `startStep() => Promise<void>`\n\nset the first step as active\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description                                |\n| ---- | ------------------------------------------ |\n|      | A slot for adding `calcite-stepper-item`s. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n',"# calcite-stepper-item\n\nindividual `calcite-stepper-item` item\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property       | Attribute       | Description                                                          | Type      | Default     |\n| -------------- | --------------- | -------------------------------------------------------------------- | --------- | ----------- |\n| `active`       | `active`        | is the step active                                                   | `boolean` | `false`     |\n| `complete`     | `complete`      | has the step been completed                                          | `boolean` | `false`     |\n| `disabled`     | `disabled`      | is the step disabled and not navigable to by a user                  | `boolean` | `false`     |\n| `error`        | `error`         | does the step contain an error that needs to be resolved by the user | `boolean` | `false`     |\n| `itemSubtitle` | `item-subtitle` | pass a title for the stepper item                                    | `string`  | `undefined` |\n| `itemTitle`    | `item-title`    | pass a title for the stepper item                                    | `string`  | `undefined` |\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding custom content. |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-stepper-item --\x3e calcite-icon\n  style calcite-stepper-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n"]}},function(){return tests_utils.a`
  <calcite-stepper
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("numbered",!0)}
    ${Object(helpers.a)("icon",!0)}
  >
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-1-title","Choose method")}"
      item-subtitle="${Object(dist.text)("item-1-subtitle","Add members without sending invitations")}"
      complete
    >
      <calcite-notice active width="full"><div slot="message">Step 1 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-2-title","Compile member list")}"
      item-subtitle="${Object(dist.text)("item-2-subtitle","")}"
      complete
      error
    >
      <calcite-notice active width="full"><div slot="message">Step 2 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-3-title","Set member properties")}"
      item-subtitle="${Object(dist.text)("item-3-subtitle","")}"
      active
    >
      <calcite-notice active width="full"><div slot="message">Step 3 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-4-title","Confirm and complete")}"
      item-subtitle="${Object(dist.text)("item-4-subtitle","Disabled example")}"
      disabled
    >
      <calcite-notice active width="full"><div slot="message">Step 4 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
  </calcite-stepper>
`}),NoContent=function(){return tests_utils.a`
  <calcite-stepper
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("numbered",!0)}
    ${Object(helpers.a)("icon",!0)}
  >
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-1-title","Choose method")}"
      item-subtitle="${Object(dist.text)("item-1-subtitle","Add members without sending invitations")}"
      complete
    >
    </calcite-stepper-item>
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-2-title","Compile member list")}"
      item-subtitle="${Object(dist.text)("item-2-subtitle","")}"
      complete
      error
    >
    </calcite-stepper-item>
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-3-title","Set member properties")}"
      item-subtitle="${Object(dist.text)("item-3-subtitle","")}"
      active
    >
    </calcite-stepper-item>
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-4-title","Confirm and complete")}"
      item-subtitle="${Object(dist.text)("item-4-subtitle","Disabled example")}"
      disabled
    >
    </calcite-stepper-item>
  </calcite-stepper>
`};NoContent.storyName="No content";var DarkMode=function(){return tests_utils.a`
  <calcite-stepper
  class="calcite-theme-dark"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("numbered",!0)}
    ${Object(helpers.a)("icon",!0)}
  >
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-1-title","Choose method")}"
      item-subtitle="${Object(dist.text)("item-1-subtitle","Add members without sending invitations")}"
      complete
    >
      <calcite-notice active width="full"><div slot=message">Step 1 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-2-title","Compile member list")}"
      item-subtitle="${Object(dist.text)("item-2-subtitle","")}"
      complete
      error
    >
      <calcite-notice active width="full"><div slot="message">Step 2 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-3-title","Set member properties")}"
      item-subtitle="${Object(dist.text)("item-3-subtitle","")}"
      active
    >
      <calcite-notice active width="full"><div slot="message">Step 3 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      item-title="${Object(dist.text)("item-4-title","Confirm and complete")}"
      item-subtitle="${Object(dist.text)("item-4-subtitle","Disabled example")}"
      disabled
    >
      <calcite-notice active width="full"><div slot="message">Step 4 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
  </calcite-stepper>
`};DarkMode.parameters={themes:utils.f};var Rtl=function(){return tests_utils.a`
  <div dir="rtl">
    <calcite-stepper
      layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
      ${Object(helpers.a)("numbered",!0)}
      ${Object(helpers.a)("icon",!0)}
    >
      <calcite-stepper-item
        item-title="${Object(dist.text)("item-1-title","Choose method")}"
        item-subtitle="${Object(dist.text)("item-1-subtitle","Add members without sending invitations")}"
        complete
      >
        <calcite-notice active width="full"><div slot="message">Step 1 Content Goes Here</div></calcite-notice>
      </calcite-stepper-item>
      <calcite-stepper-item
        item-title="${Object(dist.text)("item-2-title","Compile member list")}"
        item-subtitle="${Object(dist.text)("item-3-2ubtitle","")}"
        complete
        error
      >
        <calcite-notice active width="full"><div slot="message">Step 2 Content Goes Here</div></calcite-notice>
      </calcite-stepper-item>
      <calcite-stepper-item
        item-title="${Object(dist.text)("item-3-title","Set member properties")}"
        item-subtitle="${Object(dist.text)("item-3-subtitle","")}"
        active
      >
        <calcite-notice active width="full"><div slot="message">Step 3 Content Goes Here</div></calcite-notice>
      </calcite-stepper-item>
      <calcite-stepper-item
        item-title="${Object(dist.text)("item-4-title","Confirm and complete")}"
        item-subtitle="${Object(dist.text)("item-4-subtitle","Disabled example")}"
        disabled
      >
        <calcite-notice active width="full"><div slot="message">Step 4 Content Goes Here</div></calcite-notice>
      </calcite-stepper-item>
    </calcite-stepper>
  </div>
`};Rtl.storyName="RTL",Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-stepper\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("numbered", true)}\n    ${boolean("icon", true)}\n  >\n    <calcite-stepper-item\n      item-title="${text("item-1-title", "Choose method")}"\n      item-subtitle="${text("item-1-subtitle", "Add members without sending invitations")}"\n      complete\n    >\n      <calcite-notice active width="full"><div slot="message">Step 1 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      item-title="${text("item-2-title", "Compile member list")}"\n      item-subtitle="${text("item-2-subtitle", "")}"\n      complete\n      error\n    >\n      <calcite-notice active width="full"><div slot="message">Step 2 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      item-title="${text("item-3-title", "Set member properties")}"\n      item-subtitle="${text("item-3-subtitle", "")}"\n      active\n    >\n      <calcite-notice active width="full"><div slot="message">Step 3 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      item-title="${text("item-4-title", "Confirm and complete")}"\n      item-subtitle="${text("item-4-subtitle", "Disabled example")}"\n      disabled\n    >\n      <calcite-notice active width="full"><div slot="message">Step 4 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n  </calcite-stepper>\n`'}},Simple.parameters),NoContent.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-stepper\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("numbered", true)}\n    ${boolean("icon", true)}\n  >\n    <calcite-stepper-item\n      item-title="${text("item-1-title", "Choose method")}"\n      item-subtitle="${text("item-1-subtitle", "Add members without sending invitations")}"\n      complete\n    >\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      item-title="${text("item-2-title", "Compile member list")}"\n      item-subtitle="${text("item-2-subtitle", "")}"\n      complete\n      error\n    >\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      item-title="${text("item-3-title", "Set member properties")}"\n      item-subtitle="${text("item-3-subtitle", "")}"\n      active\n    >\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      item-title="${text("item-4-title", "Confirm and complete")}"\n      item-subtitle="${text("item-4-subtitle", "Disabled example")}"\n      disabled\n    >\n    </calcite-stepper-item>\n  </calcite-stepper>\n`'}},NoContent.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-stepper\n  class="calcite-theme-dark"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("numbered", true)}\n    ${boolean("icon", true)}\n  >\n    <calcite-stepper-item\n      item-title="${text("item-1-title", "Choose method")}"\n      item-subtitle="${text("item-1-subtitle", "Add members without sending invitations")}"\n      complete\n    >\n      <calcite-notice active width="full"><div slot=message">Step 1 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      item-title="${text("item-2-title", "Compile member list")}"\n      item-subtitle="${text("item-2-subtitle", "")}"\n      complete\n      error\n    >\n      <calcite-notice active width="full"><div slot="message">Step 2 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      item-title="${text("item-3-title", "Set member properties")}"\n      item-subtitle="${text("item-3-subtitle", "")}"\n      active\n    >\n      <calcite-notice active width="full"><div slot="message">Step 3 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      item-title="${text("item-4-title", "Confirm and complete")}"\n      item-subtitle="${text("item-4-subtitle", "Disabled example")}"\n      disabled\n    >\n      <calcite-notice active width="full"><div slot="message">Step 4 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n  </calcite-stepper>\n`'}},DarkMode.parameters),Rtl.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div dir="rtl">\n    <calcite-stepper\n      layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n      ${boolean("numbered", true)}\n      ${boolean("icon", true)}\n    >\n      <calcite-stepper-item\n        item-title="${text("item-1-title", "Choose method")}"\n        item-subtitle="${text("item-1-subtitle", "Add members without sending invitations")}"\n        complete\n      >\n        <calcite-notice active width="full"><div slot="message">Step 1 Content Goes Here</div></calcite-notice>\n      </calcite-stepper-item>\n      <calcite-stepper-item\n        item-title="${text("item-2-title", "Compile member list")}"\n        item-subtitle="${text("item-3-2ubtitle", "")}"\n        complete\n        error\n      >\n        <calcite-notice active width="full"><div slot="message">Step 2 Content Goes Here</div></calcite-notice>\n      </calcite-stepper-item>\n      <calcite-stepper-item\n        item-title="${text("item-3-title", "Set member properties")}"\n        item-subtitle="${text("item-3-subtitle", "")}"\n        active\n      >\n        <calcite-notice active width="full"><div slot="message">Step 3 Content Goes Here</div></calcite-notice>\n      </calcite-stepper-item>\n      <calcite-stepper-item\n        item-title="${text("item-4-title", "Confirm and complete")}"\n        item-subtitle="${text("item-4-subtitle", "Disabled example")}"\n        disabled\n      >\n        <calcite-notice active width="full"><div slot="message">Step 4 Content Goes Here</div></calcite-notice>\n      </calcite-stepper-item>\n    </calcite-stepper>\n  </div>\n`'}},Rtl.parameters)},"./src/components/switch/switch.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"WrappingCalciteLabel",(function(){return WrappingCalciteLabel})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"Rtl",(function(){return Rtl}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./src/tests/utils.ts"),_storybook_utils=__webpack_require__("./.storybook/utils.tsx"),Simple=(__webpack_exports__.default={title:"Components/Controls/Switch",parameters:{notes:'# calcite-switch\n\n`calcite-switch` is used to toggle a value on or off.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<label> <calcite-switch checked></calcite-switch> Switch is on </label>\n```\n\n## Properties\n\n| Property   | Attribute  | Description                                                                                                        | Type                | Default     |\n| ---------- | ---------- | ------------------------------------------------------------------------------------------------------------------ | ------------------- | ----------- |\n| `checked`  | `checked`  | True if the switch is initially on                                                                                 | `boolean`           | `false`     |\n| `disabled` | `disabled` | True if the switch is disabled                                                                                     | `boolean`           | `false`     |\n| `label`    | `label`    | Applies to the aria-label attribute on the switch                                                                  | `string`            | `undefined` |\n| `name`     | `name`     | The name of the switch input                                                                                       | `string`            | `undefined` |\n| `scale`    | `scale`    | The scale of the switch                                                                                            | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `switched` | `switched` | <span style="color:red">**[DEPRECATED]**</span> use \'checked\' instead.<br/><br/>True if the switch is initially on | `boolean`           | `false`     |\n| `value`    | `value`    | The value of the switch input                                                                                      | `any`               | `undefined` |\n\n## Events\n\n| Event                 | Description                               | Type               |\n| --------------------- | ----------------------------------------- | ------------------ |\n| `calciteSwitchChange` | Fires when the checked value has changed. | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Dependencies\n\n### Used by\n\n- [calcite-block-section](../block-section)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-block-section --\x3e calcite-switch\n  style calcite-switch fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return utils.a`
  <calcite-switch
    name="setting"
    value="enabled"
    ${Object(helpers.a)("checked",!0)}
    ${Object(helpers.a)("disabled",!1)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  ></calcite-switch>
`}),WrappingCalciteLabel=function(){return utils.a`
  <calcite-label
    layout="${Object(dist.select)("layout",["inline","inline-space-between","default"],"inline")}"
    ${Object(helpers.a)("disabled",!1)}
  >
    Enable setting
    <calcite-switch
      name="setting"
      value="enabled"
      ${Object(helpers.a)("checked",!0)}
      ${Object(helpers.a)("disabled",!1)}
    ></calcite-switch>
  </calcite-label>
`};WrappingCalciteLabel.storyName="Wrapping calcite-label";var DarkMode=function(){return utils.a`
  <calcite-switch
    class="calcite-theme-dark"
    name="setting"
    value="enabled"
    ${Object(helpers.a)("checked",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  ></calcite-switch>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:_storybook_utils.f};var Rtl=function(){return utils.a`
  Enable setting
  <calcite-switch
    dir="rtl"
    name="setting"
    value="enabled"
    ${Object(helpers.a)("checked",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  ></calcite-switch>
`};Rtl.storyName="RTL",Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-switch\n    name="setting"\n    value="enabled"\n    ${boolean("checked", true)}\n    ${boolean("disabled", false)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-switch>\n`'}},Simple.parameters),WrappingCalciteLabel.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label\n    layout="${select("layout", ["inline", "inline-space-between", "default"], "inline")}"\n    ${boolean("disabled", false)}\n  >\n    Enable setting\n    <calcite-switch\n      name="setting"\n      value="enabled"\n      ${boolean("checked", true)}\n      ${boolean("disabled", false)}\n    ></calcite-switch>\n  </calcite-label>\n`'}},WrappingCalciteLabel.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-switch\n    class="calcite-theme-dark"\n    name="setting"\n    value="enabled"\n    ${boolean("checked", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-switch>\n`'}},DarkMode.parameters),Rtl.parameters=Object.assign({storySource:{source:'(): string => html`\n  Enable setting\n  <calcite-switch\n    dir="rtl"\n    name="setting"\n    value="enabled"\n    ${boolean("checked", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-switch>\n`'}},Rtl.parameters)},"./src/components/tabs/tabs.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"Bordered",(function(){return Bordered})),__webpack_require__.d(__webpack_exports__,"BorderedRTLDark",(function(){return BorderedRTLDark})),__webpack_require__.d(__webpack_exports__,"WithIcons",(function(){return WithIcons})),__webpack_require__.d(__webpack_exports__,"SetWidth",(function(){return SetWidth})),__webpack_require__.d(__webpack_exports__,"JustTabNav",(function(){return JustTabNav})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode})),__webpack_require__.d(__webpack_exports__,"DisabledTabs",(function(){return DisabledTabs})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Simple=(__webpack_exports__.default={title:"Components/Tabs",parameters:{notes:['# calcite-tabs\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n`calcite-tabs` uses several sub-components ([calcite-tab-nav](../tab-nav), [calcite-tab](../tab), [calcite-tab-title](../tab-title)) to create a tabbed interface with optional client side storage. Place your content inside of the `<calcite-tab>` element:\n\n```html\n<calcite-tabs>\n  <calcite-tab-nav slot="tab-nav">\n    <calcite-tab-title active>Tab 1 Title</calcite-tab-title>\n    <calcite-tab-title>Tab 2 Title</calcite-tab-title>\n  </calcite-tab-nav>\n\n  <calcite-tab active>Tab 1 Content</calcite-tab>\n  <calcite-tab>Tab 2 Content</calcite-tab>\n</calcite-tabs>\n```\n\n### Bordered\n\n```html\n<calcite-tabs bordered>\n  <calcite-tab-nav slot="tab-nav">\n    <calcite-tab-title tab="tab1">Tab 1 Title</calcite-tab-title>\n    <calcite-tab-title tab="tab2">Tab 2 Title</calcite-tab-title>\n    <calcite-tab-title tab="tab3">Tab 3 Title</calcite-tab-title>\n    <calcite-tab-title tab="tab4" active>Tab 4 Title</calcite-tab-title>\n  </calcite-tab-nav>\n  <calcite-tab tab="tab1">Tab 1 Content</calcite-tab>\n  <calcite-tab tab="tab2">Tab 2 Content</calcite-tab>\n  <calcite-tab tab="tab3">Tab 3 Content</calcite-tab>\n  <calcite-tab tab="tab4" active>Tab 4 Content</calcite-tab>\n</calcite-tabs>\n```\n\n## Properties\n\n| Property   | Attribute  | Description                                                                           | Type                   | Default    |\n| ---------- | ---------- | ------------------------------------------------------------------------------------- | ---------------------- | ---------- |\n| `bordered` | `bordered` | Optionally enable tabs to appear like a folder-style menu when its layout is "inline" | `boolean`              | `false`    |\n| `layout`   | `layout`   | Align tab titles to the edge or fully justify them across the tab nav ("center")      | `"center" \\| "inline"` | `"inline"` |\n| `position` | `position` | Display the tabs above (default) or below the tab content                             | `"above" \\| "below"`   | `"above"`  |\n| `scale`    | `scale`    | Specify the scale of the tabs component, defaults to m                                | `"l" \\| "m" \\| "s"`    | `"m"`      |\n\n## Slots\n\n| Slot        | Description                                   |\n| ----------- | --------------------------------------------- |\n|             | A slot for adding `calcite-tab`s.             |\n| `"tab-nav"` | A slot for adding a tab navigation component. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-color-picker](../color-picker)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-color-picker --\x3e calcite-tabs\n  style calcite-tabs fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n',"# calcite-tab\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n`calcite-tab` wraps the content you would like to appear when that tab is selected:\n\n```html\n<calcite-tab>My stuff!</calcite-tab>\n```\n\n## Properties\n\n| Property | Attribute | Description                                                                                           | Type      | Default     |\n| -------- | --------- | ----------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `active` | `active`  | Show this tab                                                                                         | `boolean` | `false`     |\n| `tab`    | `tab`     | Optionally include a unique name for this tab, be sure to also set this name on the associated title. | `string`  | `undefined` |\n\n## Methods\n\n### `getTabIndex() => Promise<number>`\n\nReturn the index of this tab within the tab array\n\n#### Returns\n\nType: `Promise<number>`\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding custom content. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-color-picker](../color-picker)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-color-picker --\x3e calcite-tab\n  style calcite-tab fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n",'# calcite-tab-nav\n\nThe tab-nav groups several [calcite-tab-title](../tab-title) components and builds out the navigation. You can optionally use attibutes on the tab-nav to configure client side storage of the selected tab.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nWhen tab-nav is the only parent, tab-title can inherit its `scale` and `position` from tab-nav:\n\n```html\n<calcite-tab-nav scale="l" position="below">\n  <calcite-tab-title>Layers</calcite-tab-title>\n  <calcite-tab-title>Maps</calcite-tab-title>\n  <calcite-tab-title active>Data</calcite-tab-title>\n</calcite-tab-nav>\n```\n\n## Properties\n\n| Property    | Attribute    | Description                                                                       | Type     | Default     |\n| ----------- | ------------ | --------------------------------------------------------------------------------- | -------- | ----------- |\n| `storageId` | `storage-id` | Name to use when saving selected tab data to localStorage                         | `string` | `undefined` |\n| `syncId`    | `sync-id`    | Pass the same string to multiple tab navs to keep them all in sync if one changes | `string` | `undefined` |\n\n## Events\n\n| Event              | Description                         | Type                                |\n| ------------------ | ----------------------------------- | ----------------------------------- |\n| `calciteTabChange` | Emitted when the active tab changes | `CustomEvent<TabChangeEventDetail>` |\n\n## Slots\n\n| Slot | Description                             |\n| ---- | --------------------------------------- |\n|      | A slot for adding `calcite-tab-title`s. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-color-picker](../color-picker)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-color-picker --\x3e calcite-tab-nav\n  style calcite-tab-nav fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n','# calcite-tab-title\n\nThe tab-title is the link that switches between panes in [calcite-tabs](../tabs).\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                              | Type                         | Default     |\n| ------------- | --------------- | -------------------------------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `active`      | `active`        | Show this tab title as selected                                                                          | `boolean`                    | `false`     |\n| `disabled`    | `disabled`      | Disable this tab title                                                                                   | `boolean`                    | `false`     |\n| `iconEnd`     | `icon-end`      | optionally pass an icon to display at the end of a tab title - accepts calcite ui icon names             | `string`                     | `undefined` |\n| `iconFlipRtl` | `icon-flip-rtl` | flip the icon(s) in rtl                                                                                  | `"both" \\| "end" \\| "start"` | `undefined` |\n| `iconStart`   | `icon-start`    | optionally pass an icon to display at the start of a tab title - accepts calcite ui icon names           | `string`                     | `undefined` |\n| `tab`         | `tab`           | Optionally include a unique name for the tab title, be sure to also set this name on the associated tab. | `string`                     | `undefined` |\n\n## Events\n\n| Event                 | Description                                              | Type                                |\n| --------------------- | -------------------------------------------------------- | ----------------------------------- |\n| `calciteTabsActivate` | Fires when a specific tab is activated (`event.details`) | `CustomEvent<TabChangeEventDetail>` |\n\n## Methods\n\n### `getTabIndex() => Promise<number>`\n\nReturn the index of this title within the nav\n\n#### Returns\n\nType: `Promise<number>`\n\n## Slots\n\n| Slot | Description             |\n| ---- | ----------------------- |\n|      | A slot for adding text. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-color-picker](../color-picker)\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-tab-title --\x3e calcite-icon\n  calcite-color-picker --\x3e calcite-tab-title\n  style calcite-tab-title fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n']}},Object(helpers.f)((function(){return tests_utils.a`
    <calcite-tabs
      layout="${Object(dist.select)("layout",["inline","center"],"inline")}"
      position="${Object(dist.select)("position",["above","below"],"above")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    >
      <calcite-tab-nav slot="tab-nav">
        <calcite-tab-title active>Tab 1 Title</calcite-tab-title>
        <calcite-tab-title id="reference-element">Tab 2 Title</calcite-tab-title>
        <calcite-tab-title>Tab 3 Title</calcite-tab-title>
        <calcite-tab-title>Tab 4 Title</calcite-tab-title>
      </calcite-tab-nav>

      <calcite-tab active>
        <p>Tab 1 Content</p><br />
      </calcite-tab>
      <calcite-tab><p>Tab 2 Content</p>
      <img src="${Object(tests_utils.b)({width:1e3,height:200})}"></img>
      </calcite-tab>
      <calcite-tab><p>Tab 3 Content</p></calcite-tab>
      <calcite-tab><p>Tab 4 Content</p></calcite-tab>
    </calcite-tabs>
  `}),Object(helpers.b)("calcite-tabs").snapshot("simple").click("#reference-element").snapshot("horizontal scroll"))),Bordered=function(){return tests_utils.a`
  <calcite-tabs
    layout="inline"
    position="${Object(dist.select)("position",["above","below"],"above")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    bordered
  >
    <calcite-tab-nav slot="tab-nav">
      <calcite-tab-title tab="tab1">Tab 1 Title</calcite-tab-title>
      <calcite-tab-title tab="tab2">Tab 2 Title</calcite-tab-title>
      <calcite-tab-title tab="tab3">Tab 3 Title</calcite-tab-title>
      <calcite-tab-title tab="tab4" active>Tab 4 Title</calcite-tab-title>
    </calcite-tab-nav>
    <calcite-tab tab="tab1">Tab 1 Content</calcite-tab>
    <calcite-tab tab="tab2">Tab 2 Content</calcite-tab>
    <calcite-tab tab="tab3">Tab 3 Content</calcite-tab>
    <calcite-tab tab="tab4" active>Tab 4 Content</calcite-tab>
  </calcite-tabs>
`},BorderedRTLDark=function(){return tests_utils.a`
  <calcite-tabs
    layout="inline"
    position="${Object(dist.select)("position",["above","below"],"above")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    bordered
    dir="rtl"
    class="calcite-theme-dark"
  >
    <calcite-tab-nav slot="tab-nav">
      <calcite-tab-title tab="tab1">Tab 1 Title</calcite-tab-title>
      <calcite-tab-title tab="tab2">Tab 2 Title</calcite-tab-title>
      <calcite-tab-title tab="tab3">Tab 3 Title</calcite-tab-title>
      <calcite-tab-title tab="tab4" active>Tab 4 Title</calcite-tab-title>
    </calcite-tab-nav>
    <calcite-tab tab="tab1">Tab 1 Content</calcite-tab>
    <calcite-tab tab="tab2">Tab 2 Content</calcite-tab>
    <calcite-tab tab="tab3">Tab 3 Content</calcite-tab>
    <calcite-tab tab="tab4" active>Tab 4 Content</calcite-tab>
  </calcite-tabs>
`};BorderedRTLDark.parameters={themes:utils.f};var selectedIcon=helpers.c[0],WithIcons=function(){return tests_utils.a`
  <calcite-tabs
    layout="${Object(dist.select)("layout",["inline","center"],"inline")}"
    position="${Object(dist.select)("position",["above","below"],"above")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    <calcite-tab-nav slot="tab-nav">
      <calcite-tab-title active icon-start="${Object(dist.select)("tab 1 icon-start",helpers.c,selectedIcon)}"
        >Tab 1 Title</calcite-tab-title
      >
      <calcite-tab-title icon-end="${Object(dist.select)("tab 2 icon-end",helpers.c,selectedIcon)}">Tab 2 Title</calcite-tab-title>
      <calcite-tab-title
        icon-start="${Object(dist.select)("tab 3 icon-start",helpers.c,selectedIcon)}"
        icon-end="${Object(dist.select)("tab 3 icon-end",helpers.c,selectedIcon)}"
        >Tab 3 Title</calcite-tab-title
      >
      <calcite-tab-title icon-start="${Object(dist.select)("tab 4 icon-start",helpers.c,selectedIcon)}"></calcite-tab-title>
    </calcite-tab-nav>

    <calcite-tab active><p>Tab 1 Content</p></calcite-tab>
    <calcite-tab><p>Tab 2 Content</p></calcite-tab>
    <calcite-tab><p>Tab 3 Content</p></calcite-tab>
    <calcite-tab><p>Tab 4 Content</p></calcite-tab>
  </calcite-tabs>
`};WithIcons.storyName="With icons";var SetWidth=function(){return tests_utils.a`
  <div style="width: 400px;">
    <calcite-tabs
    layout="${Object(dist.select)("layout",["inline","center"],"inline")}"
    position="${Object(dist.select)("position",["above","below"],"above")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    >
    <calcite-tab-nav slot="tab-nav">
      <calcite-tab-title active>Tab 1 Title</calcite-tab-title>
      <calcite-tab-title id="reference-element">Tab 2 Title</calcite-tab-title>
      <calcite-tab-title>Tab 3 Title</calcite-tab-title>
      <calcite-tab-title>Tab 4 Title</calcite-tab-title>
    </calcite-tab-nav>

    <calcite-tab active>
      <p>Tab 1 Content</p><br />
    </calcite-tab>
    <calcite-tab><p>Tab 2 Content</p>
    <img src="${Object(tests_utils.b)({width:1e3,height:200})}"></img>
    </calcite-tab>
    <calcite-tab><p>Tab 3 Content</p></calcite-tab>
    <calcite-tab><p>Tab 4 Content</p></calcite-tab>
    </calcite-tabs>
  </div>
`},JustTabNav=function(){return tests_utils.a`
  <calcite-tab-nav
    position="${Object(dist.select)("position",["above","below"],"below")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"l")}"
  >
    <calcite-tab-title>Tab 1 Title</calcite-tab-title>
    <calcite-tab-title>Tab 2 Title</calcite-tab-title>
    <calcite-tab-title>Tab 3 Title</calcite-tab-title>
    <calcite-tab-title active>Tab 4 Title</calcite-tab-title>
  </calcite-tab-nav>
`},DarkMode=function(){return tests_utils.a`
  <calcite-tabs
    class="calcite-theme-dark"
    layout="${Object(dist.select)("layout",["inline","center"],"inline")}"
    position="${Object(dist.select)("position",["above","below"],"above")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    <calcite-tab-nav slot="tab-nav">
      <calcite-tab-title active>Tab 1 Title</calcite-tab-title>
      <calcite-tab-title>Tab 2 Title</calcite-tab-title>
      <calcite-tab-title>Tab 3 Title</calcite-tab-title>
      <calcite-tab-title>Tab 4 Title</calcite-tab-title>
    </calcite-tab-nav>
    <calcite-tab active><p>Tab 1 Content</p></calcite-tab>
    <calcite-tab><p>Tab 2 Content</p></calcite-tab>
    <calcite-tab><p>Tab 3 Content</p></calcite-tab>
    <calcite-tab><p>Tab 4 Content</p></calcite-tab>
  </calcite-tabs>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f};var DisabledTabs=function(){var disabledValuesObj={Tab1:"tab1",Tab2:"tab2",Tab3:"tab3"},optionsKnobSelections=Object(dist.optionsKnob)("Disabled Tabs",disabledValuesObj,"tab2",{display:"multi-select"},"DISABLED-TABS");return`\n      <calcite-tabs>\n        <calcite-tab-nav slot="tab-nav">\n          <calcite-tab-title active ${optionsKnobSelections.includes(disabledValuesObj.Tab1)?"disabled":""}>Tab 1 Title</calcite-tab-title>\n          <calcite-tab-title ${optionsKnobSelections.includes(disabledValuesObj.Tab2)?"disabled":""}>Tab 2 Title</calcite-tab-title>\n          <calcite-tab-title ${optionsKnobSelections.includes(disabledValuesObj.Tab3)?"disabled":""}>Tab 3 Title</calcite-tab-title>\n        </calcite-tab-nav>\n\n        <calcite-tab active><p>Tab 1 Content</p></calcite-tab>\n        <calcite-tab><p>Tab 2 Content</p></calcite-tab>\n        <calcite-tab><p>Tab 3 Content</p></calcite-tab>\n      </calcite-tabs>\n    `};DisabledTabs.storyName="Disabled tabs";var RTL=function(){return tests_utils.a`
  <calcite-tabs
    dir="rtl"
    layout="${Object(dist.select)("layout",["inline","center"],"inline")}"
    position="${Object(dist.select)("position",["above","below"],"above")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    <calcite-tab-nav slot="tab-nav">
      <calcite-tab-title active>Tab 1 Title</calcite-tab-title>
      <calcite-tab-title>Tab 2 Title</calcite-tab-title>
      <calcite-tab-title>Tab 3 Title</calcite-tab-title>
      <calcite-tab-title>Tab 4 Title</calcite-tab-title>
    </calcite-tab-nav>

    <calcite-tab active><p>Tab 1 Content</p></calcite-tab>
    <calcite-tab><p>Tab 2 Content</p></calcite-tab>
    <calcite-tab><p>Tab 3 Content</p></calcite-tab>
    <calcite-tab><p>Tab 4 Content</p></calcite-tab>
  </calcite-tabs>
`};Simple.parameters=Object.assign({storySource:{source:'stepStory(\n  (): string => html`\n    <calcite-tabs\n      layout="${select("layout", ["inline", "center"], "inline")}"\n      position="${select("position", ["above", "below"], "above")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n    >\n      <calcite-tab-nav slot="tab-nav">\n        <calcite-tab-title active>Tab 1 Title</calcite-tab-title>\n        <calcite-tab-title id="reference-element">Tab 2 Title</calcite-tab-title>\n        <calcite-tab-title>Tab 3 Title</calcite-tab-title>\n        <calcite-tab-title>Tab 4 Title</calcite-tab-title>\n      </calcite-tab-nav>\n\n      <calcite-tab active>\n        <p>Tab 1 Content</p><br />\n      </calcite-tab>\n      <calcite-tab><p>Tab 2 Content</p>\n      <img src="${placeholderImage({\n        width: 1000,\n        height: 200\n      })}"></img>\n      </calcite-tab>\n      <calcite-tab><p>Tab 3 Content</p></calcite-tab>\n      <calcite-tab><p>Tab 4 Content</p></calcite-tab>\n    </calcite-tabs>\n  `,\n  createSteps("calcite-tabs").snapshot("simple").click("#reference-element").snapshot("horizontal scroll")\n)'}},Simple.parameters),Bordered.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tabs\n    layout="inline"\n    position="${select("position", ["above", "below"], "above")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    bordered\n  >\n    <calcite-tab-nav slot="tab-nav">\n      <calcite-tab-title tab="tab1">Tab 1 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab2">Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab3">Tab 3 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab4" active>Tab 4 Title</calcite-tab-title>\n    </calcite-tab-nav>\n    <calcite-tab tab="tab1">Tab 1 Content</calcite-tab>\n    <calcite-tab tab="tab2">Tab 2 Content</calcite-tab>\n    <calcite-tab tab="tab3">Tab 3 Content</calcite-tab>\n    <calcite-tab tab="tab4" active>Tab 4 Content</calcite-tab>\n  </calcite-tabs>\n`'}},Bordered.parameters),BorderedRTLDark.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tabs\n    layout="inline"\n    position="${select("position", ["above", "below"], "above")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    bordered\n    dir="rtl"\n    class="calcite-theme-dark"\n  >\n    <calcite-tab-nav slot="tab-nav">\n      <calcite-tab-title tab="tab1">Tab 1 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab2">Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab3">Tab 3 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab4" active>Tab 4 Title</calcite-tab-title>\n    </calcite-tab-nav>\n    <calcite-tab tab="tab1">Tab 1 Content</calcite-tab>\n    <calcite-tab tab="tab2">Tab 2 Content</calcite-tab>\n    <calcite-tab tab="tab3">Tab 3 Content</calcite-tab>\n    <calcite-tab tab="tab4" active>Tab 4 Content</calcite-tab>\n  </calcite-tabs>\n`'}},BorderedRTLDark.parameters),WithIcons.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tabs\n    layout="${select("layout", ["inline", "center"], "inline")}"\n    position="${select("position", ["above", "below"], "above")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    <calcite-tab-nav slot="tab-nav">\n      <calcite-tab-title active icon-start="${select("tab 1 icon-start", iconNames, selectedIcon)}"\n        >Tab 1 Title</calcite-tab-title\n      >\n      <calcite-tab-title icon-end="${select("tab 2 icon-end", iconNames, selectedIcon)}">Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title\n        icon-start="${select("tab 3 icon-start", iconNames, selectedIcon)}"\n        icon-end="${select("tab 3 icon-end", iconNames, selectedIcon)}"\n        >Tab 3 Title</calcite-tab-title\n      >\n      <calcite-tab-title icon-start="${select("tab 4 icon-start", iconNames, selectedIcon)}"></calcite-tab-title>\n    </calcite-tab-nav>\n\n    <calcite-tab active><p>Tab 1 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 2 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 3 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 4 Content</p></calcite-tab>\n  </calcite-tabs>\n`'}},WithIcons.parameters),SetWidth.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px;">\n    <calcite-tabs\n    layout="${select("layout", ["inline", "center"], "inline")}"\n    position="${select("position", ["above", "below"], "above")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    >\n    <calcite-tab-nav slot="tab-nav">\n      <calcite-tab-title active>Tab 1 Title</calcite-tab-title>\n      <calcite-tab-title id="reference-element">Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title>Tab 3 Title</calcite-tab-title>\n      <calcite-tab-title>Tab 4 Title</calcite-tab-title>\n    </calcite-tab-nav>\n\n    <calcite-tab active>\n      <p>Tab 1 Content</p><br />\n    </calcite-tab>\n    <calcite-tab><p>Tab 2 Content</p>\n    <img src="${placeholderImage({\n      width: 1000,\n      height: 200\n    })}"></img>\n    </calcite-tab>\n    <calcite-tab><p>Tab 3 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 4 Content</p></calcite-tab>\n    </calcite-tabs>\n  </div>\n`'}},SetWidth.parameters),JustTabNav.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tab-nav\n    position="${select("position", ["above", "below"], "below")}"\n    scale="${select("scale", ["s", "m", "l"], "l")}"\n  >\n    <calcite-tab-title>Tab 1 Title</calcite-tab-title>\n    <calcite-tab-title>Tab 2 Title</calcite-tab-title>\n    <calcite-tab-title>Tab 3 Title</calcite-tab-title>\n    <calcite-tab-title active>Tab 4 Title</calcite-tab-title>\n  </calcite-tab-nav>\n`'}},JustTabNav.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tabs\n    class="calcite-theme-dark"\n    layout="${select("layout", ["inline", "center"], "inline")}"\n    position="${select("position", ["above", "below"], "above")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    <calcite-tab-nav slot="tab-nav">\n      <calcite-tab-title active>Tab 1 Title</calcite-tab-title>\n      <calcite-tab-title>Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title>Tab 3 Title</calcite-tab-title>\n      <calcite-tab-title>Tab 4 Title</calcite-tab-title>\n    </calcite-tab-nav>\n    <calcite-tab active><p>Tab 1 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 2 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 3 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 4 Content</p></calcite-tab>\n  </calcite-tabs>\n`'}},DarkMode.parameters),DisabledTabs.parameters=Object.assign({storySource:{source:'(): string => {\n  const disabledLabel = "Disabled Tabs";\n  const disabledValuesObj = {\n    Tab1: "tab1",\n    Tab2: "tab2",\n    Tab3: "tab3"\n  };\n  const defaultValue = "tab2";\n  const optionsKnobSelections = optionsKnob(\n    disabledLabel,\n    disabledValuesObj,\n    defaultValue,\n    { display: "multi-select" },\n    "DISABLED-TABS"\n  );\n  const tab1disabled = optionsKnobSelections.includes(disabledValuesObj.Tab1);\n  const tab2disabled = optionsKnobSelections.includes(disabledValuesObj.Tab2);\n  const tab3disabled = optionsKnobSelections.includes(disabledValuesObj.Tab3);\n\n  return `\n      <calcite-tabs>\n        <calcite-tab-nav slot="tab-nav">\n          <calcite-tab-title active ${tab1disabled ? "disabled" : ""}>Tab 1 Title</calcite-tab-title>\n          <calcite-tab-title ${tab2disabled ? "disabled" : ""}>Tab 2 Title</calcite-tab-title>\n          <calcite-tab-title ${tab3disabled ? "disabled" : ""}>Tab 3 Title</calcite-tab-title>\n        </calcite-tab-nav>\n\n        <calcite-tab active><p>Tab 1 Content</p></calcite-tab>\n        <calcite-tab><p>Tab 2 Content</p></calcite-tab>\n        <calcite-tab><p>Tab 3 Content</p></calcite-tab>\n      </calcite-tabs>\n    `;\n}'}},DisabledTabs.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tabs\n    dir="rtl"\n    layout="${select("layout", ["inline", "center"], "inline")}"\n    position="${select("position", ["above", "below"], "above")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    <calcite-tab-nav slot="tab-nav">\n      <calcite-tab-title active>Tab 1 Title</calcite-tab-title>\n      <calcite-tab-title>Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title>Tab 3 Title</calcite-tab-title>\n      <calcite-tab-title>Tab 4 Title</calcite-tab-title>\n    </calcite-tab-nav>\n\n    <calcite-tab active><p>Tab 1 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 2 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 3 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 4 Content</p></calcite-tab>\n  </calcite-tabs>\n`'}},RTL.parameters)},"./src/components/tile-select-group/tile-select-group.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Light",(function(){return Light})),__webpack_require__.d(__webpack_exports__,"Dark",(function(){return Dark})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Light=(__webpack_exports__.default={title:"Components/Tiles/Tile Select Group",parameters:{notes:'# calcite-tile-select-group\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property | Attribute | Description                                                                                       | Type                         | Default        |\n| -------- | --------- | ------------------------------------------------------------------------------------------------- | ---------------------------- | -------------- |\n| `layout` | `layout`  | Tiles by default move horizontally, stacking with each row, vertical allows single-column layouts | `"horizontal" \\| "vertical"` | `"horizontal"` |\n\n## Slots\n\n| Slot | Description                               |\n| ---- | ----------------------------------------- |\n|      | A slot for adding `calcite-tile-select`s. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-tile-select-group
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal","Tile Select Group")}"
    dir="${Object(dist.select)("dir",["ltr","rtl"],"ltr","Tile Select Group")}"
  >
    <calcite-tile-select
      checked
      description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
      heading="Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"
      icon="layers"
      name="light"
      ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
      input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
      width="${Object(dist.select)("width",["full","auto"],"auto","Tile Select")}"
      type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
      value="one"
    >
    </calcite-tile-select>
    <calcite-tile-select
      description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
      heading="Tile title lorem ipsum"
      icon="layers"
      name="light"
      ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
      input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
      width="${Object(dist.select)("width",["full","auto"],"auto","Tile Select")}"
      type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
      value="two"
    >
    </calcite-tile-select>
    <calcite-tile-select
      description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall. Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
      heading="Tile title lorem ipsum"
      icon="layers"
      name="light"
      ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
      input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
      width="${Object(dist.select)("width",["full","auto"],"auto","Tile Select")}"
      type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
      value="three"
    >
    </calcite-tile-select>
    <calcite-tile-select
      description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
      heading="TiletitleloremipsumTiletitleloremipsumTiletitleloremipsumTiletitleloremipsumTiletitleloremipsumTiletitleloremipsum"
      icon="layers"
      name="light"
      ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
      input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
      width="${Object(dist.select)("width",["full","auto"],"auto","Tile Select")}"
      type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
      value="four"
    >
    </calcite-tile-select>
  </calcite-tile-select-group>
`}),Dark=function(){return tests_utils.a`
<calcite-tile-select-group
  layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal","Tile Select Group")}"
  dir="${Object(dist.select)("dir",["ltr","rtl"],"ltr","Tile Select Group")}"
  class="calcite-theme-dark"
>
  <calcite-tile-select
    checked
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"
    icon="layers"
    name="dark"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
    value="one"
  >
  </calcite-tile-select>
  <calcite-tile-select
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="Tile title lorem ipsum"
    icon="layers"
    name="dark"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
    value="two"
  >
  </calcite-tile-select>
  <calcite-tile-select
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall. Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="Tile title lorem ipsum"
    icon="layers"
    name="dark"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
    value="three"
  >
  </calcite-tile-select>
  <calcite-tile-select
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"
    icon="layers"
    name="dark"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
    value="four"
  >
</calcite-tile-select-group>
`};Dark.parameters={themes:utils.f};var RTL=function(){return tests_utils.a`
<calcite-tile-select-group
  dir="rtl"
  layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal","Tile Select Group")}"
>
  <calcite-tile-select
    checked
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"
    icon="layers"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"end","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"checkbox","Tile Select")}"
    value="one"
  >
  </calcite-tile-select>
  <calcite-tile-select
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="Tile title lorem ipsum"
    icon="layers"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"end","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"checkbox","Tile Select")}"
    value="two"
  >
  </calcite-tile-select>
  <calcite-tile-select
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall. Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="Tile title lorem ipsum"
    icon="layers"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"end","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"checkbox","Tile Select")}"
    value="three"
  >
  </calcite-tile-select>
  <calcite-tile-select
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"
    icon="layers"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"end","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"checkbox","Tile Select")}"
    value="four"
  >
</calcite-tile-select-group>
`};Light.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile-select-group\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal", "Tile Select Group")}"\n    dir="${select("dir", ["ltr", "rtl"], "ltr", "Tile Select Group")}"\n  >\n    <calcite-tile-select\n      checked\n      description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n      heading="Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"\n      icon="layers"\n      name="light"\n      ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n      input-alignment="${select("input-alignment", ["start", "end"], "start", "Tile Select")}"\n      width="${select("width", ["full", "auto"], "auto", "Tile Select")}"\n      type="${select("type", ["radio", "checkbox"], "radio", "Tile Select")}"\n      value="one"\n    >\n    </calcite-tile-select>\n    <calcite-tile-select\n      description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n      heading="Tile title lorem ipsum"\n      icon="layers"\n      name="light"\n      ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n      input-alignment="${select("input-alignment", ["start", "end"], "start", "Tile Select")}"\n      width="${select("width", ["full", "auto"], "auto", "Tile Select")}"\n      type="${select("type", ["radio", "checkbox"], "radio", "Tile Select")}"\n      value="two"\n    >\n    </calcite-tile-select>\n    <calcite-tile-select\n      description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall. Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n      heading="Tile title lorem ipsum"\n      icon="layers"\n      name="light"\n      ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n      input-alignment="${select("input-alignment", ["start", "end"], "start", "Tile Select")}"\n      width="${select("width", ["full", "auto"], "auto", "Tile Select")}"\n      type="${select("type", ["radio", "checkbox"], "radio", "Tile Select")}"\n      value="three"\n    >\n    </calcite-tile-select>\n    <calcite-tile-select\n      description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n      heading="TiletitleloremipsumTiletitleloremipsumTiletitleloremipsumTiletitleloremipsumTiletitleloremipsumTiletitleloremipsum"\n      icon="layers"\n      name="light"\n      ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n      input-alignment="${select("input-alignment", ["start", "end"], "start", "Tile Select")}"\n      width="${select("width", ["full", "auto"], "auto", "Tile Select")}"\n      type="${select("type", ["radio", "checkbox"], "radio", "Tile Select")}"\n      value="four"\n    >\n    </calcite-tile-select>\n  </calcite-tile-select-group>\n`'}},Light.parameters),Dark.parameters=Object.assign({storySource:{source:'(): string => html`\n<calcite-tile-select-group\n  layout="${select("layout", ["horizontal", "vertical"], "horizontal", "Tile Select Group")}"\n  dir="${select("dir", ["ltr", "rtl"], "ltr", "Tile Select Group")}"\n  class="calcite-theme-dark"\n>\n  <calcite-tile-select\n    checked\n    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    heading="Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"\n    icon="layers"\n    name="dark"\n    ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n    input-alignment="${select("input-alignment", ["start", "end"], "start", "Tile Select")}"\n    type="${select("type", ["radio", "checkbox"], "radio", "Tile Select")}"\n    value="one"\n  >\n  </calcite-tile-select>\n  <calcite-tile-select\n    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    heading="Tile title lorem ipsum"\n    icon="layers"\n    name="dark"\n    ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n    input-alignment="${select("input-alignment", ["start", "end"], "start", "Tile Select")}"\n    type="${select("type", ["radio", "checkbox"], "radio", "Tile Select")}"\n    value="two"\n  >\n  </calcite-tile-select>\n  <calcite-tile-select\n    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall. Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    heading="Tile title lorem ipsum"\n    icon="layers"\n    name="dark"\n    ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n    input-alignment="${select("input-alignment", ["start", "end"], "start", "Tile Select")}"\n    type="${select("type", ["radio", "checkbox"], "radio", "Tile Select")}"\n    value="three"\n  >\n  </calcite-tile-select>\n  <calcite-tile-select\n    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    heading="Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"\n    icon="layers"\n    name="dark"\n    ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n    input-alignment="${select("input-alignment", ["start", "end"], "start", "Tile Select")}"\n    type="${select("type", ["radio", "checkbox"], "radio", "Tile Select")}"\n    value="four"\n  >\n</calcite-tile-select-group>\n`'}},Dark.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n<calcite-tile-select-group\n  dir="rtl"\n  layout="${select("layout", ["horizontal", "vertical"], "horizontal", "Tile Select Group")}"\n>\n  <calcite-tile-select\n    checked\n    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    heading="Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"\n    icon="layers"\n    ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n    input-alignment="${select("input-alignment", ["start", "end"], "end", "Tile Select")}"\n    type="${select("type", ["radio", "checkbox"], "checkbox", "Tile Select")}"\n    value="one"\n  >\n  </calcite-tile-select>\n  <calcite-tile-select\n    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    heading="Tile title lorem ipsum"\n    icon="layers"\n    ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n    input-alignment="${select("input-alignment", ["start", "end"], "end", "Tile Select")}"\n    type="${select("type", ["radio", "checkbox"], "checkbox", "Tile Select")}"\n    value="two"\n  >\n  </calcite-tile-select>\n  <calcite-tile-select\n    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall. Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    heading="Tile title lorem ipsum"\n    icon="layers"\n    ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n    input-alignment="${select("input-alignment", ["start", "end"], "end", "Tile Select")}"\n    type="${select("type", ["radio", "checkbox"], "checkbox", "Tile Select")}"\n    value="three"\n  >\n  </calcite-tile-select>\n  <calcite-tile-select\n    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    heading="Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"\n    icon="layers"\n    ${boolean("input-enabled", true, "Tile Select") && "input-enabled"}\n    input-alignment="${select("input-alignment", ["start", "end"], "end", "Tile Select")}"\n    type="${select("type", ["radio", "checkbox"], "checkbox", "Tile Select")}"\n    value="four"\n  >\n</calcite-tile-select-group>\n`'}},RTL.parameters)},"./src/components/tile-select/tile-select.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"WidthFull",(function(){return WidthFull}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={title:"Components/Tiles/Tile Select",parameters:{notes:'# calcite-tile-select\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-tile-select\n  checked\n  input-enabled\n  description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n  heading="Tile heading lorem ipsum"\n  icon="layer"\n  input-alignment="end"\n  type="radio"\n  value="one"\n></calcite-tile-select>\n```\n\n## Properties\n\n| Property         | Attribute         | Description                                                                                                                                   | Type                    | Default     |\n| ---------------- | ----------------- | --------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------- | ----------- |\n| `checked`        | `checked`         | The checked state of the tile select.                                                                                                         | `boolean`               | `false`     |\n| `description`    | `description`     | The description text that appears beneath the heading of the tile.                                                                            | `string`                | `undefined` |\n| `disabled`       | `disabled`        | The disabled state of the tile select.                                                                                                        | `boolean`               | `false`     |\n| `heading`        | `heading`         | The heading text that appears between the icon and description of the tile.                                                                   | `string`                | `undefined` |\n| `hidden`         | `hidden`          | The hidden state of the tile select.                                                                                                          | `boolean`               | `false`     |\n| `icon`           | `icon`            | The icon that appears at the top of the tile.                                                                                                 | `string`                | `undefined` |\n| `inputAlignment` | `input-alignment` | The side of the tile that the radio or checkbox appears on when inputEnabled is true.                                                         | `"end" \\| "start"`      | `"start"`   |\n| `inputEnabled`   | `input-enabled`   | Display an interactive radio or checkbox.                                                                                                     | `boolean`               | `false`     |\n| `name`           | `name`            | The name of the tile select. This name will appear in form submissions as either a radio or checkbox identifier based on the `type` property. | `any`                   | `undefined` |\n| `type`           | `type`            | The selection mode of the tile select: radio (single) or checkbox (multiple).                                                                 | `"checkbox" \\| "radio"` | `"radio"`   |\n| `value`          | `value`           | The value of the tile select. This value will appear in form submissions when this tile select is checked.                                    | `any`                   | `undefined` |\n| `width`          | `width`           | specify the width of the tile, defaults to auto                                                                                               | `"auto" \\| "full"`      | `"auto"`    |\n\n## Events\n\n| Event                     | Description                                                                                                                                   | Type               |\n| ------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `calciteTileSelectChange` | Emits a custom change event. For checkboxes, it emits when the checkbox is checked or unchecked. For radios it only emits when it is checked. | `CustomEvent<any>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding custom content. |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-tile](../tile)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-tile-select --\x3e calcite-tile\n  calcite-tile --\x3e calcite-icon\n  calcite-tile --\x3e calcite-link\n  calcite-link --\x3e calcite-icon\n  style calcite-tile-select fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}};var icon="i2DExplore",heading="Tile heading lorem ipsum",description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.",createAttributes=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"checked",commit:function(){return this.value=Object(dist.boolean)("checked",!1),delete this.build,this}},{name:"description",commit:function(){return this.value=Object(dist.text)("description",""),delete this.build,this}},{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1),delete this.build,this}},{name:"heading",commit:function(){return this.value=Object(dist.text)("heading",""),delete this.build,this}},{name:"hidden",commit:function(){return this.value=Object(dist.boolean)("hidden",!1),delete this.build,this}},{name:"icon",commit:function(){return this.value=Object(dist.select)("icon",[""].concat(_toConsumableArray(helpers.c)),""),delete this.build,this}},{name:"input-alignment",commit:function(){return this.value=Object(dist.select)("input-alignment",["start","end"],"start"),delete this.build,this}},{name:"input-enabled",commit:function(){return this.value=Object(dist.boolean)("input-enabled",!1),delete this.build,this}},{name:"type",commit:function(){return this.value=Object(dist.select)("type",["radio","checkbox"],"radio"),delete this.build,this}},{name:"value",commit:function(){return this.value=Object(dist.text)("value","one"),delete this.build,this}},{name:"width",commit:function(){return this.value=Object(dist.select)("width",["auto","full"],"auto"),delete this.build,this}}],exceptions)},Default=Object(helpers.f)((function(){return tests_utils.a`${Object(utils.a)("calcite-tile-select",createAttributes())}`}),Object(helpers.b)("calcite-tile-select").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"false"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon}]})).snapshot("Checked Off").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon}]})).snapshot("Checked On").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description}]})).snapshot("Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"heading",value:heading}]})).snapshot("Description With Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"icon",value:icon}]})).snapshot("Description With Icon").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon}]})).snapshot("Description With Heading & Icon").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"}]})).snapshot("Disabled On Input Enabled On Checked Off Radio").hover("calcite-tile-select").snapshot("Disabled On Input Enabled On Checked Off Radio Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"}]})).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Disabled On Input Enabled On Checked Off Radio Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"}]})).click("calcite-tile-select").snapshot("Disabled On Input Enabled On Checked Off Radio Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"},{name:"type",value:"checkbox"}]})).snapshot("Disabled On Input Enabled On Checked Off Checkbox").hover("calcite-tile-select").snapshot("Disabled On Input Enabled On Checked Off Checkbox Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"},{name:"type",value:"checkbox"}]})).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Disabled On Input Enabled On Checked Off Checkbox Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"},{name:"type",value:"checkbox"}]})).click("calcite-tile-select").snapshot("Disabled On Input Enabled On Checked Off Checkbox Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"}]})).snapshot("Disabled On Input Enabled On Checked On Radio").hover("calcite-tile-select").snapshot("Disabled On Input Enabled On Checked On Radio Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"}]})).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Disabled On Input Enabled On Checked On Radio Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"}]})).click("calcite-tile-select").snapshot("Disabled On Input Enabled On Checked On Radio Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"},{name:"type",value:"checkbox"}]})).snapshot("Disabled On Input Enabled On Checked On Checkbox").hover("calcite-tile-select").snapshot("Disabled On Input Enabled On Checked On Checkbox Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"},{name:"type",value:"checkbox"}]})).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Disabled On Input Enabled On Checked On Checkbox Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"},{name:"type",value:"checkbox"}]})).click("calcite-tile-select").snapshot("Disabled On Input Enabled On Checked On Checkbox Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon}]})).snapshot("Disabled On Input Enabled Off Checked Off").hover("calcite-tile-select").snapshot("Disabled On Input Enabled Off Checked Off Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon}]})).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Disabled On Input Enabled Off Checked Off Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon}]})).click("calcite-tile-select").snapshot("Disabled On Input Enabled Off Checked Off Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon}]})).snapshot("Disabled On Input Enabled Off Checked On").hover("calcite-tile-select").snapshot("Disabled On Input Enabled Off Checked On Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon}]})).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Disabled On Input Enabled Off Checked On Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon}]})).click("calcite-tile-select").snapshot("Disabled On Input Enabled Off Checked On Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading}]})).snapshot("Heading Input Enabled Off").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"input-enabled",value:"true"}]})).snapshot("Heading Input Enabled On").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"hidden",value:"true"}]})).snapshot("Hidden").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"icon",value:icon}]})).snapshot("Icon Input Enabled Off With Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).snapshot("Input Alignment End Input Enabled On Icon").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).snapshot("Input Alignment End Input Enabled On Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).snapshot("Input Alignment End Input Enabled On Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).snapshot("Input Alignment End Input Enabled On Icon + Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"icon",value:icon},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).snapshot("Input Alignment End Input Enabled On Icon + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).snapshot("Input Alignment End Input Enabled On Icon + Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"heading",value:heading},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).snapshot("Input Alignment End Input Enabled On Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"input-enabled",value:"true"}]})).snapshot("Input Enabled On Icon").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"input-enabled",value:"true"}]})).snapshot("Input Enabled On Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"}]})).snapshot("Input Enabled On Icon + Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"icon",value:icon},{name:"input-enabled",value:"true"}]})).snapshot("Input Enabled On Icon + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"}]})).snapshot("Input Enabled On Icon + Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"heading",value:heading},{name:"input-enabled",value:"true"}]})).snapshot("Input Enabled On Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon}]})).snapshot("Input Enabled Off Icon").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description}]})).snapshot("Input Enabled Off Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"icon",value:icon}]})).snapshot("Input Enabled Off Icon + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"heading",value:heading},{name:"icon",value:icon}]})).snapshot("Input Enabled Off Icon + Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"heading",value:heading}]})).snapshot("Input Enabled Off Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon}]})).rtl().snapshot("RTL Input Enabled Off Icon").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading}]})).rtl().snapshot("RTL Input Enabled Off Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description}]})).rtl().snapshot("RTL Input Enabled Off Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading}]})).rtl().snapshot("RTL Input Enabled Off Icon + Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"description",value:description}]})).rtl().snapshot("RTL Input Enabled Off Icon + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).rtl().snapshot("RTL Input Enabled Off Icon + Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"description",value:description}]})).rtl().snapshot("RTL Input Enabled Off Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Icon").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Icon + Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Icon + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Icon + Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Input Alignment End Icon").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Input Alignment End Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Input Alignment End Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Input Alignment End Icon + Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"description",value:description},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Input Alignment End Icon + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Input Alignment End Icon + Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"description",value:description},{name:"input-alignment",value:"end"},{name:"input-enabled",value:"true"}]})).rtl().snapshot("RTL Input Enabled On Input Alignment End Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).snapshot("Theme Light Input Enabled On Checked On").hover("calcite-tile-select").snapshot("Theme Light Input Enabled On Checked On Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Light Input Enabled On Checked On Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).click("calcite-tile-select").snapshot("Theme Light Input Enabled On Checked On Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).snapshot("Theme Light Input Enabled On Checked Off").hover("calcite-tile-select").snapshot("Theme Light Input Enabled On Checked Off Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Light Input Enabled On Checked Off Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).click("calcite-tile-select").snapshot("Theme Light Input Enabled On Checked Off Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).snapshot("Theme Light Input Enabled Off Checked On").hover("calcite-tile-select").snapshot("Theme Light Input Enabled Off Checked On Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Light Input Enabled Off Checked On Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).click("calcite-tile-select").snapshot("Theme Light Input Enabled Off Checked On Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).snapshot("Theme Light Input Enabled Off Checked Off").hover("calcite-tile-select").snapshot("Theme Light Input Enabled Off Checked Off Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Light Input Enabled Off Checked Off Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).click("calcite-tile-select").snapshot("Theme Light Input Enabled Off Checked Off Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).snapshot("Theme Dark Input Enabled On Checked On").hover("calcite-tile-select").snapshot("Theme Dark Input Enabled On Checked On Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Dark Input Enabled On Checked On Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).click("calcite-tile-select").snapshot("Theme Dark Input Enabled On Checked On Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).snapshot("Theme Dark Input Enabled On Checked Off").hover("calcite-tile-select").snapshot("Theme Dark Input Enabled On Checked Off Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Dark Input Enabled On Checked Off Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).click("calcite-tile-select").snapshot("Theme Dark Input Enabled On Checked Off Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).snapshot("Theme Dark Input Enabled Off Checked On").hover("calcite-tile-select").snapshot("Theme Dark Input Enabled Off Checked On Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Dark Input Enabled Off Checked On Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).click("calcite-tile-select").snapshot("Theme Dark Input Enabled Off Checked On Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).snapshot("Theme Dark Input Enabled Off Checked Off").hover("calcite-tile-select").snapshot("Theme Dark Input Enabled Off Checked Off Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Dark Input Enabled Off Checked Off Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).click("calcite-tile-select").snapshot("Theme Dark Input Enabled Off Checked Off Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).snapshot("Theme Dark Disabled Input Enabled On Checked On").hover("calcite-tile-select").snapshot("Theme Dark Disabled Input Enabled On Checked On Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Dark Disabled Input Enabled On Checked On Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).click("calcite-tile-select").snapshot("Theme Dark Disabled Input Enabled On Checked On Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).snapshot("Theme Dark Disabled Input Enabled On Checked Off").hover("calcite-tile-select").snapshot("Theme Dark Disabled Input Enabled On Checked Off Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Dark Disabled Input Enabled On Checked Off Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"input-enabled",value:"true"}]})).executeScript(Object(helpers.e)("dark")).click("calcite-tile-select").snapshot("Theme Dark Disabled Input Enabled On Checked Off Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).snapshot("Theme Dark Disabled Input Enabled Off Checked On").hover("calcite-tile-select").snapshot("Theme Dark Disabled Input Enabled Off Checked On Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Dark Disabled Input Enabled Off Checked On Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"checked",value:"true"},{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).click("calcite-tile-select").snapshot("Theme Dark Disabled Input Enabled Off Checked On Click").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).snapshot("Theme Dark Disabled Input Enabled Off Checked Off").hover("calcite-tile-select").snapshot("Theme Dark Disabled Input Enabled Off Checked Off Hover").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).executeScript('document.querySelector("calcite-tile-select").setFocus()').snapshot("Theme Dark Disabled Input Enabled Off Checked Off Focus").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"disabled",value:"true"},{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description}]})).executeScript(Object(helpers.e)("dark")).click("calcite-tile-select").snapshot("Theme Dark Disabled Input Enabled Off Checked Off Click")),WidthFull=Object(helpers.f)((function(){return tests_utils.a`${Object(utils.a)("calcite-tile-select",createAttributes())}`}),Object(helpers.b)("calcite-tile-select").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Icon").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Icon + Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"description",value:description},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Icon + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"heading",value:heading},{name:"description",value:description},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Icon + Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"description",value:description},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"input-enabled",value:"true"},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Input Enabled Icon").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"input-enabled",value:"true"},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Input Enabled Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"input-enabled",value:"true"},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Input Enabled Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"icon",value:icon},{name:"input-enabled",value:"true"},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Input Enabled Icon + Heading").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"description",value:description},{name:"icon",value:icon},{name:"input-enabled",value:"true"},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Input Enabled Icon + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"icon",value:icon},{name:"input-enabled",value:"true"},{name:"heading",value:heading},{name:"description",value:description},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Input Enabled Icon + Heading + Description").executeScript(Object(helpers.d)({story:"components-tiles-tile-select--default",knobs:[{name:"heading",value:heading},{name:"input-enabled",value:"true"},{name:"description",value:description},{name:"width",value:"full"}]})).executeScript(helpers.g).snapshot("Input Enabled Heading + Description"));Default.parameters=Object.assign({storySource:{source:'stepStory(\n  (): string => html`${create("calcite-tile-select", createAttributes())}`,\n  createSteps("calcite-tile-select")\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "false" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .snapshot("Checked Off")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .snapshot("Checked On")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [{ name: "description", value: description }]\n      })\n    )\n    .snapshot("Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "heading", value: heading }\n        ]\n      })\n    )\n    .snapshot("Description With Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .snapshot("Description With Icon")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .snapshot("Description With Heading & Icon")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Disabled On Input Enabled On Checked Off Radio")\n\n    .hover("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled On Checked Off Radio Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Disabled On Input Enabled On Checked Off Radio Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .click("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled On Checked Off Radio Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" },\n          { name: "type", value: "checkbox" }\n        ]\n      })\n    )\n    .snapshot("Disabled On Input Enabled On Checked Off Checkbox")\n\n    .hover("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled On Checked Off Checkbox Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" },\n          { name: "type", value: "checkbox" }\n        ]\n      })\n    )\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Disabled On Input Enabled On Checked Off Checkbox Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" },\n          { name: "type", value: "checkbox" }\n        ]\n      })\n    )\n    .click("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled On Checked Off Checkbox Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Disabled On Input Enabled On Checked On Radio")\n\n    .hover("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled On Checked On Radio Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Disabled On Input Enabled On Checked On Radio Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .click("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled On Checked On Radio Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" },\n          { name: "type", value: "checkbox" }\n        ]\n      })\n    )\n    .snapshot("Disabled On Input Enabled On Checked On Checkbox")\n\n    .hover("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled On Checked On Checkbox Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" },\n          { name: "type", value: "checkbox" }\n        ]\n      })\n    )\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Disabled On Input Enabled On Checked On Checkbox Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" },\n          { name: "type", value: "checkbox" }\n        ]\n      })\n    )\n    .click("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled On Checked On Checkbox Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .snapshot("Disabled On Input Enabled Off Checked Off")\n\n    .hover("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled Off Checked Off Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Disabled On Input Enabled Off Checked Off Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .click("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled Off Checked Off Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .snapshot("Disabled On Input Enabled Off Checked On")\n\n    .hover("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled Off Checked On Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Disabled On Input Enabled Off Checked On Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .click("calcite-tile-select")\n    .snapshot("Disabled On Input Enabled Off Checked On Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [{ name: "heading", value: heading }]\n      })\n    )\n    .snapshot("Heading Input Enabled Off")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Heading Input Enabled On")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [{ name: "hidden", value: "true" }]\n      })\n    )\n    .snapshot("Hidden")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .snapshot("Icon Input Enabled Off With Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Alignment End Input Enabled On Icon")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Alignment End Input Enabled On Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Alignment End Input Enabled On Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Alignment End Input Enabled On Icon + Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "icon", value: icon },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Alignment End Input Enabled On Icon + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Alignment End Input Enabled On Icon + Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Alignment End Input Enabled On Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Enabled On Icon")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Enabled On Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Enabled On Icon + Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Enabled On Icon + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Enabled On Icon + Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Input Enabled On Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [{ name: "icon", value: icon }]\n      })\n    )\n    .snapshot("Input Enabled Off Icon")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [{ name: "description", value: description }]\n      })\n    )\n    .snapshot("Input Enabled Off Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .snapshot("Input Enabled Off Icon + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "heading", value: heading },\n          { name: "icon", value: icon }\n        ]\n      })\n    )\n    .snapshot("Input Enabled Off Icon + Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "heading", value: heading }\n        ]\n      })\n    )\n    .snapshot("Input Enabled Off Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [{ name: "icon", value: icon }]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled Off Icon")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [{ name: "heading", value: heading }]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled Off Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [{ name: "description", value: description }]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled Off Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled Off Icon + Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled Off Icon + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled Off Icon + Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled Off Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Icon")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Icon + Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Icon + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Icon + Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Input Alignment End Icon")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Input Alignment End Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Input Alignment End Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Input Alignment End Icon + Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "description", value: description },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Input Alignment End Icon + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Input Alignment End Icon + Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-alignment", value: "end" },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .rtl()\n    .snapshot("RTL Input Enabled On Input Alignment End Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Theme Light Input Enabled On Checked On")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Light Input Enabled On Checked On Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Light Input Enabled On Checked On Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .click("calcite-tile-select")\n    .snapshot("Theme Light Input Enabled On Checked On Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .snapshot("Theme Light Input Enabled On Checked Off")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Light Input Enabled On Checked Off Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Light Input Enabled On Checked Off Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .click("calcite-tile-select")\n    .snapshot("Theme Light Input Enabled On Checked Off Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .snapshot("Theme Light Input Enabled Off Checked On")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Light Input Enabled Off Checked On Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Light Input Enabled Off Checked On Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .click("calcite-tile-select")\n    .snapshot("Theme Light Input Enabled Off Checked On Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .snapshot("Theme Light Input Enabled Off Checked Off")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Light Input Enabled Off Checked Off Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Light Input Enabled Off Checked Off Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .click("calcite-tile-select")\n    .snapshot("Theme Light Input Enabled Off Checked Off Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Theme Dark Input Enabled On Checked On")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Dark Input Enabled On Checked On Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Dark Input Enabled On Checked On Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .click("calcite-tile-select")\n    .snapshot("Theme Dark Input Enabled On Checked On Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Theme Dark Input Enabled On Checked Off")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Dark Input Enabled On Checked Off Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Dark Input Enabled On Checked Off Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .click("calcite-tile-select")\n    .snapshot("Theme Dark Input Enabled On Checked Off Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Theme Dark Input Enabled Off Checked On")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Dark Input Enabled Off Checked On Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Dark Input Enabled Off Checked On Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .click("calcite-tile-select")\n    .snapshot("Theme Dark Input Enabled Off Checked On Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Theme Dark Input Enabled Off Checked Off")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Dark Input Enabled Off Checked Off Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Dark Input Enabled Off Checked Off Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .click("calcite-tile-select")\n    .snapshot("Theme Dark Input Enabled Off Checked Off Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Theme Dark Disabled Input Enabled On Checked On")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Dark Disabled Input Enabled On Checked On Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Dark Disabled Input Enabled On Checked On Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .click("calcite-tile-select")\n    .snapshot("Theme Dark Disabled Input Enabled On Checked On Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Theme Dark Disabled Input Enabled On Checked Off")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Dark Disabled Input Enabled On Checked Off Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Dark Disabled Input Enabled On Checked Off Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .click("calcite-tile-select")\n    .snapshot("Theme Dark Disabled Input Enabled On Checked Off Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Theme Dark Disabled Input Enabled Off Checked On")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Dark Disabled Input Enabled Off Checked On Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Dark Disabled Input Enabled Off Checked On Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "checked", value: "true" },\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .click("calcite-tile-select")\n    .snapshot("Theme Dark Disabled Input Enabled Off Checked On Click")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .snapshot("Theme Dark Disabled Input Enabled Off Checked Off")\n\n    .hover("calcite-tile-select")\n    .snapshot("Theme Dark Disabled Input Enabled Off Checked Off Hover")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .executeScript(`document.querySelector("calcite-tile-select").setFocus()`)\n    .snapshot("Theme Dark Disabled Input Enabled Off Checked Off Focus")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "disabled", value: "true" },\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description }\n        ]\n      })\n    )\n    .executeScript(setTheme("dark"))\n    .click("calcite-tile-select")\n    .snapshot("Theme Dark Disabled Input Enabled Off Checked Off Click")\n)'}},Default.parameters),WidthFull.parameters=Object.assign({storySource:{source:'stepStory(\n  (): string => html`${create("calcite-tile-select", createAttributes())}`,\n  createSteps("calcite-tile-select")\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Icon")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Icon + Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "description", value: description },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Icon + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Icon + Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Input Enabled Icon")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "input-enabled", value: "true" },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Input Enabled Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "input-enabled", value: "true" },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Input Enabled Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Input Enabled Icon + Heading")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "description", value: description },\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Input Enabled Icon + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "icon", value: icon },\n          { name: "input-enabled", value: "true" },\n          { name: "heading", value: heading },\n          { name: "description", value: description },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Input Enabled Icon + Heading + Description")\n\n    .executeScript(\n      setKnobs({\n        story: "components-tiles-tile-select--default",\n        knobs: [\n          { name: "heading", value: heading },\n          { name: "input-enabled", value: "true" },\n          { name: "description", value: description },\n          { name: "width", value: "full" }\n        ]\n      })\n    )\n    .executeScript(toggleCentered)\n    .snapshot("Input Enabled Heading + Description")\n)'}},WidthFull.parameters)},"./src/components/tile/tile.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Light",(function(){return Light})),__webpack_require__.d(__webpack_exports__,"Dark",(function(){return Dark})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL})),__webpack_require__.d(__webpack_exports__,"LargeTile",(function(){return LargeTile}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),Light=(__webpack_exports__.default={title:"Components/Tiles/Tile",parameters:{notes:'# calcite-tile\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-tile\n  description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n  heading="Tile heading lorem ipsum"\n  href="#"\n  icon="images"\n></calcite-tile>\n```\n\n## Properties\n\n| Property      | Attribute     | Description                                                                                              | Type      | Default     |\n| ------------- | ------------- | -------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `active`      | `active`      | The active state of the tile.                                                                            | `boolean` | `false`     |\n| `description` | `description` | The description text that appears beneath the heading of the tile.                                       | `string`  | `undefined` |\n| `disabled`    | `disabled`    | When true, prevents interaction.                                                                         | `boolean` | `false`     |\n| `embed`       | `embed`       | The embed mode of the tile. When true, renders without a border and padding for use by other components. | `boolean` | `false`     |\n| `heading`     | `heading`     | The heading text that appears between the icon and description of the tile.                              | `string`  | `undefined` |\n| `hidden`      | `hidden`      | The hidden state of the tile.                                                                            | `boolean` | `false`     |\n| `href`        | `href`        | The (optional) url for the tile. (Only applies when embed is set to false)                               | `string`  | `undefined` |\n| `icon`        | `icon`        | The icon that appears at the top of the tile.                                                            | `string`  | `undefined` |\n\n## Slots\n\n| Slot              | Description                                                        |\n| ----------------- | ------------------------------------------------------------------ |\n| `"content-end"`   | A slot for adding non-actionable elements after the tile content.  |\n| `"content-start"` | A slot for adding non-actionable elements before the tile content. |\n\n## Dependencies\n\n### Used by\n\n- [calcite-tile-select](../tile-select)\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-link](../link)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-tile --\x3e calcite-icon\n  calcite-tile --\x3e calcite-link\n  calcite-link --\x3e calcite-icon\n  calcite-tile-select --\x3e calcite-tile\n  style calcite-tile fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){return tests_utils.a`
  <calcite-tile
    ${Object(helpers.a)("active",!1)}
    description="${Object(dist.text)("description","Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.")}"
    ${Object(helpers.a)("disabled",!1)}
    heading="${Object(dist.text)("heading","Tile heading lorem ipsum")}"
    ${Object(helpers.a)("hidden",!1)}
    href="${Object(dist.text)("href","#")}"
    icon="${Object(dist.select)("icon",helpers.c,"layer")}"
  >
  </calcite-tile>
`}),Dark=function(){return tests_utils.a`
  <calcite-tile
    ${Object(helpers.a)("active",!1)}
    description="${Object(dist.text)("description","Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.")}"
    ${Object(helpers.a)("disabled",!1)}
    heading="${Object(dist.text)("heading","Tile heading lorem ipsum")}"
    ${Object(helpers.a)("hidden",!1)}
    href="${Object(dist.text)("href","#")}"
    icon="${Object(dist.select)("icon",helpers.c,"layer")}"
    class="calcite-theme-dark"
  >
  </calcite-tile>
`};Dark.parameters={themes:utils.f};var RTL=function(){return tests_utils.a`
  <calcite-tile
    ${Object(helpers.a)("active",!1)}
    description="${Object(dist.text)("description","Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.")}"
    heading="${Object(dist.text)("heading","Tile heading lorem ipsum!")}"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    href="${Object(dist.text)("href","#")}"
    icon="${Object(dist.select)("icon",helpers.c,"layer")}"
    dir="rtl"
  >
  </calcite-tile>
`},LargeTile=function(){return tests_utils.a`
  <calcite-tile
    ${Object(helpers.a)("active",!1)}
    description=""
    heading="${Object(dist.text)("heading","Tile heading lorem ipsum!")}"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    href="${Object(dist.text)("href","#")}"
    icon="${Object(dist.select)("icon",helpers.c,"layer")}"
  >
  </calcite-tile>
`};Light.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile\n    ${boolean("active", false)}\n    description="${text(\n      "description",\n      "Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    )}"\n    ${boolean("disabled", false)}\n    heading="${text("heading", "Tile heading lorem ipsum")}"\n    ${boolean("hidden", false)}\n    href="${text("href", "#")}"\n    icon="${select("icon", iconNames, "layer")}"\n  >\n  </calcite-tile>\n`'}},Light.parameters),Dark.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile\n    ${boolean("active", false)}\n    description="${text(\n      "description",\n      "Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    )}"\n    ${boolean("disabled", false)}\n    heading="${text("heading", "Tile heading lorem ipsum")}"\n    ${boolean("hidden", false)}\n    href="${text("href", "#")}"\n    icon="${select("icon", iconNames, "layer")}"\n    class="calcite-theme-dark"\n  >\n  </calcite-tile>\n`'}},Dark.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile\n    ${boolean("active", false)}\n    description="${text(\n      "description",\n      "Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    )}"\n    heading="${text("heading", "Tile heading lorem ipsum!")}"\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    href="${text("href", "#")}"\n    icon="${select("icon", iconNames, "layer")}"\n    dir="rtl"\n  >\n  </calcite-tile>\n`'}},RTL.parameters),LargeTile.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile\n    ${boolean("active", false)}\n    description=""\n    heading="${text("heading", "Tile heading lorem ipsum!")}"\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    href="${text("href", "#")}"\n    icon="${select("icon", iconNames, "layer")}"\n  >\n  </calcite-tile>\n`'}},LargeTile.parameters)},"./src/components/tip-manager/resources.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return TEXT})),__webpack_require__.d(__webpack_exports__,"a",(function(){return HEADING_LEVEL}));var TEXT={defaultGroupTitle:"Tips",defaultPaginationLabel:"Tip",close:"Close",previous:"Previous",next:"Next"},HEADING_LEVEL=2},"./src/components/tip-manager/tip-manager.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"darkThemeRTL",(function(){return darkThemeRTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),resources=__webpack_require__("./src/components/tip-manager/resources.ts"),tests_utils=__webpack_require__("./src/tests/utils.ts"),createAttributes=(__webpack_exports__.default={title:"Components/Tips/Tip Manager",parameters:{notes:'# calcite-tip-manager\n\nThe `calcite-tip-manager` component contains multiple `calcite-tip`s that a user can view through via interactive arrows to go back and forth through the tips in the deck.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nRenders a tip manager using a group of tips as well as a single tip.\n\n```html\n<calcite-tip-manager>\n  <calcite-tip-group group-title="Tip Manager heading">\n    <calcite-tip heading="Tip heading" selected>\n      <img slot="thumbnail" src="https://placeimg.com/200/200" alt="This is an image." />\n      <p>\n        Tip description lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n        labore et dolore magna aliqua.\n      </p>\n      <p>\n        This is another slotted paragraph. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n        aliquip ex ea commodo consequat.\n      </p>\n      <calcite-link href="https://www.esri.com" target="_blank" rel="noopener noreferrer">A calcite-link</calcite-link>\n    </calcite-tip>\n    <calcite-tip heading="The Long Trees" hidden>\n      <img slot="thumbnail" src="https://placeimg.com/200/200" alt="This is an image." />\n      <p>This tip has an image that is a pretty tall. And the text will run out before the end of the image.</p>\n      <p>In astronomy, the terms object and body are often used interchangeably.</p>\n      <calcite-link href="https://www.esri.com" target="_blank" rel="noopener noreferrer">A calcite-link</calcite-link>\n    </calcite-tip>\n  </calcite-tip-group>\n  <calcite-tip heading="Square Nature" hidden>\n    <img slot="thumbnail" src="https://placeimg.com/200/200" alt="This is an image." />\n    <p>This tip has an image that is square. And the text will run out before the end of the image.</p>\n    <p>In astronomy, the terms object and body are often used interchangeably.</p>\n    <p>\n      In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form\n      of a document without relying on meaningful content (also called greeking). Replacing the actual content with\n      placeholder text allows designers to design the form of the content before the content itself has been produced.\n    </p>\n    <calcite-link href="https://www.esri.com" target="_blank" rel="noopener noreferrer">A calcite-link</calcite-link>\n  </calcite-tip>\n  <calcite-tip heading="The lack of imagery" hidden>\n    <p>This tip has no image. As such, the content area will take up the entire width of the tip.</p>\n    <p>\n      This is the next paragraph and should show how wide the content area is now. Of course, the width of the overall\n      tip will affect things. In astronomy, the terms object and body are often used interchangeably.\n    </p>\n    <calcite-link href="https://www.esri.com" target="_blank" rel="noopener noreferrer">A calcite-link</calcite-link>\n  </calcite-tip>\n</calcite-tip-manager>\n```\n\n## Properties\n\n| Property              | Attribute               | Description                                                       | Type                         | Default     |\n| --------------------- | ----------------------- | ----------------------------------------------------------------- | ---------------------------- | ----------- |\n| `closed`              | `closed`                | Alternate text for closing the `calcite-tip-manager`.             | `boolean`                    | `false`     |\n| `headingLevel`        | `heading-level`         | Number at which section headings should start for this component. | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6` | `undefined` |\n| `intlClose`           | `intl-close`            | Alternate text for closing the tip.                               | `string`                     | `undefined` |\n| `intlDefaultTitle`    | `intl-default-title`    | The default group title for the `calcite-tip-manager`.            | `string`                     | `undefined` |\n| `intlNext`            | `intl-next`             | Alternate text for navigating to the next tip.                    | `string`                     | `undefined` |\n| `intlPaginationLabel` | `intl-pagination-label` | Label that appears on hover of pagination icon.                   | `string`                     | `undefined` |\n| `intlPrevious`        | `intl-previous`         | Alternate text for navigating to the previous tip.                | `string`                     | `undefined` |\n\n## Events\n\n| Event                     | Description                                                             | Type               |\n| ------------------------- | ----------------------------------------------------------------------- | ------------------ |\n| `calciteTipManagerToggle` | Emitted when the `calcite-tip-manager` has been toggled open or closed. | `CustomEvent<any>` |\n\n## Methods\n\n### `nextTip() => Promise<void>`\n\nSelects the next tip to display\n\n#### Returns\n\nType: `Promise<void>`\n\n### `previousTip() => Promise<void>`\n\nSelects the previous tip to display\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding `calcite-tip`s. |\n\n## CSS Custom Properties\n\n| Name                           | Description                                           |\n| ------------------------------ | ----------------------------------------------------- |\n| `--calcite-tip-manager-height` | the maximum height of the tip-manager                 |\n| `--calcite-tip-max-width`      | the maximum width of a slotted tip within tip-manager |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-action](../action)\n- [calcite-icon](../icon)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-tip-manager --\x3e calcite-action\n  calcite-tip-manager --\x3e calcite-icon\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  style calcite-tip-manager fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"closed",commit:function(){return this.value=Object(dist.boolean)("closed",!1),delete this.build,this}},{name:"intl-close",commit:function(){return this.value=Object(dist.text)("intlClose",resources.b.close),delete this.build,this}},{name:"intl-default-title",commit:function(){return this.value=Object(dist.text)("intlDefaultTitle",resources.b.defaultGroupTitle),delete this.build,this}},{name:"intl-pagination-label",commit:function(){return this.value=Object(dist.text)("intlPaginationLabel",resources.b.defaultPaginationLabel),delete this.build,this}},{name:"intl-next",commit:function(){return this.value=Object(dist.text)("intlNext",resources.b.next),delete this.build,this}},{name:"intl-previous",commit:function(){return this.value=Object(dist.text)("intlPrevious",resources.b.previous),delete this.build,this}}],exceptions)}),tipContent=tests_utils.a`
  <calcite-tip-group group-title="Astronomy">
    <calcite-tip heading="The Red Rocks and Blue Water">
      <img slot="thumbnail" src="${Object(tests_utils.b)({width:1e3,height:600})}" alt="This is an image." />
      <p>
        This tip is how a tip should really look. It has a landscape or square image and a small amount of text content.
        This paragraph is in an "info" slot.
      </p>
      <p>
        This is another paragraph in a subsequent "info" slot. In publishing and graphic design, Lorem ipsum is a
        placeholder text commonly used to demonstrate the visual form of a document without relying on meaningful
        content (also called greeking). Replacing the actual content with placeholder text allows designers to design
        the form of the content before the content itself has been produced.
      </p>
      <a href="http://www.esri.com">This is the "link" slot.</a>
    </calcite-tip>
    <calcite-tip heading="The Long Trees">
      <img slot="thumbnail" src="${Object(tests_utils.b)({width:1e3,height:600})}" alt="This is an image." />
      <p>This tip has an image that is a pretty tall. And the text will run out before the end of the image.</p>
      <p>In astronomy, the terms object and body are often used interchangeably.</p>
      <a href="http://www.esri.com">View Esri</a>
    </calcite-tip>
  </calcite-tip-group>
  <calcite-tip heading="Square Nature">
    <img slot="thumbnail" src="${Object(tests_utils.b)({width:1e3,height:1e3})}" alt="This is an image." />
    <p>This tip has an image that is square. And the text will run out before the end of the image.</p>
    <p>In astronomy, the terms object and body are often used interchangeably.</p>
    <p>
      In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form
      of a document without relying on meaningful content (also called greeking). Replacing the actual content with
      placeholder text allows designers to design the form of the content before the content itself has been produced.
    </p>
    <a href="http://www.esri.com">View Esri</a>
  </calcite-tip>
  <calcite-tip heading="The lack of imagery">
    <p>This tip has no image. As such, the content area will take up the entire width of the tip.</p>
    <p>
      This is the next paragraph and should show how wide the content area is now. Of course, the width of the overall
      tip will affect things. In astronomy, the terms object and body are often used interchangeably.
    </p>
    <a href="http://www.esri.com">View Esri</a>
  </calcite-tip>
`,basic=function(){return Object(utils.a)("calcite-tip-manager",createAttributes(),tipContent)},darkThemeRTL=function(){return Object(utils.a)("calcite-tip-manager",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-theme-dark"}]),tipContent)};darkThemeRTL.parameters={themes:utils.f},basic.parameters=Object.assign({storySource:{source:'(): string => create("calcite-tip-manager", createAttributes(), tipContent)'}},basic.parameters),darkThemeRTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-tip-manager",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      { name: "dir", value: "rtl" },\n      { name: "class", value: "calcite-theme-dark" }\n    ]),\n    tipContent\n  )'}},darkThemeRTL.parameters)},"./src/components/tip/tip.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"darkThemeRTL",(function(){return darkThemeRTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),resources=__webpack_require__("./src/components/tip-manager/resources.ts"),TEXT_close="Close",tests_utils=(resources.a,__webpack_require__("./src/tests/utils.ts")),createAttributes=(__webpack_exports__.default={title:"Components/Tips/Tip",parameters:{notes:['# calcite-tip\n\nThe `calcite-tip` component can comprise of an image, text and hyperlink to give helpful hints to a user about using the platform.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nRenders a non-dismissible tip with a heading, thumbnail, info and a link.\n\n```html\n<calcite-tip non-dismissible heading="Celestial Bodies!">\n  <img slot="thumbnail" src="https://placeimg.com/1000/600" alt="This is an image of nature." />\n  <p>Normal tip with a landscape or square image and a small amount of text in the "info" slot.</p>\n  <a href="http://www.esri.com">Put a link hurr!</a>\n</calcite-tip>\n```\n\n## Properties\n\n| Property         | Attribute         | Description                                                                       | Type                         | Default     |\n| ---------------- | ----------------- | --------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `dismissed`      | `dismissed`       | No longer displays the tip.                                                       | `boolean`                    | `false`     |\n| `heading`        | `heading`         | The heading of the tip.                                                           | `string`                     | `undefined` |\n| `headingLevel`   | `heading-level`   | Number at which section headings should start for this component.                 | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6` | `undefined` |\n| `intlClose`      | `intl-close`      | Alternate text for closing the tip.                                               | `string`                     | `undefined` |\n| `nonDismissible` | `non-dismissible` | Indicates whether the tip can be dismissed.                                       | `boolean`                    | `false`     |\n| `selected`       | `selected`        | The selected state of the tip if it is being used inside a `calcite-tip-manager`. | `boolean`                    | `false`     |\n\n## Events\n\n| Event               | Description                                    | Type               |\n| ------------------- | ---------------------------------------------- | ------------------ |\n| `calciteTipDismiss` | Emitted when the component has been dismissed. | `CustomEvent<any>` |\n\n## Slots\n\n| Slot          | Description                                         |\n| ------------- | --------------------------------------------------- |\n|               | A slot for adding text and a hyperlink.             |\n| `"thumbnail"` | A slot for adding an HTML image element to the tip. |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-action](../action)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-tip --\x3e calcite-action\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  style calcite-tip fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n',"# calcite-tip-group\n\n`calcite-tip-group` is a wrapper for multiple `calcite-tip`s and is housed in `calcite-tip-manager`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property     | Attribute     | Description                         | Type     | Default     |\n| ------------ | ------------- | ----------------------------------- | -------- | ----------- |\n| `groupTitle` | `group-title` | The title used for all nested tips. | `string` | `undefined` |\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding `calcite-tip`s. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n"]}},function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"dismissed",commit:function(){return this.value=Object(dist.boolean)("dismissed",!1),delete this.build,this}},{name:"non-dismissible",commit:function(){return this.value=Object(dist.boolean)("nonDismissible",!1),delete this.build,this}},{name:"heading",commit:function(){return this.value=Object(dist.text)("heading","My Tip"),delete this.build,this}},{name:"intl-close",commit:function(){return this.value=Object(dist.text)("intlClose",TEXT_close),delete this.build,this}}],exceptions)}),html=`<img slot="thumbnail" src="${Object(tests_utils.b)({width:1e3,height:600})}" alt="This is an image." />Enim nascetur erat faucibus ornare varius arcu fames bibendum habitant felis elit ante. Nibh morbi massa curae; leo semper diam aenean congue taciti eu porta. Varius faucibus ridiculus donec. Montes sit ligula purus porta ante lacus habitasse libero cubilia purus! In quis congue arcu maecenas felis cursus pellentesque nascetur porta donec non. Quisque, rutrum ligula pharetra justo habitasse facilisis rutrum neque. Magnis nostra nec nulla dictumst taciti consectetur. Non porttitor tempor orci dictumst magna porta vitae. </div><a href="http://www.esri.com">This is a link</a>.`,basic=function(){return Object(utils.a)("calcite-tip",createAttributes(),html)},darkThemeRTL=function(){return Object(utils.a)("calcite-tip",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-theme-dark"}]),html)};darkThemeRTL.parameters={themes:utils.f},basic.parameters=Object.assign({storySource:{source:'(): string => create("calcite-tip", createAttributes(), html)'}},basic.parameters),darkThemeRTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-tip",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      { name: "dir", value: "rtl" },\n      { name: "class", value: "calcite-theme-dark" }\n    ]),\n    html\n  )'}},darkThemeRTL.parameters)},"./src/components/tooltip/tooltip.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./src/tests/utils.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),calcite_placements=["auto","auto-start","auto-end","top-start","top-end","bottom-start","bottom-end","right-start","right-end","left-start","left-end"].concat(["leading-start","leading","leading-end","trailing-end","trailing","trailing-start"]),Simple=(__webpack_exports__.default={title:"Components/Tooltip",parameters:{notes:'# calcite-tooltip\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n```html\n<calcite-tooltip placement="auto" reference-element="tooltip-button"\n  >This is the message of the tooltip</calcite-tooltip\n>\n<calcite-tooltip-manager>\n  <p>\n    Lorem <a id="tooltip-button" href="#">ipsum</a> dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n    incididunt ut labore et dolore magna aliqua.\n  </p>\n</calcite-tooltip-manager>\n```\n\n## Properties\n\n| Property             | Attribute             | Description                                                                                                                                                                                                                                                                                                     | Type                                        | Default                 |\n| -------------------- | --------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------- | ----------------------- |\n| `label` _(required)_ | `label`               | Accessible name for the component                                                                                                                                                                                                                                                                               | `string`                                    | `undefined`             |\n| `offsetDistance`     | `offset-distance`     | Offset the position of the tooltip away from the reference element.                                                                                                                                                                                                                                             | `number`                                    | `defaultOffsetDistance` |\n| `offsetSkidding`     | `offset-skidding`     | Offset the position of the tooltip along the reference element.                                                                                                                                                                                                                                                 | `number`                                    | `0`                     |\n| `open`               | `open`                | Display and position the component.                                                                                                                                                                                                                                                                             | `boolean`                                   | `false`                 |\n| `overlayPositioning` | `overlay-positioning` | Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the \'fixed\' value.                                                                                                                                                                              | `"absolute" \\| "fixed"`                     | `"absolute"`            |\n| `placement`          | `placement`           | Determines where the component will be positioned relative to the referenceElement.                                                                                                                                                                                                                             | `Placement \\| PlacementRtl \\| VariationRtl` | `"auto"`                |\n| `referenceElement`   | `reference-element`   | Reference HTMLElement used to position this component according to the placement property. As a convenience, a string ID of the reference element can be used. However, setting this property to use an HTMLElement is preferred so that the component does not need to query the DOM for the referenceElement. | `HTMLElement \\| string`                     | `undefined`             |\n\n## Methods\n\n### `reposition() => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot | Description             |\n| ---- | ----------------------- |\n|      | A slot for adding text. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n'}},Object(helpers.f)((function(){return utils.a`
    <div style="width: 400px;">
      ${'<calcite-tooltip-manager>Ut enim ad minim veniam, quis <calcite-button appearance="inline" title="Reference element" id="reference-element">nostrud exercitation</calcite-button> ullamco laboris nisi ut aliquip ex ea commodo consequat.</calcite-tooltip-manager>'}
      <calcite-tooltip
        reference-element="reference-element"
        placement="${Object(dist.select)("placement",calcite_placements,"auto")}"
        offset-distance="${Object(dist.number)("offset-distance",6)}"
        offset-skidding="${Object(dist.number)("offset-skidding",0)}"
        ${Object(helpers.a)("open",!1)}
      >
        ${"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"}
      </calcite-tooltip>
    </div>
  `}),Object(helpers.b)("calcite-tooltip").snapshot("Default").hover("#reference-element").snapshot("Open").rtl().snapshot("Rtl").ltr().executeScript(Object(helpers.e)("dark")).snapshot("Dark theme")));Simple.parameters=Object.assign({storySource:{source:'stepStory(\n  (): string => html`\n    <div style="width: 400px;">\n      ${referenceElementHTML}\n      <calcite-tooltip\n        reference-element="reference-element"\n        placement="${select("placement", calcite_placements, "auto")}"\n        offset-distance="${number("offset-distance", 6)}"\n        offset-skidding="${number("offset-skidding", 0)}"\n        ${boolean("open", false)}\n      >\n        ${contentHTML}\n      </calcite-tooltip>\n    </div>\n  `,\n  createSteps("calcite-tooltip")\n    .snapshot("Default")\n    .hover("#reference-element")\n    .snapshot("Open")\n    .rtl()\n    .snapshot("Rtl")\n    .ltr()\n    .executeScript(setTheme("dark"))\n    .snapshot("Dark theme")\n)'}},Simple.parameters)},"./src/components/tree/tree.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL})),__webpack_require__.d(__webpack_exports__,"DarkMode",(function(){return DarkMode}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),treeItems='\n  <calcite-tree-item>\n    <a>Child 1</a>\n  </calcite-tree-item>\n  <calcite-tree-item>\n    <a>Child 2</a>\n    <calcite-tree slot="children">\n      <calcite-tree-item>\n        <a>Grandchild 1</a>\n      </calcite-tree-item>\n      <calcite-tree-item>\n        <a>Grandchild 2</a>\n        <calcite-tree slot="children">\n          <calcite-tree-item>\n            <a>Great-Grandchild 1</a>\n          </calcite-tree-item>\n          <calcite-tree-item>\n            <a>Great-Grandchild 2</a>\n          </calcite-tree-item>\n        </calcite-tree>\n      </calcite-tree-item>\n    </calcite-tree>\n  </calcite-tree-item>\n  <calcite-tree-item>\n    <a>Child 3</a>\n    <calcite-tree slot="children">\n      <calcite-tree-item>\n        <a>Grandchild 1</a>\n      </calcite-tree-item>\n      <calcite-tree-item>\n        <a>Grandchild 2</a>\n      </calcite-tree-item>\n    </calcite-tree>\n  </calcite-tree-item>\n',Simple=(__webpack_exports__.default={title:"Components/Tree",parameters:{notes:['# calcite-tree\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\n`<calcite-tree>` can be used as a sidebar navigation tree with optional lines and different selection modes.\n\n```html\n<calcite-tree>\n  <calcite-tree-item>\n    <a href="#">Child 1</a>\n    <calcite-tree slot="children">\n      <calcite-tree-item>\n        <a href="#">Grandchild 1</a>\n      </calcite-tree-item>\n      <calcite-tree-item>\n        <a href="#">Grandchild 2</a>\n      </calcite-tree-item>\n    </calcite-tree>\n  </calcite-tree-item>\n</calcite-tree>\n```\n\n## Properties\n\n| Property        | Attribute        | Description                                                                                                              | Type                                                                                                                                                  | Default                    |\n| --------------- | ---------------- | ------------------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------- |\n| `inputEnabled`  | `input-enabled`  | <span style="color:red">**[DEPRECATED]**</span> use "ancestors" selection-mode for checkbox input<br/><br/>Display input | `boolean`                                                                                                                                             | `false`                    |\n| `lines`         | `lines`          | Display indentation guide lines                                                                                          | `boolean`                                                                                                                                             | `false`                    |\n| `scale`         | `scale`          | Specify the scale of the tree, defaults to m                                                                             | `"l" \\| "m" \\| "s"`                                                                                                                                   | `"m"`                      |\n| `selectionMode` | `selection-mode` | Customize how tree selection works (single, multi, children, multi-children, ancestors)                                  | `TreeSelectionMode.Ancestors \\| TreeSelectionMode.Children \\| TreeSelectionMode.Multi \\| TreeSelectionMode.MultiChildren \\| TreeSelectionMode.Single` | `TreeSelectionMode.Single` |\n\n## Events\n\n| Event               | Description                                                                                                                                     | Type                            |\n| ------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------- |\n| `calciteTreeSelect` | Emitted when user selects/deselects tree items. An object including an array of selected items will be passed in the event\'s `detail` property. | `CustomEvent<TreeSelectDetail>` |\n\n## Slots\n\n| Slot | Description                              |\n| ---- | ---------------------------------------- |\n|      | A slot for `calcite-tree-item` elements. |\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n','# calcite-tree-item\n\n`<calcite-tree-item>` is used to represent a single item in a `<calcite-tree>`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property   | Attribute  | Description                              | Type      | Default |\n| ---------- | ---------- | ---------------------------------------- | --------- | ------- |\n| `expanded` | `expanded` | True if the item is in an expanded state | `boolean` | `false` |\n| `selected` | `selected` | Is the item currently selected           | `boolean` | `false` |\n\n## Slots\n\n| Slot         | Description                                       |\n| ------------ | ------------------------------------------------- |\n|              | A slot for adding content to the item.            |\n| `"children"` | A slot for adding nested `calcite-tree` elements. |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-checkbox](../checkbox)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-tree-item --\x3e calcite-icon\n  calcite-tree-item --\x3e calcite-checkbox\n  style calcite-tree-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n']}},function(){return tests_utils.a`
  <calcite-tree
    ${Object(helpers.a)("lines",!1)}
    selection-mode="${Object(dist.select)("selection-mode",["single","multi","children","multi-children","ancestors"],"single")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    ${treeItems}
  </calcite-tree>
`}),RTL=function(){return tests_utils.a`
  <calcite-tree
    dir="rtl"
    ${Object(helpers.a)("lines",!1)}
    selection-mode="${Object(dist.select)("selection-mode",["single","multi","children","multi-children","ancestors"],"single")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    ${treeItems}
  </calcite-tree>
`},DarkMode=function(){return tests_utils.a`
  <calcite-tree
    class="calcite-theme-dark"
    ${Object(helpers.a)("lines",!1)}
    selection-mode="${Object(dist.select)("selection-mode",["single","multi","children","multi-children","ancestors"],"single")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    ${treeItems}
  </calcite-tree>
`};DarkMode.storyName="Dark mode",DarkMode.parameters={themes:utils.f},Simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tree\n    ${boolean("lines", false)}\n    selection-mode="${select(\n      "selection-mode",\n      ["single", "multi", "children", "multi-children", "ancestors"],\n      "single"\n    )}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    ${treeItems}\n  </calcite-tree>\n`'}},Simple.parameters),RTL.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tree\n    dir="rtl"\n    ${boolean("lines", false)}\n    selection-mode="${select(\n      "selection-mode",\n      ["single", "multi", "children", "multi-children", "ancestors"],\n      "single"\n    )}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    ${treeItems}\n  </calcite-tree>\n`'}},RTL.parameters),DarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tree\n    class="calcite-theme-dark"\n    ${boolean("lines", false)}\n    selection-mode="${select(\n      "selection-mode",\n      ["single", "multi", "children", "multi-children", "ancestors"],\n      "single"\n    )}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    ${treeItems}\n  </calcite-tree>\n`'}},DarkMode.parameters)},"./src/components/value-list/value-list.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"basic",(function(){return basic})),__webpack_require__.d(__webpack_exports__,"darkThemeRTL",(function(){return darkThemeRTL}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),tests_utils=__webpack_require__("./src/tests/utils.ts"),createAttributes=(__webpack_exports__.default={title:"Components/Value List",parameters:{notes:['# calcite-value-list\n\n`calcite-value-list` is housed in a panel and contains `calcite-value-list-item`s. The value list has options for drag and drop, label editing, and single or multi-select of items which can be done through shift+click.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Usage\n\n### Basic\n\nRenders a value list with multiple items able to be selected and a filter.\n\n```html\n<calcite-value-list multiple filter-enabled>\n  <calcite-value-list-item label="Dogs" description="Man\'s best friend" value="dogs">\n    <calcite-action slot="actions-end" icon="plus"></calcite-action>\n  </calcite-value-list-item>\n  <calcite-value-list-item label="Cats" description="Independent and fluffy" value="cats">\n    <calcite-action slot="actions-end" icon="plus"></calcite-action>\n  </calcite-value-list-item>\n  <calcite-value-list-item\n    label="Fish. But not just any fish, a tiger fish caught live in the Atlantic Ocean while on vacation."\n    description="Easy to care for."\n    value="fish"\n  >\n    <calcite-action slot="actions-end" icon="plus"></calcite-action>\n  </calcite-value-list-item>\n</calcite-value-list>\n```\n\n### Drag-and-drop\n\nRenders a value list with drag and drop capability between the items.\n\n```html\n<calcite-value-list drag-enabled>\n  <calcite-value-list-item label="Rent" description="Mortgage + housing costs" value="rent"> </calcite-value-list-item>\n  <calcite-value-list-item label="Food" description="its what you eat." value="food"> </calcite-value-list-item>\n  <calcite-value-list-item label="Utilities" value="utilities"> </calcite-value-list-item>\n  <calcite-value-list-item label="Entertainment" description="Toys and leisure" value="entertainment">\n  </calcite-value-list-item>\n</calcite-value-list>\n```\n\n### Label-editing-and-single-select\n\nRenders a value list with label editing and single select.\n\n```html\n<calcite-value-list label-editing-enabled>\n  <calcite-value-list-item\n    label="2018 Generation Alpha Population (Born 2017 or Later) [updated 2019-09-18]"\n    description="GENALPHACY"\n    value="GENALPHACY"\n  >\n  </calcite-value-list-item>\n  <calcite-value-list-item\n    label="2010-2018 Households: Annual Growth Rate (Esri)"\n    description="HHGRW10CY-2019-09-18.001ZZYLKJ"\n    value="HHGRW10CY"\n  >\n  </calcite-value-list-item>\n  <calcite-value-list-item\n    label="2010-2018 Households: Annual Growth Rate (Esri)"\n    description="HHGRW10CY-2019-09-18.001ZZYYZLKJ"\n    value="HHGRW10CY2"\n  >\n  </calcite-value-list-item>\n</calcite-value-list>\n```\n\n## Properties\n\n| Property                | Attribute                 | Description                                                                                                                                                                                                                                       | Type      | Default     |\n| ----------------------- | ------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `disabled`              | `disabled`                | When true, disabled prevents interaction. This state shows items with lower opacity/grayed.                                                                                                                                                       | `boolean` | `false`     |\n| `dragEnabled`           | `drag-enabled`            | When true, the items will be sortable via drag and drop.                                                                                                                                                                                          | `boolean` | `false`     |\n| `filterEnabled`         | `filter-enabled`          | When true, an input appears at the top of the list that can be used by end users to filter items in the list.                                                                                                                                     | `boolean` | `false`     |\n| `filterPlaceholder`     | `filter-placeholder`      | Placeholder text for the filter input field.                                                                                                                                                                                                      | `string`  | `undefined` |\n| `group`                 | `group`                   | The list\'s group identifier. To drag elements from one list into another, both lists must have the same group value.                                                                                                                              | `string`  | `undefined` |\n| `loading`               | `loading`                 | When true, content is waiting to be loaded. This state shows a busy indicator.                                                                                                                                                                    | `boolean` | `false`     |\n| `multiple`              | `multiple`                | Multiple Works similar to standard radio buttons and checkboxes. When true, a user can select multiple items at a time. When false, only a single item can be selected at a time and selecting a new item will deselect any other selected items. | `boolean` | `false`     |\n| `selectionFollowsFocus` | `selection-follows-focus` | When true and single-selection is enabled, the selection will change when navigating items via the keyboard.                                                                                                                                      | `boolean` | `false`     |\n\n## Events\n\n| Event                    | Description                                           | Type                            |\n| ------------------------ | ----------------------------------------------------- | ------------------------------- |\n| `calciteListChange`      | Emitted when any of the item selections have changed. | `CustomEvent<Map<string, any>>` |\n| `calciteListOrderChange` | Emitted when the order of the list has changed.       | `CustomEvent<any[]>`            |\n\n## Methods\n\n### `getSelectedItems() => Promise<Map<string, HTMLCalciteValueListItemElement>>`\n\nReturns the currently selected items\n\n#### Returns\n\nType: `Promise<Map<string, any>>`\n\n### `setFocus(focusId?: ListFocusId) => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot             | Description                                                                                   |\n| ---------------- | --------------------------------------------------------------------------------------------- |\n|                  | A slot for adding `calcite-value-list-item` elements. Items are displayed as a vertical list. |\n| `"menu-actions"` | A slot for adding a button + menu combo for performing actions like sorting.                  |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-filter](../filter)\n- [calcite-scrim](../scrim)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-value-list --\x3e calcite-filter\n  calcite-value-list --\x3e calcite-scrim\n  calcite-filter --\x3e calcite-scrim\n  calcite-filter --\x3e calcite-input\n  calcite-filter --\x3e calcite-icon\n  calcite-scrim --\x3e calcite-loader\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  style calcite-value-list fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n','# calcite-value-list-item\n\n`calcite-value-list-item`s are cards contained in a `calcite-value-list`. They each can have a label and description, an icon and can have their label\'s be editable (inherited from `calcite-value-list`). The developer can disable or preselect each list item and give it a value.\n\n\x3c!-- Auto Generated Below --\x3e\n\n## Properties\n\n| Property             | Attribute         | Description                                                                                       | Type                                                        | Default     |\n| -------------------- | ----------------- | ------------------------------------------------------------------------------------------------- | ----------------------------------------------------------- | ----------- |\n| `description`        | `description`     | An optional description for this item. Will appear below the label text.                          | `string`                                                    | `undefined` |\n| `disabled`           | `disabled`        | When true, the item cannot be clicked and is visually muted                                       | `boolean`                                                   | `false`     |\n| `icon`               | `icon`            | Determines the icon SVG symbol that will be shown. Options are circle, square, grip or null.      | `ICON_TYPES.circle \\| ICON_TYPES.grip \\| ICON_TYPES.square` | `null`      |\n| `label` _(required)_ | `label`           | The main label for this item. Appears next to the icon.                                           | `string`                                                    | `undefined` |\n| `metadata`           | --                | Used to provide additional metadata to an item, primarily used when the parent list has a filter. | `{ [x: string]: unknown; }`                                 | `undefined` |\n| `nonInteractive`     | `non-interactive` | When true, prevents the content of the list item from user interaction.                           | `boolean`                                                   | `false`     |\n| `removable`          | `removable`       | Set this to true to display a remove action that removes the item from the list.                  | `boolean`                                                   | `false`     |\n| `selected`           | `selected`        | Set this to true to pre-select an item. Toggles when an item is checked/unchecked.                | `boolean`                                                   | `false`     |\n| `value` _(required)_ | `value`           | The item\'s associated value.                                                                      | `any`                                                       | `undefined` |\n\n## Events\n\n| Event                   | Description                                    | Type                |\n| ----------------------- | ---------------------------------------------- | ------------------- |\n| `calciteListItemRemove` | Emitted whenever the remove button is pressed. | `CustomEvent<void>` |\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n### `toggleSelected(coerce?: boolean) => Promise<void>`\n\nUsed to toggle the selection state. By default this won\'t trigger an event.\nThe first argument allows the value to be coerced, rather than swapping values.\n\n#### Returns\n\nType: `Promise<void>`\n\n## Slots\n\n| Slot              | Description                                                         |\n| ----------------- | ------------------------------------------------------------------- |\n| `"actions-end"`   | A slot for adding actions or content to the end side of the item.   |\n| `"actions-start"` | A slot for adding actions or content to the start side of the item. |\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-pick-list-item](../pick-list-item)\n\n### Graph\n\n```mermaid\ngraph TD;\n  calcite-value-list-item --\x3e calcite-icon\n  calcite-value-list-item --\x3e calcite-pick-list-item\n  calcite-pick-list-item --\x3e calcite-icon\n  calcite-pick-list-item --\x3e calcite-action\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  style calcite-value-list-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n---\n\n_Built with [StencilJS](https://stenciljs.com/)_\n']}},function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1),delete this.build,this}},{name:"drag-enabled",commit:function(){return this.value=Object(dist.boolean)("dragEnabled",!1),delete this.build,this}},{name:"filter-enabled",commit:function(){return this.value=Object(dist.boolean)("filterEnabled",!1),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1),delete this.build,this}},{name:"multiple",commit:function(){return this.value=Object(dist.boolean)("multiple",!1),delete this.build,this}},{name:"selection-follows-focus",commit:function(){return this.value=Object(dist.boolean)("selection-follows-focus",!1),delete this.build,this}}],exceptions)}),action=tests_utils.a`
  <calcite-action
    slot="actions-end"
    label="click-me"
    onClick="console.log('clicked');"
    appearance="clear"
    scale="s"
    icon="ellipsis"
  ></calcite-action>
`,basic=function(){return Object(utils.a)("calcite-value-list",createAttributes(),tests_utils.a`
      <calcite-value-list-item label="Dogs" description="Man's best friend" value="dogs">
        ${action}
      </calcite-value-list-item>
      <calcite-value-list-item label="Cats" description="Independent and fluffy" value="cats">
        ${action}
      </calcite-value-list-item>
      <calcite-value-list-item
        label="Fish. But not just any fish, a tiger fish caught live in the Atlantic Ocean while on vacation."
        description="Easy to care for."
        value="fish"
      >
        ${action}
      </calcite-value-list-item>
    `)},darkThemeRTL=function(){return Object(utils.a)("calcite-value-list",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-theme-dark"}]),tests_utils.a`
      <calcite-value-list-item label="Dogs" description="Man's best friend" value="dogs">
        ${action}
      </calcite-value-list-item>
      <calcite-value-list-item label="Cats" description="Independent and fluffy" value="cats">
        ${action}
      </calcite-value-list-item>
      <calcite-value-list-item
        label="Fish. But not just any fish, a tiger fish caught live in the Atlantic Ocean while on vacation."
        description="Easy to care for."
        value="fish"
      >
        ${action}
      </calcite-value-list-item>
    `)};darkThemeRTL.parameters={themes:utils.f},basic.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-value-list",\n    createAttributes(),\n    html`\n      <calcite-value-list-item label="Dogs" description="Man\'s best friend" value="dogs">\n        ${action}\n      </calcite-value-list-item>\n      <calcite-value-list-item label="Cats" description="Independent and fluffy" value="cats">\n        ${action}\n      </calcite-value-list-item>\n      <calcite-value-list-item\n        label="Fish. But not just any fish, a tiger fish caught live in the Atlantic Ocean while on vacation."\n        description="Easy to care for."\n        value="fish"\n      >\n        ${action}\n      </calcite-value-list-item>\n    `\n  )'}},basic.parameters),darkThemeRTL.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-value-list",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      { name: "dir", value: "rtl" },\n      { name: "class", value: "calcite-theme-dark" }\n    ]),\n    html`\n      <calcite-value-list-item label="Dogs" description="Man\'s best friend" value="dogs">\n        ${action}\n      </calcite-value-list-item>\n      <calcite-value-list-item label="Cats" description="Independent and fluffy" value="cats">\n        ${action}\n      </calcite-value-list-item>\n      <calcite-value-list-item\n        label="Fish. But not just any fish, a tiger fish caught live in the Atlantic Ocean while on vacation."\n        description="Easy to care for."\n        value="fish"\n      >\n        ${action}\n      </calcite-value-list-item>\n    `\n  )'}},darkThemeRTL.parameters)},"./src/tests/utils.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return html})),__webpack_require__.d(__webpack_exports__,"b",(function(){return placeholderImage}));var dedent__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/dedent/dist/dedent.js"),dedent__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(dedent__WEBPACK_IMPORTED_MODULE_0__);function html(strings){for(var _len=arguments.length,placeholders=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)placeholders[_key-1]=arguments[_key];return dedent__WEBPACK_IMPORTED_MODULE_0___default.a.apply(void 0,[strings].concat(placeholders))}function placeholderImage(_ref3){var _ref3$width=_ref3.width,width=void 0===_ref3$width?300:_ref3$width,_ref3$height=_ref3.height,height=void 0===_ref3$height?150:_ref3$height,_ref3$text=_ref3.text,text=void 0===_ref3$text?`${width}×${height}`:_ref3$text,_ref3$fontFamily=_ref3.fontFamily,fontFamily=void 0===_ref3$fontFamily?"sans-serif":_ref3$fontFamily,_ref3$fontWeight=_ref3.fontWeight,fontWeight=void 0===_ref3$fontWeight?"bold":_ref3$fontWeight,_ref3$fontSize=_ref3.fontSize,fontSize=void 0===_ref3$fontSize?Math.floor(.2*Math.min(width,height)):_ref3$fontSize,_ref3$dy=_ref3.dy,dy=void 0===_ref3$dy?.35*fontSize:_ref3$dy,_ref3$bgColor=_ref3.bgColor,bgColor=void 0===_ref3$bgColor?"#ddd":_ref3$bgColor,_ref3$textColor=_ref3.textColor,textColor=void 0===_ref3$textColor?"rgba(0,0,0,0.5)":_ref3$textColor,_ref3$dataUri=_ref3.dataUri,dataUri=void 0===_ref3$dataUri||_ref3$dataUri,_ref3$charset=_ref3.charset,charset=void 0===_ref3$charset?"UTF-8":_ref3$charset,cleaned=`<svg xmlns="http://www.w3.org/2000/svg" width="${width}" height="${height}" viewBox="0 0 ${width} ${height}">\n    <rect fill="${bgColor}" width="${width}" height="${height}"/>\n    <text fill="${textColor}" font-family="${fontFamily}" font-size="${fontSize}" dy="${dy}" font-weight="${fontWeight}" x="50%" y="50%" text-anchor="middle">${text}</text>\n  </svg>`.replace(/[\t\n\r]/gim,"").replace(/\s\s+/g," ").replace(/'/gim,"\\i");return dataUri?`data:image/svg+xml;charset=${charset},${encodeURIComponent(cleaned).replace(/\(/g,"%28").replace(/\)/g,"%29")}`:cleaned}},"./src/utils/locale.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return locales}));var locales=["ar","bg","bs","ca","cs","da","de","de-CH","el","en","en-AU","en-CA","en-GB","es","es-MX","et","fi","fr","fr-CH","he","hi","hr","hu","id","it","it-CH","ja","ko","lt","lv","mk","nb","nl","pl","pt","pt-PT","ro","ru","sk","sl","sr","sv","th","tr","uk","vi","zh-CN","zh-HK","zh-TW"]},"./src/utils/resources.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return THEMES})),__webpack_require__.d(__webpack_exports__,"a",(function(){return CSS_UTILITY}));var THEMES=[{name:"light",className:"calcite-theme-light"},{name:"dark",className:"calcite-theme-dark"},{name:"auto",className:"calcite-theme-auto"}],CSS_UTILITY={autoTheme:"calcite-theme-auto",darkTheme:"calcite-theme-dark",lightTheme:"calcite-theme-light",rtl:"calcite--rtl"}},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/html/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/html/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/html/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-knobs/dist/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-a11y/dist/esm/a11yRunner.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-a11y/dist/esm/a11yHighlight.js-generated-config-entry.js"),__webpack_require__("./node_modules/@whitespace/storybook-addon-html/out/preset/addDecorators.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.ts-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,5,6]]]);